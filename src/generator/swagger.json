{
    "swagger": "2.0",
    "info": {
        "version": "v1",
        "title": "SellerCloud Delta Client API Documentation"
    },
    "host": "tt.api.sellercloud.com",
    "basePath": "/rest",
    "schemes": ["https"],
    "paths": {
        "/api/token": {
            "post": {
                "tags": ["Authentication"],
                "summary": "Receive a new token",
                "operationId": "Authentication_Create",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Username and pasword",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.WebApi.Models.Authentication.CreateTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.WebApi.Models.Authentication.CreateTokenResponse"
                        }
                    }
                }
            }
        },
        "/api/Catalog/BasicInfo": {
            "put": {
                "tags": ["Catalog"],
                "summary": "Update basic catalog info",
                "operationId": "Catalog_UpdateBasicInfo",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Product info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Product.UpdateBasicInfoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Catalog/{id}/Prices": {
            "get": {
                "tags": ["Catalog"],
                "summary": "Get product prices [obsolete]",
                "operationId": "Catalog_GetProductPrices",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of product",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Product.ProductPricesDto"
                        }
                    }
                }
            },
            "put": {
                "tags": ["Catalog"],
                "summary": "Update product prices [obsolete]",
                "operationId": "Catalog_UpdateProductPrices",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of product",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Update data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Product.ProductPricesDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Catalog/Prices": {
            "get": {
                "tags": ["Catalog"],
                "summary": "Get product prices",
                "operationId": "Catalog_GetProductPricesV2",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "productID",
                        "in": "query",
                        "description": "ID of product",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Product.ProductPricesDto"
                        }
                    }
                }
            },
            "put": {
                "tags": ["Catalog"],
                "summary": "Update product prices",
                "operationId": "Catalog_UpdateProductPricesV2",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Update data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Product.UpdateProductPricesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Catalog/Views": {
            "get": {
                "tags": ["Catalog"],
                "summary": "Get catalog saved views",
                "operationId": "Catalog_Views",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CoreWebAdmin.Delta.ManageEntity.View.SavedView"
                            }
                        }
                    }
                }
            }
        },
        "/api/Catalog/GetAllByView": {
            "get": {
                "tags": ["Catalog"],
                "summary": "Get products by view",
                "operationId": "Catalog_GetAllByView",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "viewID",
                        "in": "query",
                        "description": "View ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Page Size",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Base.GetAllResponse[SellerCloud.Delta.Models.ManageEntity.Concrete.ProductCatalogDto]"
                        }
                    }
                }
            }
        },
        "/api/Catalog/ProductTypes": {
            "get": {
                "tags": ["Catalog"],
                "summary": "Get product types",
                "operationId": "Catalog_GetProductTypes",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "model.productTypeIds",
                        "in": "query",
                        "description": "List of Product Type IDs",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "model.typeNames",
                        "in": "query",
                        "description": "List of Product Type Names",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "model.pageNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model.pageSize",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Base.GetAllResponse[SellerCloud.Delta.Models.ManageEntity.Concrete.ManageProductTypeDto]"
                        }
                    }
                }
            }
        },
        "/api/Catalog/VariationDimensions": {
            "get": {
                "tags": ["Catalog"],
                "summary": "Get All Variation Dimensions",
                "operationId": "Catalog_GetVariationDimensions",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "model.searchTerm",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "model.pageNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model.pageSize",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Base.GetAllResponse[SellerCloud.Delta.Models.Toolbox.Product.VariationProperties.VariationDimensionResponseDto]"
                        }
                    }
                }
            }
        },
        "/api/Catalog/Variation": {
            "get": {
                "tags": ["Catalog"],
                "summary": "Get Product Variation",
                "operationId": "Catalog_LoadVariation",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "model.productID",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "model.pageNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model.pageSize",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.Toolbox.Product.VariationProperties.MatrixWithImagesResponse"
                        }
                    }
                }
            }
        },
        "/api/Catalog": {
            "get": {
                "tags": ["Catalog"],
                "summary": "Get catalog info for multiple products",
                "operationId": "Catalog_GetAll",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "model.sKU",
                        "in": "query",
                        "description": "List of product IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "model.displayShadows",
                        "in": "query",
                        "description": "<br />  0 = Non_Shadow_Only ,  1 = Shadow_Only ,  2 = Shadow_Parent ,  3 = Not_Shadow_or_Shadow_Parent ",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [0, 1, 2, 3],
                        "x-enumNames": [
                            "Non_Shadow_Only",
                            "Shadow_Only",
                            "Shadow_Parent",
                            "Not_Shadow_or_Shadow_Parent"
                        ]
                    },
                    {
                        "name": "model.selectedKits",
                        "in": "query",
                        "description": "Kit<br />  0 = Not_a_Kit_Parent_or_Component ,  1 = Kit_Parent ,  2 = Kit_Component ,  3 = Not_a_Kit_Parent ,  4 = Not_a_Kit_Component ",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [0, 1, 2, 3, 4],
                        "x-enumNames": [
                            "Not_a_Kit_Parent_or_Component",
                            "Kit_Parent",
                            "Kit_Component",
                            "Not_a_Kit_Parent",
                            "Not_a_Kit_Component"
                        ]
                    },
                    {
                        "name": "model.activeStatus",
                        "in": "query",
                        "description": "Is Active<br />  0 = No ,  1 = Yes ,  -1 = All ",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [0, 1, -1],
                        "x-enumNames": ["No", "Yes", "All"]
                    },
                    {
                        "name": "model.poID",
                        "in": "query",
                        "description": "List of IDs of different purchase orders",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "model.companyID",
                        "in": "query",
                        "description": "List of IDs of different companies",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "model.vendorID",
                        "in": "query",
                        "description": "List of IDs of vendors",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "model.defaultVendorID",
                        "in": "query",
                        "description": "List of IDs of default vendors",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "model.vendorSKU",
                        "in": "query",
                        "description": "List of vendor SKUs",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "model.warehouse",
                        "in": "query",
                        "description": "List of IDs of different warehouses",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "model.uPC",
                        "in": "query",
                        "description": "Universal Product Code number",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "model.physicalQtyFrom",
                        "in": "query",
                        "description": "Minimum physical qty",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model.physicalQtyTo",
                        "in": "query",
                        "description": "Maximum physical qty",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model.kitType",
                        "in": "query",
                        "description": "Inventory kit type<br />  0 = Independant ,  1 = MainComponent ,  2 = AllComponents ",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [0, 1, 2],
                        "x-enumNames": ["Independant", "MainComponent", "AllComponents"]
                    },
                    {
                        "name": "model.lastAggregateFrom",
                        "in": "query",
                        "description": "Start date-time of creation: mm/dd/yyyy hh:mm",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "model.lastAggregateTo",
                        "in": "query",
                        "description": "Last date-time of creation: mm/dd/yyyy hh:mm",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "model.lastUpdatedFrom",
                        "in": "query",
                        "description": "Start date-time of updating: mm/dd/yyyy hh:mm",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "model.lastUpdatedTo",
                        "in": "query",
                        "description": "Last date-time of updating: mm/dd/yyyy hh:mm",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "model.keyword",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "model.pageNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model.pageSize",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Base.GetAllResponse[SellerCloud.Delta.Models.ManageEntity.Concrete.ProductCatalogDto]"
                        }
                    }
                }
            }
        },
        "/api/Catalog/Imports/BasicImports/Types": {
            "get": {
                "tags": ["CatalogBasicImports"],
                "summary": "Get a list of the available basic types of import.",
                "operationId": "CatalogBasicImports_GetAvailableBasicImportTypes",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SellerCloud.Common.Models.Data.IDataItem[System.String,System.String]"
                            }
                        }
                    }
                }
            }
        },
        "/api/Catalog/Imports/BasicImports/{typeOfImport}/Template": {
            "get": {
                "tags": ["CatalogBasicImports"],
                "summary": "Get template file that will be used later for catalog import",
                "operationId": "CatalogBasicImports_GetFileTemplate",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "typeOfImport",
                        "in": "path",
                        "description": "Type of import: shadows, kits etc.<br />  5 = KitBoxDimensions ,  7 = ProductImages ,  8 = ProductChannelSpecificImages ,  9 = WalmartMarketplaceAttributes ,  10 = WalmartMarketplaceVariationValues ,  12 = AmazonAttributes ,  13 = AmazonHazardousAttributes ,  14 = ProductClones ,  15 = VariationImages ,  17 = ProductAverageCostAdjustments ,  21 = ProductTitles ,  22 = SearsAttributes ,  23 = JetAttributes ,  24 = MagentoAttributes ,  25 = EbayPartsCompatibility ,  26 = RelatedProducts ,  27 = ShopifyMetafields ,  28 = ProductDocuments ,  29 = BonanzaTraits ,  30 = ProductNotes ,  31 = EbayAuctions ,  32 = SkuSplittingInfo ,  33 = PerChannelUpc ,  34 = MagentoTierPricing ,  35 = NeweggComInternationalPrices ,  38 = RakutenAttributes ,  -1 = None ",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            5, 7, 8, 9, 10, 12, 13, 14, 15, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29,
                            30, 31, 32, 33, 34, 35, 38, -1
                        ]
                    },
                    {
                        "name": "fileFormat",
                        "in": "query",
                        "description": "Type of the file.<br />  0 = TAB_Delimited ,  1 = CSV ,  2 = Excel ",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "enum": [0, 1, 2]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Response.FileResponse"
                        }
                    }
                }
            }
        },
        "/api/Catalog/Imports/BasicImports/{typeOfImport}": {
            "post": {
                "tags": ["CatalogBasicImports"],
                "summary": "Perform the specified type of data import.",
                "operationId": "CatalogBasicImports_ImportInfo",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "typeOfImport",
                        "in": "path",
                        "description": "<br />  5 = KitBoxDimensions ,  7 = ProductImages ,  8 = ProductChannelSpecificImages ,  9 = WalmartMarketplaceAttributes ,  10 = WalmartMarketplaceVariationValues ,  12 = AmazonAttributes ,  13 = AmazonHazardousAttributes ,  14 = ProductClones ,  15 = VariationImages ,  17 = ProductAverageCostAdjustments ,  21 = ProductTitles ,  22 = SearsAttributes ,  23 = JetAttributes ,  24 = MagentoAttributes ,  25 = EbayPartsCompatibility ,  26 = RelatedProducts ,  27 = ShopifyMetafields ,  28 = ProductDocuments ,  29 = BonanzaTraits ,  30 = ProductNotes ,  31 = EbayAuctions ,  32 = SkuSplittingInfo ,  33 = PerChannelUpc ,  34 = MagentoTierPricing ,  35 = NeweggComInternationalPrices ,  38 = RakutenAttributes ,  -1 = None ",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            5, 7, 8, 9, 10, 12, 13, 14, 15, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29,
                            30, 31, 32, 33, 34, 35, 38, -1
                        ]
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "description": "A file filled with the import data should be provided as a byte array.\r\n            The format of the file should be also specified",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Request.CatalogImportFileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Response.QueuedJobResponse"
                        }
                    }
                }
            }
        },
        "/api/Catalog/Imports/Custom/Templates": {
            "get": {
                "tags": ["CatalogCustomImports"],
                "operationId": "CatalogCustomImports_GetAllCustomTemplates",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SellerCloud.Common.Models.Data.IDataItem[System.String,System.String]"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["CatalogCustomImports"],
                "operationId": "CatalogCustomImports_SaveTemplate",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.Entity.Product.ImportProductInfo.BulkUpdateSaveTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/Catalog/Imports/Custom/Templates/Fields": {
            "get": {
                "tags": ["CatalogCustomImports"],
                "operationId": "CatalogCustomImports_GetAvailableColumnsForExport",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SellerCloud.Common.Models.Data.IDataItem[System.String,System.String]"
                            }
                        }
                    }
                }
            }
        },
        "/api/Catalog/Imports/Custom/Templates/{templateName}": {
            "get": {
                "tags": ["CatalogCustomImports"],
                "operationId": "CatalogCustomImports_GetCustomTemplate",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "templateName",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Services.IServiceDataResult[SellerCloud.Delta.Models.Entity.Product.ImportProductInfo.BulkUpdateTemplateDto]"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["CatalogCustomImports"],
                "operationId": "CatalogCustomImports_DeleteTemplate",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "templateName",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/Catalog/Imports/Custom/Template": {
            "get": {
                "tags": ["CatalogCustomImports"],
                "operationId": "CatalogCustomImports_DownloadTemplate",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "request.templateName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "request.templateFields",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "request.toAddSampleRow",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "request.productId",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "request.fileFormat",
                        "in": "query",
                        "description": "<br />  0 = TAB_Delimited ,  1 = CSV ,  2 = Excel ",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [0, 1, 2],
                        "x-enumNames": ["TAB_Delimited", "CSV", "Excel"]
                    },
                    {
                        "name": "request.formatProduct",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Response.FileResponse"
                        }
                    }
                }
            }
        },
        "/api/Catalog/Imports/Custom": {
            "post": {
                "tags": ["CatalogCustomImports"],
                "operationId": "CatalogCustomImports_ImportData",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Request.CatalogImportFileRequest[SellerCloud.Delta.Client.Api.Models.Request.BulkUpdateProductsDto]"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Response.QueuedJobResponse"
                        }
                    }
                }
            }
        },
        "/api/Catalog/Exports/Basic": {
            "post": {
                "tags": ["CatalogExports"],
                "summary": "Create basic export of data. Either creates a queued job or directly receives\r\nthe data as Base64 encoded string. Use the encoded string to convert it to file\r\non your machine.",
                "operationId": "CatalogExports_PerformBasicExport",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Provide the type of basic export that needs to be created\r\n            and an array of product IDs.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.Manage.Actions.Catalog.ExportStandardProductInfoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Response.ExportQueuedJobResponse"
                        }
                    }
                }
            }
        },
        "/api/Catalog/Exports/Custom/Metadata": {
            "get": {
                "tags": ["CatalogExports"],
                "summary": "Get metadata necessary to create a custom export. Includes available File Formats,\r\nNames of previously created templates, Available fields from which a custom export template can be configured.\r\nUse the \"AvailableColumns\" collection to specify columns for a custom export.\r\nIn this reponse model \"Key\" property will be \"OriginalName\" for column object in the request, \r\nand \"Value\" property from this response model can be \"DisplayName\" for the column request (you can specify your own display name\r\nfor the given column).",
                "operationId": "CatalogExports_GetCustomExportsMetadata",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "includeAdvancedColumns",
                        "in": "query",
                        "description": "True/False whether or not to include advanced columns for export \r\n            in the response model",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Response.CustomCatalogExportsMetadataResponse"
                        }
                    }
                }
            }
        },
        "/api/Catalog/Exports/Custom": {
            "post": {
                "tags": ["CatalogExports"],
                "summary": "Create custom data export by providing a list of product fields.",
                "operationId": "CatalogExports_PerformCustomExport",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Request.CustomCatalogExportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Response.FileResponse"
                        }
                    }
                }
            }
        },
        "/api/Catalog/Exports/Custom/Templates/{id}": {
            "get": {
                "tags": ["CatalogExports"],
                "summary": "Get data about a catalog export template. The response model includes name, ID and array of the template's columns.\r\nUse the columns collection to perform a custom export. In the reponse model \"Key\" property will be\r\n\"OriginalName\" in the request, and \"DisplayName\" will be \"DisplayName\" from the request (you can specify your own display name\r\nfor the given column).",
                "operationId": "CatalogExports_GetCustomExportTemplate",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Template ID.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.Manage.Actions.Catalog.CustomCatalogExportTemplateDto"
                        }
                    }
                }
            }
        },
        "/api/Catalog/Exports/ViaPlugin/Metadata": {
            "get": {
                "tags": ["CatalogExports"],
                "summary": "Get a list of available plugins that can be used to perform product export.",
                "operationId": "CatalogExports_GetPluginExportMetadata",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Product.ExportPluginsResponse"
                        }
                    }
                }
            }
        },
        "/api/Catalog/Exports/ViaPlugin": {
            "post": {
                "tags": ["CatalogExports"],
                "summary": "Export products via plugin",
                "operationId": "CatalogExports_PerformExportViaPlugin",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Product.ExportProductViaPluginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Response.ExportQueuedJobResponse"
                        }
                    }
                }
            }
        },
        "/api/Catalog/Exports/ViaMappingProfile/Metadata": {
            "get": {
                "tags": ["CatalogExports"],
                "summary": "Get a list of available mapping profiles that can be used to perform product export.",
                "operationId": "CatalogExports_GetMappingProfileExportMetadata",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Product.MappingProfilesResponse"
                        }
                    }
                }
            }
        },
        "/api/Catalog/Exports/ViaMappingProfile": {
            "post": {
                "tags": ["CatalogExports"],
                "summary": "Export products via mapping profile",
                "operationId": "CatalogExports_PerformExportViaMappingProfile",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Product.ExportProductViaPluginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Response.ExportQueuedJobResponse"
                        }
                    }
                }
            }
        },
        "/api/Catalog/Imports/PerCompany/Types": {
            "get": {
                "tags": ["CatalogPerCompanyImports"],
                "summary": "Get a list of the available per company types of imports.",
                "operationId": "CatalogPerCompanyImports_GetAvailablePerCompanyImportTypes",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SellerCloud.Common.Models.Data.IDataItem[System.String,System.String]"
                            }
                        }
                    }
                }
            }
        },
        "/api/Catalog/Imports/PerCompany/{typeOfImport}/Template": {
            "get": {
                "tags": ["CatalogPerCompanyImports"],
                "operationId": "CatalogPerCompanyImports_GetFileTemplate",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "typeOfImport",
                        "in": "path",
                        "description": "<br />  0 = BulkUpdateProducts ,  1 = ViaPluginProfile ,  2 = Shadows ,  3 = Variations ,  4 = Kits ,  5 = KitBoxDimensions ,  6 = EbaySpecifics ,  7 = ProductImages ,  8 = ProductChannelSpecificImages ,  9 = WalmartMarketplaceAttributes ,  10 = WalmartMarketplaceVariationValues ,  11 = NeweggComAttributes ,  12 = AmazonAttributes ,  13 = AmazonHazardousAttributes ,  14 = ProductClones ,  15 = VariationImages ,  16 = ProductGroups ,  17 = ProductAverageCostAdjustments ,  18 = ProductRebates ,  19 = ProductReplacements ,  20 = NeweggBizAttributes ,  21 = ProductTitles ,  22 = SearsAttributes ,  23 = JetAttributes ,  24 = MagentoAttributes ,  25 = EbayPartsCompatibility ,  26 = RelatedProducts ,  27 = ShopifyMetafields ,  28 = ProductDocuments ,  29 = BonanzaTraits ,  30 = ProductNotes ,  31 = EbayAuctions ,  32 = SkuSplittingInfo ,  33 = PerChannelUpc ,  34 = MagentoTierPricing ,  35 = NeweggComInternationalPrices ,  36 = ProductAliases ,  37 = ProductAccessories ,  38 = RakutenAttributes ",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
                            20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
                            38
                        ]
                    },
                    {
                        "name": "fileFormat",
                        "in": "query",
                        "description": "<br />  0 = TAB_Delimited ,  1 = CSV ,  2 = Excel ",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "enum": [0, 1, 2]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Response.FileResponse"
                        }
                    }
                }
            }
        },
        "/api/Catalog/Imports/PerCompany/{companyId}/{typeOfImport}": {
            "post": {
                "tags": ["CatalogPerCompanyImports"],
                "operationId": "CatalogPerCompanyImports_ImportInfo",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "typeOfImport",
                        "in": "path",
                        "description": "<br />  0 = BulkUpdateProducts ,  1 = ViaPluginProfile ,  2 = Shadows ,  3 = Variations ,  4 = Kits ,  5 = KitBoxDimensions ,  6 = EbaySpecifics ,  7 = ProductImages ,  8 = ProductChannelSpecificImages ,  9 = WalmartMarketplaceAttributes ,  10 = WalmartMarketplaceVariationValues ,  11 = NeweggComAttributes ,  12 = AmazonAttributes ,  13 = AmazonHazardousAttributes ,  14 = ProductClones ,  15 = VariationImages ,  16 = ProductGroups ,  17 = ProductAverageCostAdjustments ,  18 = ProductRebates ,  19 = ProductReplacements ,  20 = NeweggBizAttributes ,  21 = ProductTitles ,  22 = SearsAttributes ,  23 = JetAttributes ,  24 = MagentoAttributes ,  25 = EbayPartsCompatibility ,  26 = RelatedProducts ,  27 = ShopifyMetafields ,  28 = ProductDocuments ,  29 = BonanzaTraits ,  30 = ProductNotes ,  31 = EbayAuctions ,  32 = SkuSplittingInfo ,  33 = PerChannelUpc ,  34 = MagentoTierPricing ,  35 = NeweggComInternationalPrices ,  36 = ProductAliases ,  37 = ProductAccessories ,  38 = RakutenAttributes ",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
                            20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
                            38
                        ]
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Request.CatalogImportFileRequest[SellerCloud.Delta.Models.Entity.Product.ImportProductInfo.PerCompanyProductDataImportRequest]"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Response.QueuedJobResponse"
                        }
                    }
                }
            }
        },
        "/api/Catalog/Imports/Variations/Template": {
            "get": {
                "tags": ["CatalogSpecificImports"],
                "summary": "Get template for populating variations info",
                "operationId": "CatalogSpecificImports_GetVariationsFileTemplate",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "fileFormat",
                        "in": "query",
                        "description": "File Format: Tab_Delimited=0 CSV=1 Excel=2<br />  0 = TAB_Delimited ,  1 = CSV ,  2 = Excel ",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "enum": [0, 1, 2]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Response.FileResponse"
                        }
                    }
                }
            }
        },
        "/api/Catalog/Imports/Shadows/Template": {
            "get": {
                "tags": ["CatalogSpecificImports"],
                "summary": "Get template for populating shadows info",
                "operationId": "CatalogSpecificImports_GetShadowsFileTemplate",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "fileFormat",
                        "in": "query",
                        "description": "File Format: Tab_Delimited=0 CSV=1 Excel=2<br />  0 = TAB_Delimited ,  1 = CSV ,  2 = Excel ",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "enum": [0, 1, 2]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Response.FileResponse"
                        }
                    }
                }
            }
        },
        "/api/Catalog/Imports/Kits/Template": {
            "get": {
                "tags": ["CatalogSpecificImports"],
                "summary": "Get template for populating kits info",
                "operationId": "CatalogSpecificImports_GetKitsFileTemplate",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "fileFormat",
                        "in": "query",
                        "description": "File Format: Tab_Delimited=0 CSV=1 Excel=2<br />  0 = TAB_Delimited ,  1 = CSV ,  2 = Excel ",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "enum": [0, 1, 2]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Response.FileResponse"
                        }
                    }
                }
            }
        },
        "/api/Catalog/Imports/EbaySpecifics/Template": {
            "get": {
                "tags": ["CatalogSpecificImports"],
                "summary": "Get template for ebay specific imports",
                "operationId": "CatalogSpecificImports_GetEbaySpecificsFileTemplate",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "fileFormat",
                        "in": "query",
                        "description": "File Format: Tab_Delimited=0 CSV=1 Excel=2<br />  0 = TAB_Delimited ,  1 = CSV ,  2 = Excel ",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "enum": [0, 1, 2]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Response.FileResponse"
                        }
                    }
                }
            }
        },
        "/api/Catalog/Imports/NeweggBizAttributes/Template": {
            "get": {
                "tags": ["CatalogSpecificImports"],
                "summary": "Get template for NeweggBiz Attributes imports",
                "operationId": "CatalogSpecificImports_GetNeweggBizAttributesFileTemplate",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "fileFormat",
                        "in": "query",
                        "description": "File Format: Tab_Delimited=0 CSV=1 Excel=2<br />  0 = TAB_Delimited ,  1 = CSV ,  2 = Excel ",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "enum": [0, 1, 2]
                    },
                    {
                        "name": "multiFormat",
                        "in": "query",
                        "description": "Import in Multi-format",
                        "required": true,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Response.FileResponse"
                        }
                    }
                }
            }
        },
        "/api/Catalog/Imports/NeweggComAttributes/Template": {
            "get": {
                "tags": ["CatalogSpecificImports"],
                "summary": "Get template for NeweggCom Attributes imports",
                "operationId": "CatalogSpecificImports_GetNeweggComAttributesFileTemplate",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "fileFormat",
                        "in": "query",
                        "description": "File Format: Tab_Delimited=0 CSV=1 Excel=2<br />  0 = TAB_Delimited ,  1 = CSV ,  2 = Excel ",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "enum": [0, 1, 2]
                    },
                    {
                        "name": "multiFormat",
                        "in": "query",
                        "description": "Import in Multi-format",
                        "required": true,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Response.FileResponse"
                        }
                    }
                }
            }
        },
        "/api/Catalog/Imports/Variations/Images/Template": {
            "get": {
                "tags": ["CatalogSpecificImports"],
                "summary": "Get template for populating variations images info",
                "operationId": "CatalogSpecificImports_GetVariationImages",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "fileFormat",
                        "in": "query",
                        "description": "File Format: Tab_Delimited=0 CSV=1 Excel=2<br />  0 = TAB_Delimited ,  1 = CSV ,  2 = Excel ",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "enum": [0, 1, 2]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Response.FileResponse"
                        }
                    }
                }
            }
        },
        "/api/Catalog/Imports/Images/Template": {
            "get": {
                "tags": ["CatalogSpecificImports"],
                "summary": "Get template for populating product images info",
                "operationId": "CatalogSpecificImports_GetProductImages",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "fileFormat",
                        "in": "query",
                        "description": "File Format: Tab_Delimited=0 CSV=1 Excel=2<br />  0 = TAB_Delimited ,  1 = CSV ,  2 = Excel ",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "enum": [0, 1, 2]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Response.FileResponse"
                        }
                    }
                }
            }
        },
        "/api/Catalog/Imports/Variations": {
            "post": {
                "tags": ["CatalogSpecificImports"],
                "summary": "Import variations info",
                "operationId": "CatalogSpecificImports_ImportVariations",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Variations info.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Request.CatalogImportFileRequest[SellerCloud.Delta.Client.Api.Models.Request.ImportVariationsDto]"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Response.QueuedJobResponse"
                        }
                    }
                }
            }
        },
        "/api/Catalog/Imports/Shadows": {
            "post": {
                "tags": ["CatalogSpecificImports"],
                "summary": "Import shadows info",
                "operationId": "CatalogSpecificImports_ImportShadows",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Shadows info.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Request.CatalogImportFileRequest[SellerCloud.Delta.Client.Api.Models.Request.ImportShadowsDto]"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Response.QueuedJobResponse"
                        }
                    }
                }
            }
        },
        "/api/Catalog/Imports/Kits": {
            "post": {
                "tags": ["CatalogSpecificImports"],
                "summary": "Import kits info",
                "operationId": "CatalogSpecificImports_ImportKits",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Kits info.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Request.CatalogImportFileRequest[SellerCloud.Delta.Client.Api.Models.Request.ImportKitsDto]"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Response.QueuedJobResponse"
                        }
                    }
                }
            }
        },
        "/api/Catalog/Imports/EbaySpecifics": {
            "post": {
                "tags": ["CatalogSpecificImports"],
                "summary": "Import ebay specifics info",
                "operationId": "CatalogSpecificImports_ImportEbaySpecifics",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Ebay specifics info.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Request.CatalogImportFileRequest[SellerCloud.Delta.Client.Api.Models.Request.ImportEbayspecificsDto]"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Response.QueuedJobResponse"
                        }
                    }
                }
            }
        },
        "/api/Catalog/Imports/NeweggBizAttributes": {
            "post": {
                "tags": ["CatalogSpecificImports"],
                "summary": "Import NeweggBiz Attributes info",
                "operationId": "CatalogSpecificImports_ImportNeweggBizAttributes",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "NeweggBiz Attributes info.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Request.CatalogImportFileRequest[SellerCloud.Delta.Client.Api.Models.Request.ImportNeweggAttributesDto]"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Response.QueuedJobResponse"
                        }
                    }
                }
            }
        },
        "/api/Catalog/Imports/NeweggComAttributes": {
            "post": {
                "tags": ["CatalogSpecificImports"],
                "summary": "Import NeweggCom Attributes info",
                "operationId": "CatalogSpecificImports_ImportNeweggComAttributes",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "NeweggCom Attributes info.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Request.CatalogImportFileRequest[SellerCloud.Delta.Client.Api.Models.Request.ImportNeweggAttributesDto]"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Response.QueuedJobResponse"
                        }
                    }
                }
            }
        },
        "/api/Catalog/Imports/Variations/Images": {
            "post": {
                "tags": ["CatalogSpecificImports"],
                "summary": "Import variations images",
                "operationId": "CatalogSpecificImports_ImportVariationsImages",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Variations images info.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Request.CatalogImportFileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Response.QueuedJobResponse"
                        }
                    }
                }
            }
        },
        "/api/Catalog/Imports/Images": {
            "post": {
                "tags": ["CatalogSpecificImports"],
                "summary": "Importing catalog images",
                "operationId": "CatalogSpecificImports_ImportProductImages",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Catalog image info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Request.CatalogImportFileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Response.QueuedJobResponse"
                        }
                    }
                }
            }
        },
        "/api/Companies/{id}/ShippingApi": {
            "get": {
                "tags": ["Companies"],
                "summary": "Get metadata for company shipping APIs",
                "operationId": "Companies_GetShippingApiDetails",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of existing company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Company.ShippingApiDetailsDto"
                        }
                    }
                }
            }
        },
        "/api/Companies/{id}/Settings/ebay/BusinessPolicies": {
            "get": {
                "tags": ["Companies"],
                "summary": "Get eBay business policies",
                "operationId": "Companies_GetEbayBusinessPolicies",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of existing company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "siteCode",
                        "in": "query",
                        "description": "eBay site code",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number. Default is 1.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Page size. Default is 10.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Company.Settings.Ebay.GetEbayBusinessPoliciesDto"
                        }
                    }
                }
            }
        },
        "/api/Companies/{id}/Settings/ebay/SiteCodes": {
            "get": {
                "tags": ["Companies"],
                "summary": "Get list of eBay site codes",
                "operationId": "Companies_GetEbaySiteCodes",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of existing company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SellerCloud.Common.Models.Data.IDataItem[System.Int32,System.String]"
                            }
                        }
                    }
                }
            }
        },
        "/api/Companies/{id}": {
            "get": {
                "tags": ["Companies"],
                "summary": "Get info for single company",
                "operationId": "Companies_Get",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of existing company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CoreWebAdmin.Delta.DetailsEntity.Models.Company.CompanyDetailsDto"
                        }
                    }
                }
            }
        },
        "/api/Companies": {
            "get": {
                "tags": ["Companies"],
                "summary": "Get info for list of companies",
                "operationId": "Companies_GetAll",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "model.companyID",
                        "in": "query",
                        "description": "List of company ID",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "model.channel",
                        "in": "query",
                        "description": "List of channels",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32",
                            "enum": [
                                0, 1, 2, 3, 4, 5, 6, 7, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
                                25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
                                42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,
                                59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75,
                                76, 77, 78, 79
                            ]
                        },
                        "collectionFormat": "multi",
                        "x-enumNames": [
                            "Local_Store",
                            "eBayOrder",
                            "eBaySingleItem",
                            "Yahoo",
                            "Amazon",
                            "PriceGrabber",
                            "Website",
                            "Buy",
                            "NewEggMall",
                            "Magento",
                            "QuickBooks",
                            "RMS",
                            "Cart32",
                            "Sears",
                            "FBA",
                            "Wholesale",
                            "Overstock",
                            "NewEggdotcom",
                            "Etsy",
                            "Bonanza",
                            "PriceFalls",
                            "Wayfair",
                            "UnbeatableSale",
                            "VendorCentral",
                            "Hayneedle",
                            "SmartBargains",
                            "uBid",
                            "ATGStores",
                            "StacksAndStacks",
                            "Sharkstores",
                            "BestBuy",
                            "Kohls",
                            "Staples",
                            "OneStopPlus",
                            "Meijer",
                            "Sonsi",
                            "Walmart",
                            "HSN",
                            "NewEgg_Business",
                            "KMart",
                            "Wish",
                            "SPRichards",
                            "FingerHut",
                            "Groupon",
                            "Walmart_Marketplace",
                            "ShopHQ",
                            "PriceMinister",
                            "GS",
                            "DrugStore",
                            "MercadoLibre",
                            "JET",
                            "ElevenMain",
                            "SearsVendor",
                            "Choxi",
                            "TradeMe",
                            "Tanga",
                            "Target",
                            "GrouponMarketplace",
                            "Reverb",
                            "BedBathAndBeyond",
                            "Dropship_Central",
                            "DSW",
                            "Houzz",
                            "Gilt",
                            "BestBuyDS",
                            "TopHatter",
                            "HomeDepot",
                            "MassGenie",
                            "Cdiscount",
                            "GrouponGateway",
                            "SBN",
                            "GoogleExpress",
                            "Target_Plus",
                            "WFS"
                        ]
                    },
                    {
                        "name": "model.keyword",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "model.pageNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model.pageSize",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Base.GetAllResponse[CoreWebAdmin.Delta.ManageEntity.Filters.CompanyDto]"
                        }
                    }
                }
            }
        },
        "/api/Customers/{id}/CustomColumns": {
            "put": {
                "tags": ["Customers"],
                "summary": "Update customer custom columns",
                "operationId": "Customers_UpdateCustomColumns",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Customer.UpdateCustomColumnsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Customers/{id}/Addresses": {
            "put": {
                "tags": ["Customers"],
                "summary": "Update customer addresses",
                "operationId": "Customers_UpdateAddresses",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Customer.UpdateAddressesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Customers": {
            "get": {
                "tags": ["Customers"],
                "summary": "Get metadata for list of customers",
                "operationId": "Customers_GetAll",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "model.customerIds",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "model.email",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "model.firstName",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "model.lastName",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "model.rating",
                        "in": "query",
                        "description": "<br />  0 = NotRated ,  1 = Very_Disatisfied ,  2 = Disatisfied ,  3 = Neutral ,  4 = Satisfied ,  5 = Very_Satisfied ",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [0, 1, 2, 3, 4, 5],
                        "x-enumNames": [
                            "NotRated",
                            "Very_Disatisfied",
                            "Disatisfied",
                            "Neutral",
                            "Satisfied",
                            "Very_Satisfied"
                        ]
                    },
                    {
                        "name": "model.customerType",
                        "in": "query",
                        "description": "<br />  0 = Retail ,  1 = Wholesale ",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [0, 1],
                        "x-enumNames": ["Retail", "Wholesale"]
                    },
                    {
                        "name": "model.subscribed",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model.createdOnFrom",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "model.createdOnTo",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "model.modifiedOnFrom",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "model.modifiedOnTo",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "model.phoneNumber",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "model.city",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "model.zipCode",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "model.exported",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model.channel",
                        "in": "query",
                        "description": "<br />  0 = Local_Store ,  1 = eBayOrder ,  2 = eBaySingleItem ,  3 = Yahoo ,  4 = Amazon ,  5 = PriceGrabber ,  6 = Website ,  7 = Buy ,  12 = NewEggMall ,  15 = Magento ,  16 = QuickBooks ,  17 = RMS ,  18 = Cart32 ,  19 = Sears ,  20 = FBA ,  21 = Wholesale ,  22 = Overstock ,  23 = NewEggdotcom ,  24 = Etsy ,  25 = Bonanza ,  26 = PriceFalls ,  27 = Wayfair ,  28 = UnbeatableSale ,  29 = VendorCentral ,  30 = Hayneedle ,  31 = SmartBargains ,  32 = uBid ,  33 = ATGStores ,  34 = StacksAndStacks ,  35 = Sharkstores ,  36 = BestBuy ,  37 = Kohls ,  38 = Staples ,  39 = OneStopPlus ,  40 = Meijer ,  41 = Sonsi ,  42 = Walmart ,  43 = HSN ,  44 = NewEgg_Business ,  45 = KMart ,  46 = Wish ,  47 = SPRichards ,  48 = FingerHut ,  49 = Groupon ,  50 = Walmart_Marketplace ,  51 = ShopHQ ,  52 = PriceMinister ,  53 = GS ,  54 = DrugStore ,  55 = MercadoLibre ,  56 = JET ,  57 = ElevenMain ,  58 = SearsVendor ,  59 = Choxi ,  60 = TradeMe ,  61 = Tanga ,  62 = Target ,  63 = GrouponMarketplace ,  64 = Reverb ,  65 = BedBathAndBeyond ,  66 = Dropship_Central ,  67 = DSW ,  68 = Houzz ,  69 = Gilt ,  70 = BestBuyDS ,  71 = TopHatter ,  72 = HomeDepot ,  73 = MassGenie ,  74 = Cdiscount ,  75 = GrouponGateway ,  76 = SBN ,  77 = GoogleExpress ,  78 = Target_Plus ,  79 = WFS ",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            0, 1, 2, 3, 4, 5, 6, 7, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,
                            26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
                            44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
                            62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79
                        ],
                        "x-enumNames": [
                            "Local_Store",
                            "eBayOrder",
                            "eBaySingleItem",
                            "Yahoo",
                            "Amazon",
                            "PriceGrabber",
                            "Website",
                            "Buy",
                            "NewEggMall",
                            "Magento",
                            "QuickBooks",
                            "RMS",
                            "Cart32",
                            "Sears",
                            "FBA",
                            "Wholesale",
                            "Overstock",
                            "NewEggdotcom",
                            "Etsy",
                            "Bonanza",
                            "PriceFalls",
                            "Wayfair",
                            "UnbeatableSale",
                            "VendorCentral",
                            "Hayneedle",
                            "SmartBargains",
                            "uBid",
                            "ATGStores",
                            "StacksAndStacks",
                            "Sharkstores",
                            "BestBuy",
                            "Kohls",
                            "Staples",
                            "OneStopPlus",
                            "Meijer",
                            "Sonsi",
                            "Walmart",
                            "HSN",
                            "NewEgg_Business",
                            "KMart",
                            "Wish",
                            "SPRichards",
                            "FingerHut",
                            "Groupon",
                            "Walmart_Marketplace",
                            "ShopHQ",
                            "PriceMinister",
                            "GS",
                            "DrugStore",
                            "MercadoLibre",
                            "JET",
                            "ElevenMain",
                            "SearsVendor",
                            "Choxi",
                            "TradeMe",
                            "Tanga",
                            "Target",
                            "GrouponMarketplace",
                            "Reverb",
                            "BedBathAndBeyond",
                            "Dropship_Central",
                            "DSW",
                            "Houzz",
                            "Gilt",
                            "BestBuyDS",
                            "TopHatter",
                            "HomeDepot",
                            "MassGenie",
                            "Cdiscount",
                            "GrouponGateway",
                            "SBN",
                            "GoogleExpress",
                            "Target_Plus",
                            "WFS"
                        ]
                    },
                    {
                        "name": "model.corporateName",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "model.companyIds",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "model.keyword",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "model.pageNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model.pageSize",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Base.GetAllResponse[SellerCloud.Delta.Models.ManageEntity.Concrete.CustomerDto]"
                        }
                    }
                }
            },
            "post": {
                "tags": ["Customers"],
                "summary": "Create new customer",
                "operationId": "Customers_Create",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Customer.CreateCustomerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/api/Customers/{id}": {
            "get": {
                "tags": ["Customers"],
                "summary": "Get metadata of existing customer",
                "operationId": "Customers_Get",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CoreWebAdmin.Delta.DetailsEntity.Models.Customer.CustomerDetailsDto"
                        }
                    }
                }
            }
        },
        "/api/Diagnostics/Server": {
            "get": {
                "tags": ["Diagnostics"],
                "summary": "Pull server state information",
                "operationId": "Diagnostics_Server",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.WebApi.Models.Home.ServerInfoResponse"
                        }
                    }
                }
            }
        },
        "/api/Diagnostics/Tenant": {
            "get": {
                "tags": ["Diagnostics"],
                "summary": "Pull Tenant state information",
                "operationId": "Diagnostics_Tenant",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.WebApi.Models.Home.TenantInfoResponse"
                        }
                    }
                }
            }
        },
        "/api/Inventory/{id}": {
            "get": {
                "tags": ["Inventory"],
                "summary": "Get metadata of existing inventory [obsolete]",
                "operationId": "Inventory_Get",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.DetailsEntity.Concrete.Inventory.InventoryDetailsDto"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Inventory"],
                "summary": "Delete existing inventory [obsolete]",
                "operationId": "Inventory_Delete",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of inventory",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Inventory/Details": {
            "get": {
                "tags": ["Inventory"],
                "summary": "Get metadata of existing inventory",
                "operationId": "Inventory_GetSingleInventory",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "productID",
                        "in": "query",
                        "description": "Product ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.DetailsEntity.Concrete.Inventory.InventoryDetailsDto"
                        }
                    }
                }
            }
        },
        "/api/Inventory": {
            "get": {
                "tags": ["Inventory"],
                "summary": "Get metadata for existing inventories",
                "operationId": "Inventory_GetAll",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "model.inventoryID",
                        "in": "query",
                        "description": "List of product IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "model.eAN",
                        "in": "query",
                        "description": "EAN numbers separated by comma",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "model.poID",
                        "in": "query",
                        "description": "List of IDs of different purchase orders",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "model.companyID",
                        "in": "query",
                        "description": "List of IDs of different companies",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "model.vendorID",
                        "in": "query",
                        "description": "List of IDs of vendors",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "model.defaultVendorID",
                        "in": "query",
                        "description": "List of IDs of default vendors",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "model.vendorSKU",
                        "in": "query",
                        "description": "List of vendor SKUs",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "model.warehouse",
                        "in": "query",
                        "description": "List of IDs of different warehouses",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "model.uPC",
                        "in": "query",
                        "description": "Universal Product Code number",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "model.physicalQtyFrom",
                        "in": "query",
                        "description": "Minimum physical qty",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model.physicalQtyTo",
                        "in": "query",
                        "description": "Maximum physical qty",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model.kitType",
                        "in": "query",
                        "description": "Inventory kit type<br />  0 = Independant ,  1 = MainComponent ,  2 = AllComponents ",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [0, 1, 2],
                        "x-enumNames": ["Independant", "MainComponent", "AllComponents"]
                    },
                    {
                        "name": "model.lastAggregateFrom",
                        "in": "query",
                        "description": "Start date-time of creation: mm/dd/yyyy hh:mm",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "model.lastAggregateTo",
                        "in": "query",
                        "description": "Last date-time of creation: mm/dd/yyyy hh:mm",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "model.lastUpdatedFrom",
                        "in": "query",
                        "description": "Start date-time of updating: mm/dd/yyyy hh:mm",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "model.lastUpdatedTo",
                        "in": "query",
                        "description": "Last date-time of updating: mm/dd/yyyy hh:mm",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "model.keyword",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "model.pageNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model.pageSize",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Base.GetAllResponse[SellerCloud.Delta.Models.ManageEntity.Concrete.ProductInventoryDto]"
                        }
                    }
                }
            },
            "put": {
                "tags": ["Inventory"],
                "summary": "Update inventory metadata",
                "operationId": "Inventory_Update",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Inventory.UpdateInventoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "tags": ["Inventory"],
                "summary": "Delete existing inventory",
                "operationId": "Inventory_DeleteV2",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "productID",
                        "in": "query",
                        "description": "ID of product",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Inventory/{productID}/Warehouses/{warehouseID}": {
            "get": {
                "tags": ["Inventory"],
                "summary": "Get inventory warehouse related information [obsolete]",
                "operationId": "Inventory_GetWarehouses",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "productID",
                        "in": "path",
                        "description": "ID of the product.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "warehouseID",
                        "in": "path",
                        "description": "ID of the warehouse.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.Details.Concrete.Inventory.InventoryWarehouseDto"
                        }
                    }
                }
            }
        },
        "/api/Inventory/{productID}/Warehouses": {
            "get": {
                "tags": ["Inventory"],
                "summary": "Get inventory information for all warehouses [obsolete]",
                "operationId": "Inventory_GetInventory",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "productID",
                        "in": "path",
                        "description": "ID of the product.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SellerCloud.Delta.Models.Details.Concrete.Inventory.SingleWarehouseDto"
                            }
                        }
                    }
                }
            }
        },
        "/api/Inventory/Warehouses": {
            "get": {
                "tags": ["Inventory"],
                "summary": "Get warehouses inventory information",
                "operationId": "Inventory_GetInventory",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "productID",
                        "in": "query",
                        "description": "ID of the product",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "warehouseID",
                        "in": "query",
                        "description": "ID of the warehouse",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Inventory.WarehouseInventoryInformationDto"
                            }
                        }
                    }
                }
            }
        },
        "/api/Inventory/SetPhysicalInventory": {
            "put": {
                "tags": ["Inventory"],
                "summary": "Set physical inventory",
                "operationId": "Inventory_SetPhysicalInventory",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Warehouse.SetPhysicalInventoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Inventory/AdjustPhysicalInventory": {
            "put": {
                "tags": ["Inventory"],
                "summary": "Adjust physical inventory",
                "operationId": "Inventory_AdjustPhysicalInventory",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Warehouse.AdjustPhysicalInventoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Inventory/ImportPhysicalInventory": {
            "put": {
                "tags": ["Inventory"],
                "summary": "Import physical inventory",
                "operationId": "Inventory_ImportPhysicalInventory",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Physical inventory metadata",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Inventory.ImportBulkPhysicalInventoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Response.QueuedJobResponse"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            }
        },
        "/api/Inventory/GetSerialNumbers": {
            "post": {
                "tags": ["Inventory"],
                "summary": "Get product serial numbers. If product is shadow the serial numbers of the parent will be retrieved.",
                "operationId": "Inventory_GetSerialNumbers",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Inventory.SerialNumbers.GetSerialNumbersRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Inventory.SerialNumbers.GetSerialNumbersResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            }
        },
        "/api/Inventory/Import/DownloadInventoryTemplate": {
            "get": {
                "tags": ["InventoryImport"],
                "summary": "Download Invenotry Template",
                "operationId": "InventoryImport_DownloadInventoryTemplate",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "template",
                        "in": "query",
                        "description": "Template Kind<br />  0 = Standard ,  1 = AllProducts ,  2 = AllProductsWithInventory ,  3 = AllProductsNoShadowDependentKits ",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "enum": [0, 1, 2, 3]
                    },
                    {
                        "name": "fileFormat",
                        "in": "query",
                        "description": "File Formatb<br />  0 = TAB_Delimited ,  1 = CSV ,  2 = Excel ",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "enum": [0, 1, 2]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Inventory/Import/InventoryTemplate/{updateType}": {
            "post": {
                "tags": ["InventoryImport"],
                "summary": "",
                "operationId": "InventoryImport_UploadInventoryTemplate",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "updateType",
                        "in": "path",
                        "description": "<br />  0 = Partial ,  1 = Full ",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "enum": [0, 1]
                    },
                    {
                        "name": "template",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Inventory.PhysicalInventoryImportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Orders/{orderID}/CustomColumns": {
            "get": {
                "tags": ["OrderCustomColumns"],
                "summary": "Get custom columns for specific order.",
                "operationId": "OrderCustomColumns_GetCustomColumns",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "ID of existing sales order",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Order.CustomColumnDto"
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["OrderCustomColumns"],
                "summary": "Updating custom columns",
                "operationId": "OrderCustomColumns_UpdateCustomColumns",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "orderID",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Base.UpdateCustomColumn"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Orders/Packages": {
            "get": {
                "tags": ["Orders"],
                "summary": "List of order packages",
                "operationId": "Orders_GetPackages",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of the order",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Page size",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.Common.PaginationResultsDto[SellerCloud.Delta.Models.Details.Concrete.Order.OrderPackageDto]"
                        }
                    }
                }
            }
        },
        "/api/Orders/GetAllByView": {
            "get": {
                "tags": ["Orders"],
                "summary": "Get orders by view",
                "operationId": "Orders_GetAllByView",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "viewID",
                        "in": "query",
                        "description": "View ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Page Size",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Base.GetAllResponse[SellerCloud.Delta.Models.ClientAPI.Order.MultipleOrderDataDto]"
                        }
                    }
                }
            }
        },
        "/api/Orders/WayToPayLink": {
            "get": {
                "tags": ["Orders"],
                "summary": "Generate WayToPay link for an existing order",
                "operationId": "Orders_GenerateWayToPayLink",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of existing order.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.Details.Concrete.Order.GenerateWayToPayLinkResponse"
                        }
                    }
                }
            }
        },
        "/api/Orders/ShippingStatus": {
            "put": {
                "tags": ["Orders"],
                "summary": "Update shipping status of sales order.",
                "operationId": "Orders_UpdateShippingStatus",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Order and shipping metadata.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.Details.Concrete.Order.ShippingStatus.UpdateShippingStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Orders/Serials": {
            "get": {
                "tags": ["Orders"],
                "summary": "Get serial numbers for order",
                "operationId": "Orders_GetSerialNumbers",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of order",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Order.OrderSerialNumber"
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Orders"],
                "summary": "Update serial numbers for order",
                "operationId": "Orders_UpdateSerialNumbers",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Serial number information",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Order.UpdateSerialNumbersRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Orders/Notes": {
            "get": {
                "tags": ["Orders"],
                "summary": "Get notes for specific order",
                "operationId": "Orders_GetNotes",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of existing sales order",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SellerCloud.Delta.Models.Notes.OrderNoteDto"
                            }
                        }
                    }
                }
            }
        },
        "/api/Orders/{orderID}/Notes": {
            "post": {
                "tags": ["Orders"],
                "summary": "Adding note to existing order",
                "operationId": "Orders_AddNote",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "ID of existing order",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "note",
                        "in": "body",
                        "description": "Note text",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Order.NoteDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Orders/CustomColumns": {
            "get": {
                "tags": ["Orders"],
                "summary": "Get custom columns for specific order.",
                "operationId": "Orders_GetCustomColumns",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of existing sales order",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Order.CustomColumnDto"
                            }
                        }
                    }
                }
            }
        },
        "/api/Orders/GetCustomColumns": {
            "post": {
                "tags": ["Orders"],
                "summary": "Get custom columns in bulk for multiple orders",
                "operationId": "Orders_GetCustomColumns",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Order.GetCustomColumnsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Order.CustomColumnOrderResponseDto"
                            }
                        }
                    }
                }
            }
        },
        "/api/Orders/ShippingStatus/SinglePackage": {
            "put": {
                "tags": ["Orders"],
                "summary": "Update shipping status of order for single package.",
                "operationId": "Orders_UpdateSinglePackageShippingStatus",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.Details.Concrete.Order.ShippingStatus.UpdateSinglePackageShippingStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Orders/SetUnshipped": {
            "put": {
                "tags": ["Orders"],
                "summary": "Unship orders",
                "operationId": "Orders_UnshipOrders",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Unship orders request model",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Order.UnshipOrderDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Orders/SetExported": {
            "put": {
                "tags": ["Orders"],
                "summary": "Mark orders as exported or not exported",
                "operationId": "Orders_SetExported",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Model containing info about orders to update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.Details.Concrete.Order.ShippingStatus.UpdateOrdersAsExportedRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List with the ids of the updated orders",
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        },
        "/api/Orders/SetQuickBookStatus": {
            "put": {
                "tags": ["Orders"],
                "summary": "Mark Order QuickBook status as  exported or unexported",
                "operationId": "Orders_SetQuickBookStatus",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.Details.Concrete.Order.UpdateQBExportStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation success message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/Orders/StatusCode": {
            "put": {
                "tags": ["Orders"],
                "summary": "Update order status code",
                "operationId": "Orders_SetStatusCode",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Model containing info about orders to update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.Details.Concrete.Order.ShippingStatus.UpdateOrdersStatusCodeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List with the ids of the updated orders",
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        },
        "/api/Orders/MarkReadyForPickup": {
            "put": {
                "tags": ["Orders"],
                "summary": "Update order status code",
                "operationId": "Orders_MarkReadyForPickup",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Model containing info about orders to update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.Details.Concrete.Order.ShippingStatus.OrderIdsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List with the ids of the updated orders",
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    }
                }
            }
        },
        "/api/Orders/MarkPickedUp": {
            "put": {
                "tags": ["Orders"],
                "summary": "Update order status code",
                "operationId": "Orders_MarkPickedUp",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Model containing info about orders to update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.Details.Concrete.Order.ShippingStatus.OrderIdsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List with the ids of the updated orders",
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    }
                }
            }
        },
        "/api/Orders/{id}/PicklistIDs": {
            "get": {
                "tags": ["Orders"],
                "summary": "Get picklists for a specific order",
                "operationId": "Orders_GetPicklistIDs",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of existing sales order",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        },
        "/api/Orders/DropshipStatus": {
            "put": {
                "tags": ["Orders"],
                "summary": "Update order dropship status",
                "operationId": "Orders_SetDropshipStatus",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Model containing info about orders to update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.Details.Concrete.Order.ShippingStatus.UpdateOrdersDropShipRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List with the ids of the updated orders",
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        },
        "/api/Orders/{id}/UploadDocument": {
            "post": {
                "tags": ["Orders"],
                "summary": "Upload document for order",
                "operationId": "Orders_UploadDocument",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of order for which to upload a document",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Model containing the file to upload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Order.UploadDocumentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "BadRequest"
                    }
                }
            }
        },
        "/api/Orders/CheckSplittedStatus": {
            "get": {
                "tags": ["Orders"],
                "summary": "Check if order is splitted parrent or child and related data",
                "operationId": "Orders_CheckSplittedStatus",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "orderID",
                        "in": "query",
                        "description": "Orde ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.Details.Concrete.Order.OrderSplitStatusDto"
                        }
                    }
                }
            }
        },
        "/api/Orders/Views": {
            "get": {
                "tags": ["Orders"],
                "summary": "Get order saved views",
                "operationId": "Orders_Views",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CoreWebAdmin.Delta.ManageEntity.View.SavedView"
                            }
                        }
                    }
                }
            }
        },
        "/api/Orders/ProfitAndLoss": {
            "post": {
                "tags": ["Orders"],
                "summary": "Get profit and loss information",
                "operationId": "Orders_ProfitAndLoss",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Order.GetProfitAndLossRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SellerCloud.Delta.Models.Details.Concrete.Order.Commissions.OrderProfitAndLossDataDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            }
        },
        "/api/Orders/{orderID}/items": {
            "put": {
                "tags": ["Orders"],
                "summary": "Update exisiting order items",
                "operationId": "Orders_UpdateOrderItems",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "description": "List of items objects to be updated",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SellerCloud.Delta.WebApi.Models.ClientApi.Order.UpdateOrderItemRequestModel"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "tags": ["Orders"],
                "summary": "Add items to exisiting order",
                "operationId": "Orders_AddOrderItems",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "description": "List of product items objects to be added to order",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SellerCloud.Delta.WebApi.Models.ClientApi.Order.CreateOrderItemRequestModel"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Orders"],
                "summary": "Delete items from exisiting order",
                "operationId": "Orders_DeleteOrderItems",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderItemIDs",
                        "in": "body",
                        "description": "Items ID to be removed from order",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/Orders/PrintPdfInvoice": {
            "post": {
                "tags": ["Orders"],
                "summary": "Prints invoice for multiple orders",
                "operationId": "Orders_PrintPdfInvoice",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Order.PrintPdfInvoiceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Response.FileResponse"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    }
                }
            }
        },
        "/api/Orders/ReplacementOrder": {
            "post": {
                "tags": ["Orders"],
                "summary": "Create Replacement Order",
                "operationId": "Orders_CreateReplacementOrder",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Create replacement order request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Order.CreateReplacementOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Order.CreateReplacementOrderResponse"
                        }
                    }
                }
            }
        },
        "/api/Orders/ReplacementOrder/Reasons": {
            "get": {
                "tags": ["Orders"],
                "summary": "Get Replacement Order Reasons",
                "operationId": "Orders_GetReplacementOrderReasons",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SellerCloud.Common.Models.Data.IDataItem[System.Int32,System.String]"
                            }
                        }
                    }
                }
            }
        },
        "/api/Orders/{id}": {
            "get": {
                "tags": ["Orders"],
                "summary": "Get metadata of existing sales order",
                "operationId": "Orders_Get",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of sales order",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Order.SingleOrderDataDto"
                        }
                    }
                }
            },
            "put": {
                "tags": ["Orders"],
                "summary": "Update data of single Order",
                "operationId": "Orders_Update",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Order",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Request model",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Order.UpdateOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "tags": ["Orders"],
                "summary": "Delete existing order",
                "operationId": "Orders_Delete",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of existing order.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Orders": {
            "get": {
                "tags": ["Orders"],
                "summary": "Get metadata for list of sales orders",
                "operationId": "Orders_GetAll",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "model.orderIDs",
                        "in": "query",
                        "description": "List of IDs of different orders",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "model.companyID",
                        "in": "query",
                        "description": "List of IDs of different companies",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "model.companyGroupID",
                        "in": "query",
                        "description": "List of company groups",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "model.orderStatus",
                        "in": "query",
                        "description": "Status of order",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32",
                            "enum": [1, 2, 3, 100, 200, 300, 999, -1]
                        },
                        "collectionFormat": "multi",
                        "x-enumNames": [
                            "ShoppingCart",
                            "InProcess",
                            "Completed",
                            "ProblemOrder",
                            "OnHold",
                            "Quote",
                            "Void",
                            "Canceled"
                        ]
                    },
                    {
                        "name": "model.dateRange",
                        "in": "query",
                        "description": "Date range<br />  1 = Today ,  2 = ThisWeek ,  3 = LastWeek ,  4 = Last31Days ,  5 = Last60Days ,  6 = Last120Days ,  7 = ThisCalendarYear ,  8 = PreviousCalendarYear ,  9 = AllDates ,  10 = Last7Days ,  11 = Last3Days ,  12 = Last24Hours ,  17 = OlderThan1BusinessDay ,  18 = OlderThan2BusinessDay ,  19 = OlderThan3BusinessDay ,  20 = Yesterday ,  21 = Last90DAys ,  22 = LastMonth ,  23 = Last12Months ,  24 = OlderThan24Hours ,  25 = Tomorrow ,  26 = Next3Days ,  27 = Next7Days ,  28 = MonthToDate ,  101 = Last14Days ",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 17, 18, 19, 20, 21, 22, 23, 24,
                            25, 26, 27, 28, 101
                        ],
                        "x-enumNames": [
                            "Today",
                            "ThisWeek",
                            "LastWeek",
                            "Last31Days",
                            "Last60Days",
                            "Last120Days",
                            "ThisCalendarYear",
                            "PreviousCalendarYear",
                            "AllDates",
                            "Last7Days",
                            "Last3Days",
                            "Last24Hours",
                            "OlderThan1BusinessDay",
                            "OlderThan2BusinessDay",
                            "OlderThan3BusinessDay",
                            "Yesterday",
                            "Last90DAys",
                            "LastMonth",
                            "Last12Months",
                            "OlderThan24Hours",
                            "Tomorrow",
                            "Next3Days",
                            "Next7Days",
                            "MonthToDate",
                            "Last14Days"
                        ]
                    },
                    {
                        "name": "model.shipDateRange",
                        "in": "query",
                        "description": "Shipping range status<br />  1 = Today ,  2 = ThisWeek ,  3 = LastWeek ,  4 = Last31Days ,  5 = Last60Days ,  6 = Last120Days ,  7 = ThisCalendarYear ,  8 = PreviousCalendarYear ,  9 = AllDates ,  10 = Last7Days ,  11 = Last3Days ,  12 = Last24Hours ,  17 = OlderThan1BusinessDay ,  18 = OlderThan2BusinessDay ,  19 = OlderThan3BusinessDay ,  20 = Yesterday ,  21 = Last90DAys ,  22 = LastMonth ,  23 = Last12Months ,  24 = OlderThan24Hours ,  25 = Tomorrow ,  26 = Next3Days ,  27 = Next7Days ,  28 = MonthToDate ,  101 = Last14Days ",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 17, 18, 19, 20, 21, 22, 23, 24,
                            25, 26, 27, 28, 101
                        ],
                        "x-enumNames": [
                            "Today",
                            "ThisWeek",
                            "LastWeek",
                            "Last31Days",
                            "Last60Days",
                            "Last120Days",
                            "ThisCalendarYear",
                            "PreviousCalendarYear",
                            "AllDates",
                            "Last7Days",
                            "Last3Days",
                            "Last24Hours",
                            "OlderThan1BusinessDay",
                            "OlderThan2BusinessDay",
                            "OlderThan3BusinessDay",
                            "Yesterday",
                            "Last90DAys",
                            "LastMonth",
                            "Last12Months",
                            "OlderThan24Hours",
                            "Tomorrow",
                            "Next3Days",
                            "Next7Days",
                            "MonthToDate",
                            "Last14Days"
                        ]
                    },
                    {
                        "name": "model.updatedFromDateRange",
                        "in": "query",
                        "description": "Updated From range status<br />  1 = Today ,  2 = ThisWeek ,  3 = LastWeek ,  4 = Last31Days ,  5 = Last60Days ,  6 = Last120Days ,  7 = ThisCalendarYear ,  8 = PreviousCalendarYear ,  9 = AllDates ,  10 = Last7Days ,  11 = Last3Days ,  12 = Last24Hours ,  17 = OlderThan1BusinessDay ,  18 = OlderThan2BusinessDay ,  19 = OlderThan3BusinessDay ,  20 = Yesterday ,  21 = Last90DAys ,  22 = LastMonth ,  23 = Last12Months ,  24 = OlderThan24Hours ,  25 = Tomorrow ,  26 = Next3Days ,  27 = Next7Days ,  28 = MonthToDate ,  101 = Last14Days ",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 17, 18, 19, 20, 21, 22, 23, 24,
                            25, 26, 27, 28, 101
                        ],
                        "x-enumNames": [
                            "Today",
                            "ThisWeek",
                            "LastWeek",
                            "Last31Days",
                            "Last60Days",
                            "Last120Days",
                            "ThisCalendarYear",
                            "PreviousCalendarYear",
                            "AllDates",
                            "Last7Days",
                            "Last3Days",
                            "Last24Hours",
                            "OlderThan1BusinessDay",
                            "OlderThan2BusinessDay",
                            "OlderThan3BusinessDay",
                            "Yesterday",
                            "Last90DAys",
                            "LastMonth",
                            "Last12Months",
                            "OlderThan24Hours",
                            "Tomorrow",
                            "Next3Days",
                            "Next7Days",
                            "MonthToDate",
                            "Last14Days"
                        ]
                    },
                    {
                        "name": "model.createdOnDateRange",
                        "in": "query",
                        "description": "Created On range status<br />  1 = Today ,  2 = ThisWeek ,  3 = LastWeek ,  4 = Last31Days ,  5 = Last60Days ,  6 = Last120Days ,  7 = ThisCalendarYear ,  8 = PreviousCalendarYear ,  9 = AllDates ,  10 = Last7Days ,  11 = Last3Days ,  12 = Last24Hours ,  17 = OlderThan1BusinessDay ,  18 = OlderThan2BusinessDay ,  19 = OlderThan3BusinessDay ,  20 = Yesterday ,  21 = Last90DAys ,  22 = LastMonth ,  23 = Last12Months ,  24 = OlderThan24Hours ,  25 = Tomorrow ,  26 = Next3Days ,  27 = Next7Days ,  28 = MonthToDate ,  101 = Last14Days ",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 17, 18, 19, 20, 21, 22, 23, 24,
                            25, 26, 27, 28, 101
                        ],
                        "x-enumNames": [
                            "Today",
                            "ThisWeek",
                            "LastWeek",
                            "Last31Days",
                            "Last60Days",
                            "Last120Days",
                            "ThisCalendarYear",
                            "PreviousCalendarYear",
                            "AllDates",
                            "Last7Days",
                            "Last3Days",
                            "Last24Hours",
                            "OlderThan1BusinessDay",
                            "OlderThan2BusinessDay",
                            "OlderThan3BusinessDay",
                            "Yesterday",
                            "Last90DAys",
                            "LastMonth",
                            "Last12Months",
                            "OlderThan24Hours",
                            "Tomorrow",
                            "Next3Days",
                            "Next7Days",
                            "MonthToDate",
                            "Last14Days"
                        ]
                    },
                    {
                        "name": "model.shippingStatus",
                        "in": "query",
                        "description": "Shipping order status<br />  0 = Unknown ,  1 = Unshipped ,  2 = PartiallyShipped ,  3 = FullyShipped ,  4 = ReadyForPickup ",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [0, 1, 2, 3, 4],
                        "x-enumNames": [
                            "Unknown",
                            "Unshipped",
                            "PartiallyShipped",
                            "FullyShipped",
                            "ReadyForPickup"
                        ]
                    },
                    {
                        "name": "model.trackingNumber",
                        "in": "query",
                        "description": "Tracking number",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "model.serialNumber",
                        "in": "query",
                        "description": "Serial number",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "model.paymentDateRange",
                        "in": "query",
                        "description": "Payment range status<br />  1 = Today ,  2 = ThisWeek ,  3 = LastWeek ,  4 = Last31Days ,  5 = Last60Days ,  6 = Last120Days ,  7 = ThisCalendarYear ,  8 = PreviousCalendarYear ,  9 = AllDates ,  10 = Last7Days ,  11 = Last3Days ,  12 = Last24Hours ,  17 = OlderThan1BusinessDay ,  18 = OlderThan2BusinessDay ,  19 = OlderThan3BusinessDay ,  20 = Yesterday ,  21 = Last90DAys ,  22 = LastMonth ,  23 = Last12Months ,  24 = OlderThan24Hours ,  25 = Tomorrow ,  26 = Next3Days ,  27 = Next7Days ,  28 = MonthToDate ,  101 = Last14Days ",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 17, 18, 19, 20, 21, 22, 23, 24,
                            25, 26, 27, 28, 101
                        ],
                        "x-enumNames": [
                            "Today",
                            "ThisWeek",
                            "LastWeek",
                            "Last31Days",
                            "Last60Days",
                            "Last120Days",
                            "ThisCalendarYear",
                            "PreviousCalendarYear",
                            "AllDates",
                            "Last7Days",
                            "Last3Days",
                            "Last24Hours",
                            "OlderThan1BusinessDay",
                            "OlderThan2BusinessDay",
                            "OlderThan3BusinessDay",
                            "Yesterday",
                            "Last90DAys",
                            "LastMonth",
                            "Last12Months",
                            "OlderThan24Hours",
                            "Tomorrow",
                            "Next3Days",
                            "Next7Days",
                            "MonthToDate",
                            "Last14Days"
                        ]
                    },
                    {
                        "name": "model.sKU",
                        "in": "query",
                        "description": "ID of product",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "model.aSIN",
                        "in": "query",
                        "description": "ASIN",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "model.createdOnFrom",
                        "in": "query",
                        "description": "Start date-time of creation: mm/dd/yyyy hh:mm",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "model.createdOnTo",
                        "in": "query",
                        "description": "Last date-time of creation: mm/dd/yyyy hh:mm",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "model.lastUpdatedFrom",
                        "in": "query",
                        "description": "Start date-time of updating: mm/dd/yyyy hh:mm",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "model.lastUpdatedTo",
                        "in": "query",
                        "description": "Last date-time of updating: mm/dd/yyyy hh:mm",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "model.channel",
                        "in": "query",
                        "description": "Order source id<br />  0 = Local_Store ,  1 = eBayOrder ,  2 = eBaySingleItem ,  3 = Yahoo ,  4 = Amazon ,  5 = PriceGrabber ,  6 = Website ,  7 = Buy ,  12 = NewEggMall ,  15 = Magento ,  16 = QuickBooks ,  17 = RMS ,  18 = Cart32 ,  19 = Sears ,  20 = FBA ,  21 = Wholesale ,  22 = Overstock ,  23 = NewEggdotcom ,  24 = Etsy ,  25 = Bonanza ,  26 = PriceFalls ,  27 = Wayfair ,  28 = UnbeatableSale ,  29 = VendorCentral ,  30 = Hayneedle ,  31 = SmartBargains ,  32 = uBid ,  33 = ATGStores ,  34 = StacksAndStacks ,  35 = Sharkstores ,  36 = BestBuy ,  37 = Kohls ,  38 = Staples ,  39 = OneStopPlus ,  40 = Meijer ,  41 = Sonsi ,  42 = Walmart ,  43 = HSN ,  44 = NewEgg_Business ,  45 = KMart ,  46 = Wish ,  47 = SPRichards ,  48 = FingerHut ,  49 = Groupon ,  50 = Walmart_Marketplace ,  51 = ShopHQ ,  52 = PriceMinister ,  53 = GS ,  54 = DrugStore ,  55 = MercadoLibre ,  56 = JET ,  57 = ElevenMain ,  58 = SearsVendor ,  59 = Choxi ,  60 = TradeMe ,  61 = Tanga ,  62 = Target ,  63 = GrouponMarketplace ,  64 = Reverb ,  65 = BedBathAndBeyond ,  66 = Dropship_Central ,  67 = DSW ,  68 = Houzz ,  69 = Gilt ,  70 = BestBuyDS ,  71 = TopHatter ,  72 = HomeDepot ,  73 = MassGenie ,  74 = Cdiscount ,  75 = GrouponGateway ,  76 = SBN ,  77 = GoogleExpress ,  78 = Target_Plus ,  79 = WFS ",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            0, 1, 2, 3, 4, 5, 6, 7, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,
                            26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
                            44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
                            62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79
                        ],
                        "x-enumNames": [
                            "Local_Store",
                            "eBayOrder",
                            "eBaySingleItem",
                            "Yahoo",
                            "Amazon",
                            "PriceGrabber",
                            "Website",
                            "Buy",
                            "NewEggMall",
                            "Magento",
                            "QuickBooks",
                            "RMS",
                            "Cart32",
                            "Sears",
                            "FBA",
                            "Wholesale",
                            "Overstock",
                            "NewEggdotcom",
                            "Etsy",
                            "Bonanza",
                            "PriceFalls",
                            "Wayfair",
                            "UnbeatableSale",
                            "VendorCentral",
                            "Hayneedle",
                            "SmartBargains",
                            "uBid",
                            "ATGStores",
                            "StacksAndStacks",
                            "Sharkstores",
                            "BestBuy",
                            "Kohls",
                            "Staples",
                            "OneStopPlus",
                            "Meijer",
                            "Sonsi",
                            "Walmart",
                            "HSN",
                            "NewEgg_Business",
                            "KMart",
                            "Wish",
                            "SPRichards",
                            "FingerHut",
                            "Groupon",
                            "Walmart_Marketplace",
                            "ShopHQ",
                            "PriceMinister",
                            "GS",
                            "DrugStore",
                            "MercadoLibre",
                            "JET",
                            "ElevenMain",
                            "SearsVendor",
                            "Choxi",
                            "TradeMe",
                            "Tanga",
                            "Target",
                            "GrouponMarketplace",
                            "Reverb",
                            "BedBathAndBeyond",
                            "Dropship_Central",
                            "DSW",
                            "Houzz",
                            "Gilt",
                            "BestBuyDS",
                            "TopHatter",
                            "HomeDepot",
                            "MassGenie",
                            "Cdiscount",
                            "GrouponGateway",
                            "SBN",
                            "GoogleExpress",
                            "Target_Plus",
                            "WFS"
                        ]
                    },
                    {
                        "name": "model.orderSubType",
                        "in": "query",
                        "description": "Subtype of order<br />  0 = None ,  1 = Sample ,  2 = Charity ,  3 = eBayNow ,  4 = eBayLocalPickup ,  5 = Same_Day_Delivery ,  6 = GS ,  7 = Prime ,  8 = FBA_Exchange ,  9 = Amazon_Business ,  10 = Amazon_Business_Prime ,  11 = Second_Day ,  12 = Wish_Express ,  13 = SBN ,  15 = Amazon_Global_Express ,  16 = InStorePickUp ",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16],
                        "x-enumNames": [
                            "None",
                            "Sample",
                            "Charity",
                            "eBayNow",
                            "eBayLocalPickup",
                            "Same_Day_Delivery",
                            "GS",
                            "Prime",
                            "FBA_Exchange",
                            "Amazon_Business",
                            "Amazon_Business_Prime",
                            "Second_Day",
                            "Wish_Express",
                            "SBN",
                            "Amazon_Global_Express",
                            "InStorePickUp"
                        ]
                    },
                    {
                        "name": "model.orderSourceOrderIDList",
                        "in": "query",
                        "description": "Order source order ID",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "model.qBExported",
                        "in": "query",
                        "description": "Quick Book exported status<br />  0 = No ,  1 = Yes ,  -1 = All ",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [0, 1, -1],
                        "x-enumNames": ["No", "Yes", "All"]
                    },
                    {
                        "name": "model.paymentStatus",
                        "in": "query",
                        "description": "Payment status of order<br />  10 = NoPayment ,  11 = NoPaymentOrPartialPayment ,  20 = Authorized ,  30 = Charged ,  40 = Uncleared ,  50 = PartialRefund ,  60 = FullRefund ,  61 = PartialOrFullRefund ,  70 = PartiallyPaid ,  71 = ChargedOrPartialRefund ,  80 = EbayPaid ,  81 = EbayPaidOrPartialPayment ,  99 = PaymentError ,  711 = ChargedOrPartialPaid ,  713 = ChargedOrAuthorized ,  -1 = ALL ",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [10, 11, 20, 30, 40, 50, 60, 61, 70, 71, 80, 81, 99, 711, 713, -1],
                        "x-enumNames": [
                            "NoPayment",
                            "NoPaymentOrPartialPayment",
                            "Authorized",
                            "Charged",
                            "Uncleared",
                            "PartialRefund",
                            "FullRefund",
                            "PartialOrFullRefund",
                            "PartiallyPaid",
                            "ChargedOrPartialRefund",
                            "EbayPaid",
                            "EbayPaidOrPartialPayment",
                            "PaymentError",
                            "ChargedOrPartialPaid",
                            "ChargedOrAuthorized",
                            "ALL"
                        ]
                    },
                    {
                        "name": "model.dropShipStatus",
                        "in": "query",
                        "description": "Dropship status of order<br />  0 = None ,  1 = Pending ,  2 = Requested ,  3 = Acknowledged ,  4 = Processed ,  5 = PartialProcessed ,  6 = Cancelled ,  7 = Invalid ",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [0, 1, 2, 3, 4, 5, 6, 7],
                        "x-enumNames": [
                            "None",
                            "Pending",
                            "Requested",
                            "Acknowledged",
                            "Processed",
                            "PartialProcessed",
                            "Cancelled",
                            "Invalid"
                        ]
                    },
                    {
                        "name": "model.warehouseID",
                        "in": "query",
                        "description": "List of IDs of different warehouses",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "model.userID",
                        "in": "query",
                        "description": "Customer ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model.shipFromDate",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "model.shipToDate",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "model.orderFromDate",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "model.orderToDate",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "model.orderBy",
                        "in": "query",
                        "description": "<br />  0 = OrderID ,  1 = OrderDate ,  2 = OrderStatus ,  3 = ShipDate ,  4 = ShippingStatus ",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [0, 1, 2, 3, 4],
                        "x-enumNames": [
                            "OrderID",
                            "OrderDate",
                            "OrderStatus",
                            "ShipDate",
                            "ShippingStatus"
                        ]
                    },
                    {
                        "name": "model.isAscending",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "model.keyword",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "model.picklistID",
                        "in": "query",
                        "description": "Picklist ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "model.replacementOrder",
                        "in": "query",
                        "description": "Replacement order status<br />  0 = No ,  1 = Yes ,  -1 = All ",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [0, 1, -1],
                        "x-enumNames": ["No", "Yes", "All"]
                    },
                    {
                        "name": "model.pageNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model.pageSize",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Base.GetAllResponse[SellerCloud.Delta.Models.ClientAPI.Order.MultipleOrderDataDto]"
                        }
                    }
                }
            },
            "post": {
                "tags": ["Orders"],
                "summary": "Create a new sales order",
                "operationId": "Orders_Create",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Sales order metadata",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OrderBaseModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/api/Orders/{orderID}/ReceiveManualPayment": {
            "put": {
                "tags": ["Payments"],
                "summary": "Receive payment manually",
                "operationId": "Payments_ReceiveManualPayment",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "ID of order",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Information about manual payment.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Order.Payments.ReceiveManualPaymentDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Orders/{orderID}/ReceiveCheck": {
            "put": {
                "tags": ["Payments"],
                "summary": "Receiving payment via check",
                "operationId": "Payments_ReceiveCheck",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "ID of order",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Information about the check.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Order.Payments.ReceiveCheckDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Picklists": {
            "post": {
                "tags": ["Picklists"],
                "summary": "Create picklist for list of orders",
                "operationId": "Picklists_CreatePicklist",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Create picklist request model",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Picklist.GeneratePicklistRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Common.CreateEntityWithQueuedJobResponse"
                        }
                    }
                }
            }
        },
        "/api/Picklists/{id}/OrderIDs": {
            "get": {
                "tags": ["Picklists"],
                "summary": "Get orders for a specific picklist",
                "operationId": "Picklists_GetOrderIDs",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of existing picklist",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        },
        "/api/Picklists/Products": {
            "get": {
                "tags": ["Picklists"],
                "summary": "Get a list of paginated products for a specific picklist",
                "operationId": "Picklists_GetPicklistProducts",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "picklistID",
                        "in": "query",
                        "description": "ID of existing picklist",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number for products list",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Page size for products list",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Common.PaginationResultsDto[SellerCloud.Delta.Models.Details.Concrete.PickList.PickListDetailsProductDto]"
                        }
                    }
                }
            }
        },
        "/api/ProductConditions": {
            "get": {
                "tags": ["ProductConditions"],
                "summary": "Get list of all product conditions",
                "operationId": "ProductConditions_Get",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BVSoftware.BVC.Core.Catalog.ProductConditionInHouse"
                            }
                        }
                    }
                }
            }
        },
        "/api/ProductConditions/{id}": {
            "get": {
                "tags": ["ProductConditions"],
                "summary": "Get product condition by id",
                "operationId": "ProductConditions_Get",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of product condition",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/BVSoftware.BVC.Core.Catalog.ProductConditionInHouse"
                        }
                    }
                }
            }
        },
        "/api/ProductImage": {
            "get": {
                "tags": ["ProductImage"],
                "summary": "Getting product images for a single product",
                "operationId": "ProductImage_GetV2",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "productID",
                        "in": "query",
                        "description": "ID of the product",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Product.GetProductImage"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["ProductImage"],
                "summary": "Adding new product image for a single product",
                "operationId": "ProductImage_Add",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.WebApi.Models.Product.AddProductImageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/api/ProductImage/{id}": {
            "get": {
                "tags": ["ProductImage"],
                "summary": "Getting product images for a single product [obsolete]",
                "operationId": "ProductImage_Get",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Product.GetProductImage"
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["ProductImage"],
                "summary": "Delete product image",
                "operationId": "ProductImage_Delete",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of image",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/api/ProductImage/GetProductsImages": {
            "post": {
                "tags": ["ProductImage"],
                "summary": "Getting images for multiple products",
                "operationId": "ProductImage_GetProductsImages",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Product.GetProductsImagesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Product.ProductImages"
                            }
                        }
                    }
                }
            }
        },
        "/api/Products": {
            "post": {
                "tags": ["Products"],
                "summary": "Create a new product",
                "operationId": "Products_Create",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "New Product metadata",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.WebApi.Models.Product.AddSingleProductModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/Products/{id}/CustomColumns": {
            "get": {
                "tags": ["Products"],
                "summary": "Get custom columns for specific product [obsolete]",
                "operationId": "Products_GetCustomColumns",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of existing product",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            },
            "put": {
                "tags": ["Products"],
                "summary": "Updatе single custom column [obsolete]",
                "operationId": "Products_UpdateCustomColumns",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of existing product",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Update data model",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Base.UpdateCustomColumn"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Products/CustomColumns": {
            "get": {
                "tags": ["Products"],
                "summary": "Get custom columns for specific product",
                "operationId": "Products_GetCustomColumnsV2",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "productID",
                        "in": "query",
                        "description": "ID of existing product",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            },
            "put": {
                "tags": ["Products"],
                "summary": "Updatе multiple custom columns",
                "operationId": "Products_UpdateCustomColumns",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Update data model",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Product.UpdateCustomColumnsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Products/{id}/CustomColumnsMultiple": {
            "put": {
                "tags": ["Products"],
                "summary": "Updatе multiple custom columns [obsolete]",
                "operationId": "Products_UpdateCustomColumnsMultiple",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of existing product",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Update data model",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Base.UpdateCustomColumn"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/PurchaseOrders/{id}/Items": {
            "get": {
                "tags": ["PurchaseOrders"],
                "summary": "Get purchase order items",
                "operationId": "PurchaseOrders_GetPurchaseOrderItems",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of purchase order",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.PurchaseOrder.PoItemsDto"
                        }
                    }
                }
            },
            "put": {
                "tags": ["PurchaseOrders"],
                "summary": "Update purchase order items",
                "operationId": "PurchaseOrders_UpdatePurchaseOrderItems",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of purchase order",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Update data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.PurchaseOrder.PoItemsUpdateDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/PurchaseOrders/{id}/items": {
            "post": {
                "tags": ["PurchaseOrders"],
                "summary": "Add purchase order items",
                "operationId": "PurchaseOrders_AddPurchaseOrderItems",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of purchase order",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Model for items to be added",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.PurchaseOrder.CreatePoItemDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/PurchaseOrders/{id}/receive": {
            "post": {
                "tags": ["PurchaseOrders"],
                "summary": "Receive purchase order",
                "operationId": "PurchaseOrders_Receive",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the purchase order",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Receiving metadata",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.PurchaseOrder.ReceivePoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            }
        },
        "/api/PurchaseOrders/{id}/CustomColumns": {
            "get": {
                "tags": ["PurchaseOrders"],
                "summary": "Get custom columns for specific purchase order.",
                "operationId": "PurchaseOrders_GetCustomColumns",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of existing purchase order",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SellerCloud.Delta.Models.CustomColumns.CustomColumnBaseDto"
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["PurchaseOrders"],
                "summary": "Updating custom columns",
                "operationId": "PurchaseOrders_UpdateCustomColumns",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Base.UpdateCustomColumn"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/PurchaseOrders/SetQuickBookStatus": {
            "put": {
                "tags": ["PurchaseOrders"],
                "summary": "Mark Purchase Order QuickBook status as exported or unexported",
                "operationId": "PurchaseOrders_SetQuickBookStatus",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.WebApi.Models.PurchaseOrder.UpdatePurchaseOrderQBExportStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation success message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/PurchaseOrders/Serials": {
            "get": {
                "tags": ["PurchaseOrders"],
                "summary": "Get serial numbers for PO",
                "operationId": "PurchaseOrders_GetSerialNumbers",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "PO id",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SellerCloud.Delta.WebApi.Models.ClientApi.Purchase.PoSerialsRestViewModel"
                            }
                        }
                    }
                }
            }
        },
        "/api/PurchaseOrders": {
            "get": {
                "tags": ["PurchaseOrders"],
                "summary": "Get metadata for list of purchase orders",
                "operationId": "PurchaseOrders_GetAll",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "model.pOIds",
                        "in": "query",
                        "description": "List of IDs of different purchase orders",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "model.companyIDList",
                        "in": "query",
                        "description": "List of IDs of different companies",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "model.pOStatuses",
                        "in": "query",
                        "description": "List of purchase order statuses",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32",
                            "enum": [0, 1, 2, 3, 4, 5, -1]
                        },
                        "collectionFormat": "multi",
                        "x-enumNames": [
                            "Saved",
                            "Ordered",
                            "Pending",
                            "Received",
                            "Cancelled",
                            "Completed",
                            "Select"
                        ]
                    },
                    {
                        "name": "model.receiveWarehouseID",
                        "in": "query",
                        "description": "List of receiving warehouses",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "model.shippingStatuses",
                        "in": "query",
                        "description": "List of shipping statuses",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32",
                            "enum": [0, 1, 2]
                        },
                        "collectionFormat": "multi",
                        "x-enumNames": ["None", "PartiallyShipped", "FullyShipped"]
                    },
                    {
                        "name": "model.receivedStatuses",
                        "in": "query",
                        "description": "List of received statuses",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32",
                            "enum": [0, 1, 2]
                        },
                        "collectionFormat": "multi",
                        "x-enumNames": ["None", "PartiallyReceived", "FullyReceived"]
                    },
                    {
                        "name": "model.createDateFrom",
                        "in": "query",
                        "description": "Create date from",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "model.createDateTo",
                        "in": "query",
                        "description": "Create date to",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "model.paymentStatus",
                        "in": "query",
                        "description": "List of payment statuses.\r\nFilter should be utilized if client setting \"Enable vendor invoices workflow\" is disabled.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32",
                            "enum": [10, 20, 30, 40, 50, 60, 70, 80, 99]
                        },
                        "collectionFormat": "multi",
                        "x-enumNames": [
                            "NoPayment",
                            "Authorized",
                            "Charged",
                            "Uncleared",
                            "PartiallyRefund",
                            "FullRefund",
                            "PartialPayment",
                            "eBayPaid",
                            "PaymentError"
                        ]
                    },
                    {
                        "name": "model.inventoryCountEnabled",
                        "in": "query",
                        "description": "Is Inventory Count Enabled\r\n\r\n0: No\r\n1: Yes",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model.vendorInvoiced",
                        "in": "query",
                        "description": "Is Vendor Invoiced\r\nThis filter should only be utilized if client setting \"Enable vendor invoices workflow\" is enabled.<br />  0 = NotInvoiced ,  1 = Invoiced ,  2 = PartiallyInvoiced ,  -1 = All ",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [0, 1, 2, -1],
                        "x-enumNames": ["NotInvoiced", "Invoiced", "PartiallyInvoiced", "All"]
                    },
                    {
                        "name": "model.approved",
                        "in": "query",
                        "description": "Is Approved\r\n\r\n0: No\r\n1: Yes",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model.receiveDateFrom",
                        "in": "query",
                        "description": "Receive date from",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "model.receiveDateTo",
                        "in": "query",
                        "description": "Receive date to",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "model.updatedDateFrom",
                        "in": "query",
                        "description": "Updated date from",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "model.updatedDateTo",
                        "in": "query",
                        "description": "Updated date to",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "model.keyword",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "model.qBExported",
                        "in": "query",
                        "description": "Quick Book exported status<br />  0 = No ,  1 = Yes ,  -1 = All ",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [0, 1, -1],
                        "x-enumNames": ["No", "Yes", "All"]
                    },
                    {
                        "name": "model.pageNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model.pageSize",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Base.GetAllResponse[SellerCloud.Delta.Models.ClientAPI.PurchaseOrder.PoMultipleDataDto]"
                        }
                    }
                }
            },
            "post": {
                "tags": ["PurchaseOrders"],
                "summary": "Create new purchase order",
                "operationId": "PurchaseOrders_Create",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Create PO request model",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.PurchaseOrder.CreatePoRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Common.CreateEntityResponse[System.Int32]"
                        }
                    }
                }
            }
        },
        "/api/PurchaseOrders/{id}": {
            "get": {
                "tags": ["PurchaseOrders"],
                "summary": "Get metadata for existing purchase order",
                "operationId": "PurchaseOrders_Get",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the purchase order",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.Details.Concrete.PurchaseOrders.PoDetailsDto"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["PurchaseOrders"],
                "summary": "Deleting existing purchase order",
                "operationId": "PurchaseOrders_Delete",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the purchase order",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/PurchaseOrders/Import/DownloadPurchaseOrdersTemplate": {
            "get": {
                "tags": ["PurchaseOrdersImports"],
                "summary": "Get template for populating purchase order info",
                "operationId": "PurchaseOrdersImports_GetPurchaseOrdersFileTemplate",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "fileFormat",
                        "in": "query",
                        "description": "File Format: Tab_Delimited=0 CSV=1 Excel=2<br />  0 = TAB_Delimited ,  1 = CSV ,  2 = Excel ",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "enum": [0, 1, 2]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Response.FileResponse"
                        }
                    }
                }
            }
        },
        "/api/PurchaseOrders/Import/DownloadVendorPricesTemplate": {
            "get": {
                "tags": ["PurchaseOrdersImports"],
                "summary": "Get template for populating vendor price info",
                "operationId": "PurchaseOrdersImports_GetVendorPricesFileTemplate",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "fileFormat",
                        "in": "query",
                        "description": "File Format: Tab_Delimited=0 CSV=1 Excel=2<br />  0 = TAB_Delimited ,  1 = CSV ,  2 = Excel ",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "enum": [0, 1, 2]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Response.FileResponse"
                        }
                    }
                }
            }
        },
        "/api/PurchaseOrders/Import/ImportPurchaseOrders": {
            "post": {
                "tags": ["PurchaseOrdersImports"],
                "summary": "Import Purchase Orders",
                "operationId": "PurchaseOrdersImports_ImportPurchaseOrders",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Purchase Orders info.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Request.PurchasingImport.PurchasingImportFileRequest[SellerCloud.Delta.Client.Api.Models.Request.PurchasingImport.ImportPurchaseOrdersDto]"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Response.QueuedJobResponse"
                        }
                    }
                }
            }
        },
        "/api/PurchaseOrders/Import/ImportVendorPrices": {
            "post": {
                "tags": ["PurchaseOrdersImports"],
                "summary": "Import Vendor Prices",
                "operationId": "PurchaseOrdersImports_ImportVendorPrices",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Vendor Prices info.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Request.PurchasingImport.PurchasingImportFileRequest[SellerCloud.Delta.Client.Api.Models.Request.PurchasingImport.ImportVendorPricesDto]"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Response.QueuedJobResponse"
                        }
                    }
                }
            }
        },
        "/api/QueuedJobs/{id}": {
            "get": {
                "tags": ["QueuedJobs"],
                "summary": "Get a single queued job by ID.",
                "operationId": "QueuedJobs_Get",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Queued Job ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CoreWebAdmin.Delta.DetailsEntity.Models.QueuedJob.QueuedJobDto"
                        }
                    }
                }
            }
        },
        "/api/QueuedJobs/OutputFile": {
            "get": {
                "tags": ["QueuedJobs"],
                "summary": "Get output file for a queued job",
                "operationId": "QueuedJobs_GetOutputFile",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Response.FileResponse"
                        }
                    }
                }
            }
        },
        "/api/QueuedJobs/Priority": {
            "put": {
                "tags": ["QueuedJobs"],
                "summary": "Update job priority status",
                "operationId": "QueuedJobs_UpdateJobPriority",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CoreWebAdmin.Delta.DetailsEntity.Models.QueuedJob.QueuedJobPriorityRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/QueuedJobs/BulkUpdateLog/{id}": {
            "get": {
                "tags": ["QueuedJobs"],
                "summary": "Get Bulk Update Log Detail",
                "operationId": "QueuedJobs_GetBulkUpdateLog",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Queued Job ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.Details.Concrete.QueuedJob.BulkUpdateLogDto"
                        }
                    }
                }
            }
        },
        "/api/QueuedJobs/Cancel": {
            "put": {
                "tags": ["QueuedJobs"],
                "summary": "Cancel a queued job",
                "operationId": "QueuedJobs_Cancel",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/QueuedJobs": {
            "get": {
                "tags": ["QueuedJobs"],
                "summary": "Get a paged result of queued jobs with the option to specify different filtering values.\r\nFor complete set of results, multiple requests should be made by specifying a page number in the request.",
                "operationId": "QueuedJobs_GetAll",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "model.jobID",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model.jobType",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32",
                            "enum": [
                                1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
                                20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
                                37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
                                54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70,
                                71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87,
                                88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
                                104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
                                117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
                                130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
                                143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
                                156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
                                169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
                                182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
                                195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
                                208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
                                221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233,
                                234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246,
                                247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
                                260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272,
                                273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285,
                                286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298,
                                299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311,
                                312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324,
                                325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337,
                                338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350,
                                351, 352, 353, 354, 355, 366, 367, 368, 369, 370, 371, 372, 373,
                                374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386,
                                387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399,
                                400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
                                413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 433, 434, 435,
                                436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
                                449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461,
                                462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
                                475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
                                488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
                                501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
                                514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527
                            ]
                        },
                        "collectionFormat": "multi",
                        "x-enumNames": [
                            "Product_Bulk_Update",
                            "Product_Custom_Export",
                            "Product_Export_For_Channel",
                            "Product_Revise_On_eBay",
                            "Order_Export",
                            "Product_Bulk_Edit",
                            "Product_Bulk_Edit_EBay",
                            "Product_Bulk_Edit_BuyDotCom",
                            "eBayCategoryRefresh",
                            "ImportProducts_Amazon",
                            "ImportProducts_eBay",
                            "ImportProducts_Magento",
                            "ImportProducts_Yahoo",
                            "Import_Vendor_Products",
                            "Import_Product_Shadows",
                            "eBay_Listings_Download",
                            "eBay_Listings_Create_Update_Products",
                            "Import_Product_Kits",
                            "Get_Product_Info_From_Amazon",
                            "Orders_Import_Tracking",
                            "Product_Group_Series_Generate",
                            "Orders_Import",
                            "Import_Product_Alias",
                            "Product_FindBuyDotComSKU",
                            "Export_Customers",
                            "Order_Delete",
                            "Straight_Warehouse_Inventory",
                            "ImportProducts_OverStock",
                            "Report_FBA_Inventory",
                            "Amazon_Reports_Task",
                            "CWA_Report",
                            "Create_Country_Specific_Shadow",
                            "Product_Bulk_Update_Rollback",
                            "Orders_FindPayment_For_EBayPaid",
                            "Orders_FindPayment_For_PendingPayments",
                            "Import_Product_Replacements",
                            "Import_Product_Accessories",
                            "Revise_EBay_Listings",
                            "Report_Amazon_Active_Listings",
                            "ImportProducts_Sears",
                            "Create_Products_From_Amazon_Active_Listing",
                            "ImportProducts_BuyDotCom",
                            "Export_CM_Feed",
                            "Warehouse_Inventory_Import",
                            "Warehouse_Inventory_Calculate",
                            "Import_Product_Group",
                            "Report_Amazon_Pending_Orders",
                            "Export_Product_Sales_Statistics",
                            "Acknowledge_Old_Amazon_Orders",
                            "Synchronize_Vendors",
                            "LMSProcessOrders",
                            "Toggle_Inventory_To_Warehouse_Mode",
                            "Toggle_Inventory_To_NonWarehouse_Mode",
                            "Import_Amazon_Orders",
                            "BuyDotCom_SKU_List",
                            "Orders_Import_OverStock",
                            "Sync_eBay_Active_Listings",
                            "Export_Ebay_Category_Suggestions",
                            "Launch_On_eBay",
                            "Post_On_Ebay",
                            "eBay_End_Listings",
                            "Inventory_Calculate",
                            "Export_Product_Enabled_For_Channel",
                            "Orders_Import_ShippingCost",
                            "Pick_List_Generate",
                            "Update_Shipping_Template_For_Products",
                            "Purchase_Manifest_Create_PO",
                            "Product_Export_General",
                            "Product_Inventory_By_Warehouse_Export",
                            "Purchase_Manifest_Update_Item_Cost",
                            "ARCUST_Import_Customers",
                            "ARCUST_Import_Orders",
                            "Convert_Orders_To_WholeSale_Fulfillment",
                            "Order_Refresh_From_Ebay_Paypal",
                            "Update_Inventory_From_Ebay_Listings",
                            "Product_Titles_Import",
                            "Import_BuyDotCom_Listing_Report",
                            "Merge_Shadow_Inventory_Into_Default_Warehouse",
                            "eBay_Query_Title",
                            "Web_Page_Access_Import",
                            "PickList_Print_Invoices",
                            "Import_OverStock_Settlement_Report",
                            "Import_Sears_Settlement_Report",
                            "Import_NewEgg_Settlement_Report",
                            "Import_Purchase_Orders",
                            "Import_Product_Specifics",
                            "Revise_Listing_Part_On_Ebay",
                            "Export_Inventory_By_Warehouse",
                            "Export_Inventory_By_Warehouse_Per_Parent_SKU",
                            "Import_BestBuy_Settlement_Report",
                            "Export_Product_Sales_Statistics_Amazon",
                            "Inventory_Snap_Shot",
                            "Inventory_Snap_Shot_Restore",
                            "Launch_On_Magento",
                            "Receive_Whole_PO",
                            "Launch_On_Amazon",
                            "Inventory_Calculate_For_KitParents",
                            "CM_Feed_Generate_For_Company",
                            "Customers_Import",
                            "Order_Send_Emails",
                            "Update_Shipping_On_Amazon",
                            "Import_Amazon_Settlement_Report",
                            "Automation_via_FTP_Import_Orders",
                            "Automation_via_FTP_Export_Invnetory",
                            "Automation_via_FTP_Export_Tracking",
                            "Magento_Execute_Cron",
                            "Find_BuyDotCom_SKU_For_Task",
                            "Import_Product_From_Amazon_Template",
                            "Orders_ReApplySettlement_data",
                            "Orders_Import_ShippingCost_DHL",
                            "Orders_Evaluate_Payment_Status",
                            "Products_Delete",
                            "Orders_Import_For_Task",
                            "ImportProducts_Wayfair",
                            "Orders_Import_ShippingCost_UPS",
                            "Merge_Shadow_Inventory_Into_Warehouse",
                            "Import_Product_Info_Via_Plugin",
                            "Product_Export_for_Task",
                            "Import_Product_From_ChannelFeedTemplate",
                            "OrderAction_ProcessRefunds",
                            "Calcualte_Inventory_For_PO",
                            "Calcualte_Inventory_For_FBA_Shipment",
                            "Revise_Prices_On_Channel",
                            "OrderAction_ProcessCancellation",
                            "Orders_Replace_SKU_Bulk",
                            "Print_Product_Label",
                            "Load_Product_Default_Values",
                            "Get_ASIN_From_UPC",
                            "Warehouse_Inventory_Adjustments",
                            "Export_Amazon_Search_Results",
                            "Import_Product_Rebates",
                            "Dismiss_Amazon_Listing_Audit",
                            "Purchase_Orders_Export",
                            "Orders_Import_From_3DCart",
                            "Import_EBay_Orders",
                            "Products_Import_For_Task",
                            "Orders_Import_Tracking_For_Task",
                            "Import_Product_Image_Info",
                            "Export_Missing_Channel_Info",
                            "OneSD_ImportInventory",
                            "OneSD_ImportKits",
                            "OneSD_ImportProducts",
                            "OrderAction_ProcessBackOrder",
                            "ProductImportEBayAuctions",
                            "OrderAction_ProcessCancellationBySplitting",
                            "Export_Product_Sell_Through_Report",
                            "Export_Product_Inventory_age_report",
                            "Launch_On_Sears",
                            "DropShip_SendEmails",
                            "FBA_Shipment_Reserve",
                            "OrderAction_Create_Replacement_Order",
                            "OrderAction_Create_Related_Order",
                            "OrderAction_Cancel_And_Duplicate_Innotrac_Order",
                            "Magento_Update_Prices",
                            "Order_Export_Innotrac",
                            "PO_Send_EMails",
                            "Orders_Cancel_Innotrac",
                            "Find_ASIN",
                            "Notify_Order_Source_For_Shipping",
                            "OrderAction_Cancel_1SD_Order",
                            "OrderAction_Cancel_1SD_OrderItem",
                            "OrderAction_SetInProcess",
                            "FBA_Shipment_ResetPreview",
                            "Orders_Set_InProcess",
                            "Bonanza_Import_Categories",
                            "Orders_Create_NewEggDotCom_API",
                            "Launch_On_Bonanza",
                            "Launch_On_NewEggDotcom",
                            "Orders_Import_Website_via_Plugin",
                            "Import_Sears_Attributes",
                            "Upload_Product_Images_to_Hosting",
                            "Orders_Cancel_1SD",
                            "Orders_Bulk_Charge_Orders",
                            "Upload_Product_Images_to_Magento",
                            "OrderAction_SetRushOrder",
                            "Calcuate_AverageCost_For_PO_Item_Receive",
                            "Generate_Predicted_Purchase_Data",
                            "Find_FNSKU",
                            "Export_Product_Groups",
                            "Find_EBay_ProductID",
                            "Product_Notes_Import",
                            "Orders_Change_ShipType",
                            "WarehouseBin_SetQtyBulk",
                            "Task_Run_Select_Query",
                            "Orders_QueryShipmentStatus_Innotrac",
                            "OrderAction_Process",
                            "Innotrac_ShipNotification",
                            "Export_Employees",
                            "Import_Sears_Settlement_Report_via_API",
                            "Launch_On_Website",
                            "Product_UnUsed_UPC_Import",
                            "Export_Kits",
                            "Purchase_Manifest_Create_SKU_BasedOn_UPC",
                            "Merge_Orders",
                            "Bonanza_Update_Prices",
                            "Bonanza_Update_Inventory",
                            "Import_Product_Magento_Attribute",
                            "Export_ebay_Product_Specific_Template",
                            "Launch_On_OverStock",
                            "Get_OverStock_Product_Info",
                            "DisAssemble_N_Matrix",
                            "Import_N_Matrix",
                            "Launch_On_PriceFall",
                            "PriceFall_Update_Inventory",
                            "PriceFall_Update_Prices",
                            "HKG_ImportInventory",
                            "HKG_ImportKits",
                            "HKG_ImportProducts",
                            "Website_Update_Prices",
                            "Import_Magento_Orders",
                            "Enable_Disable_Products_For_Channel",
                            "Launch_On_Channel",
                            "Update_Inventory_On_Channel",
                            "Update_Prices_On_Channel",
                            "eBay_End_Listings_via_ProductID",
                            "Relist_EBay_Items",
                            "Export_Listed_On_Channel",
                            "OneStopPlus_DownloadInventory_Products",
                            "Export_Relations_On_Magento",
                            "Orders_Generate_Profit_and_Loss",
                            "Export_Ebay_Listing_Failure_For_Task",
                            "Print_Product_Label_For_Orders",
                            "PO_Delete",
                            "Product_Create_Shadows_Per_Company",
                            "Product_Export_Unfillable_For_Task",
                            "Product_AverageCost_Prime",
                            "Profit_and_Loss_Calculated_Export",
                            "Profit_and_Loss_Calculated_Import",
                            "Transaction_Profit_and_Loss_Calculated_Export",
                            "Transaction_Profit_and_Loss_Calculated_Import",
                            "Product_Warehouse_Inventory_Transfer_Request",
                            "Order_Refresh_From_Magento",
                            "Orders_Mark_Shipped",
                            "Predictive_Purchase_Task_Create_PO",
                            "Update_Inventory_Via_WS",
                            "Amazon_Get_My_Price",
                            "Update_Images_On_Amazon",
                            "Inventory_Upload_Pre_Data",
                            "Product_SplittedSKU_Import",
                            "Disassemble_Kits",
                            "PO_Export_for_Task",
                            "Product_Convert_Currencies",
                            "Product_Unshadow",
                            "Do_Hazmat_Preview_For_Task",
                            "PickList_Export_to_PDF_KitParent_Only",
                            "Import_NewEggDotcom_Attributes",
                            "Import_N_Matrix_Images",
                            "Orders_DropShip_EnterTracking",
                            "Import_N_Matrix_From_Amazon",
                            "Import_BestBuy_Commission_Report",
                            "Import_WalmartMarketplace_Commission_Report",
                            "Import_BuyDotCom_Commission_Report",
                            "Purchase_Order_Open_Reminder",
                            "Find_ASIN_From_UPC_List",
                            "Export_NewEggDotCom_Specifics",
                            "Query_Amazon_Document_Response",
                            "JET_Category_Download",
                            "Export_BuyDotCom_Specifics",
                            "Import_BuyDotCom_Attributes",
                            "Export_All_Customers",
                            "Inventory_Calculate_QtySold_History",
                            "Warehouse_Inventory_Export",
                            "Calcuate_Inventory_For_All_SKUs",
                            "Initialize_Bin",
                            "Transfer_Between_SKUs_Bulk",
                            "POContainer_Receive",
                            "UnReceive_PO",
                            "Product_Revise_Prices_on_All_Channels",
                            "Export_Sears_Attributes",
                            "Generate_FBA_Business_Report",
                            "Export_Product_Images",
                            "Import_Product_Manual_Reserves",
                            "Create_Shadows_For_Products",
                            "Products_Import_Inventory_For_Task",
                            "Import_Mapped_Orders",
                            "Import_Mapped_Tracking",
                            "Import_Mapped_Inventory",
                            "Import_ProductWarehouse_Bin_Info",
                            "Import_FBA_Shipment",
                            "Export_FBA_Shipment",
                            "Add_Records_For_Unshipped_Bins",
                            "Replace_Kit_Products",
                            "Import_Bonanza_Traits",
                            "Export_RMA",
                            "Orders_Create_NewEggBiz_API",
                            "RMA_Export_for_Task",
                            "Import_RMA",
                            "Revise_Listing_Part_On_Ebay_via_ItemID",
                            "Merge_SKU",
                            "Product_Import_Magento_Tier_Pricing",
                            "RMA_Import_for_Task",
                            "AdjustWarehouseBins",
                            "ReCalculateBackOrders_forOrders",
                            "Import_Magento_Products",
                            "Import_NewEggBiz_Attributes",
                            "Amazon_Attribute_to_Product_Specific",
                            "Order_Refresh_From_Paypal",
                            "Orders_ReCalc_Order_Cost",
                            "Import_FBA_Shipment_From_File",
                            "Import_Product_Clones",
                            "Import_JET_Attributes",
                            "Merge_Customers",
                            "Import_ZipCode_Data",
                            "Export_Magento_Attributes",
                            "Export_JET_Attributes",
                            "Create_SettlementData_PandL",
                            "Import_Amazon_Report",
                            "Get_Amazon_BuyBox_Price",
                            "Warehouse_Delete",
                            "Export_Product_Manual_Reserves",
                            "Archive_Products_On_JET",
                            "Export_Shopify_Metadata",
                            "Website_Update_Listing_Part_via_Plugin",
                            "Import_N_Matrix_Simple",
                            "Import_Product_Manufacturer",
                            "Etsy_category_refresh",
                            "Import_eBay_Settlement_Report",
                            "Export_Product_Replacement_SKUs",
                            "Shopify_Download_Listings",
                            "Reverb_Download_ActiveListings",
                            "Import_ProductWarehouse_Bin_Adjustments",
                            "Import_WalmartMarketplace_Attributes",
                            "Find_Sales_Rank",
                            "Import_Product_average_Cost_Adjustments",
                            "Zero_Out_Inventory",
                            "Export_WalmartMarketplace_Attributes",
                            "Import_WalmartMarketplace_Attributes_Variation",
                            "Break_Kits",
                            "Export_Shopify_Tags",
                            "Update_ProductTypeDefaults_On_Products",
                            "FBA_Shipment_Delete",
                            "Import_Product_Documents",
                            "Export_N_Matrix",
                            "Update_GroupOn_Cost_On_Orders",
                            "LightspeedPOS_Get_ItemIDs",
                            "LightspeedPOS_Create_ItemCount",
                            "ChannelInvoiceSettlement",
                            "MassGenieCategoriesUpdate",
                            "Orders_SetVoid",
                            "Retire_On_WalmartMarketplace",
                            "Update_Walmart_Marketplace_ShippingTemplate_On_Products",
                            "Upload_Shipping_Exception_On_JET",
                            "ReverbCategoriesUpdate",
                            "TangaCategoriesUpdate",
                            "NewEgg_Shipment_ResetPreview",
                            "UnShip_Orders",
                            "HouzzCategoriesUpdate",
                            "HouzzCategoryAttributesUpdate",
                            "FBA_Reconciliation_Export_For_Task",
                            "Calculate_PredictivePurchasing_InStockDays_V2",
                            "Import_Amazon_Attributes",
                            "NewEggDotCom_Shipment_Reserve",
                            "Calculate_Package_Size",
                            "Orders_Receive_Magento_Payments",
                            "Orders_Acknowledge_to_Channel",
                            "Export_Amazon_Attributes",
                            "Orders_ReApply_CoOp_Fee",
                            "PO_Create_from_ShippingContainers",
                            "Disconnect_Inventory_From_Channel",
                            "Update_Product_Weight_On_Related_Orders",
                            "Products_Clone",
                            "Products_Copy",
                            "Products_ChangeSKU",
                            "Product_Update_UPC_For_Channel",
                            "Import_Vendor_Products_For_Task",
                            "Product_Export_UPC_For_Channel",
                            "NewEggDotCom_Update_Product_Volume_Discount",
                            "Walmart_Update_Lag_Time",
                            "BuyDotCom_Import_Catagories",
                            "WalmartMarketplace_Create_Product_From_Listing",
                            "Import_Purchase_Orders_Items",
                            "Export_Orders_Dropship",
                            "Import_NewEggDotcom_Int_Prices",
                            "Import_Groupon_Chargeback",
                            "Product_Titles_Export",
                            "Product_Export_Kit_Assemblies",
                            "Orders_Taxjar_Submit_Taxes",
                            "Orders_Taxjar_Post_Taxes",
                            "Export_Channel_Category_Suggestions",
                            "WalmartMarketplace_Get_Product_Info",
                            "Product_Shadow_Export",
                            "Shipping_Containers_Export",
                            "Import_Product_ITF14",
                            "Import_CustomColumns",
                            "Remove_Business_Prices_On_Amazon",
                            "Export_Etsy_Attributes",
                            "Import_Etsy_Attributes",
                            "FBA_Shipment_QueryStatus",
                            "Predictive_Restocking_Task_Create_PO",
                            "Orders_Query_Shipping_Delivery_Status",
                            "Orders_Import_ShippingCost_For_Task",
                            "InventoryArrival_For_Task",
                            "ShadowPersistencyChanged",
                            "Product_DeleteBrokenImages",
                            "Export_Houzz_Attributes",
                            "Import_Houzz_Attributes",
                            "Product_Update_ManufacturerSKU_For_Channel",
                            "Wayfair_RegisterMutation",
                            "Import_Warehouse_Inventory_ForProfile",
                            "Save_Variation_Products",
                            "Sears_UpdateLeadTimeForProduct",
                            "Orders_Import_ShippingCost_UPSMI",
                            "Import_Walmart_Marketplace_Settlement",
                            "Export_VendorCentral_Shipment",
                            "Prepare_Client_Wide_Data",
                            "Import_JET_Settlement",
                            "Prepare_NMatrix_Simple",
                            "TargetPlus_DownloadApprovedItemTypes_With_Taxonomy",
                            "Product_SetActive_InActive",
                            "Import_VendorCentral_Shipment",
                            "POContainer_UpdateShippingStatus",
                            "Update_Images_On_Channel",
                            "PartiallyReceivedShipments_ClearInTransitInventory",
                            "Import_Product_Fitment",
                            "Wish_EnrollProductInReturnsProgram",
                            "Orders_Reapply_FBA_Returns",
                            "Disconnect_Shipping_Confirmation_From_Order_Source",
                            "Orders_Import_ShippingCost_FedEx",
                            "Warehouse_Transfer_Requests_Delete",
                            "Warehouse_Bin_Movememnt_Export",
                            "Fix_Walmart_Marketplace_Attributes",
                            "Export_Product_Accessories",
                            "Houzz_UpdateProduct",
                            "Import_AssembleKits",
                            "Import_WarehouseTransferRequestReceive",
                            "Import_Order_PnL_Adjustments",
                            "Export_Product_Warehouse_Images",
                            "Orders_GroupActions",
                            "Orders_ImportVendorCentralCheckAvailability",
                            "Import_Product_Image_Info_ChannelSpecific",
                            "Lock_ShippingMethod_InBulk",
                            "Import_Product_WarehouseImage",
                            "Import_WarehouseTransferRequest",
                            "CleanOut_FBA_Movements",
                            "Orders_Import_Partial_Info",
                            "Export_Order_PnL_Adjustments",
                            "Export_Order_SettlementDetails",
                            "Export_SKUUPCAliasReconciliationReport",
                            "Amazon_AdReport_RequestSave",
                            "Import_Shipping_Preference_For_Qty",
                            "Resize_Product_Images",
                            "Export_WalmartMarketplace_WFS_Attributes",
                            "Import_WalmartMarketplace_WFS_Attributes",
                            "WFS_ShipmentInbound_Delete",
                            "Product_Warehouse_Inventory_Transfer_Request_RemoveIntransit",
                            "Revise_Listing_Part_On_Magento",
                            "Export_WFS_Shipment",
                            "Re_Apply_CreditCard_Fee",
                            "WFS_Shipment_Reserve",
                            "Calcualte_Inventory_For_WFS_Shipment",
                            "Switch_Fulfilled_By",
                            "Export_Shipping_Preference_For_Qty",
                            "Import_Inventory_ForProfile",
                            "eBay_Refresh_Attributes",
                            "Fix_PO_Qty_Before_Receive",
                            "WalmartMarketplace_Bulk_Convert_V3_Attributes_To_V4",
                            "Commit_Cycle_Count",
                            "Customers_Import_Documents",
                            "Wish_RemoveProduct",
                            "Import_Order_Transparency_Codes",
                            "FBA_InboundShipmentUpdateDisconnect",
                            "KitAssemblyWorkOrders_Export_for_Task",
                            "Import_WFS_Shipment_From_File",
                            "Associate_PredefinedShippingTemplate_On_WalmartMarketplace",
                            "Import_WFS_Shipment",
                            "VendorInvoice_Import_for_Task",
                            "NewEggDotCom_Export_ItemLookup",
                            "VendorInvoice_Export_for_Task",
                            "Import_NewEgg_Shipment",
                            "eBay_Export_Parts_Compatibility",
                            "WalmartMarketplace_ConnectToPriceUpdate",
                            "Orders_ImportSerial",
                            "Export_N_Matrix_Images",
                            "Bulk_Upload_SKU_eBayMarketingCampaign",
                            "Wish_DownloadBrand",
                            "Export_ProductLotNumberActivity",
                            "Export_VendorSKU",
                            "Orders_UpdateQBExported",
                            "Amazon_Query_FBA_ShippingStatus",
                            "Orders_UpdateShippingRequireThirdParty",
                            "ProductWarehouseBin_AddAjustment",
                            "WholesaleAgenda_Import",
                            "Rebuild_AverageCost_For_All_Products",
                            "VendorInvoice_Delete",
                            "PartiallyReceivedWFSShipments_ClearInTransitInventory",
                            "Houzz_Update_Lead_Time",
                            "WarehouseInventoryTransfer_ClearInTransitInventory",
                            "Product_Import_BigCommerce_Tier_Pricing",
                            "Predictive_WFS_Restocking_Task_Create_PO",
                            "Disconnect_Price_From_Channel",
                            "Brand_Import",
                            "Export_Shipping_Containers_With_Items_for_Task",
                            "Import_Website_Attributes",
                            "Export_Product_Alias_for_Task",
                            "Import_Product_Alias_for_Task",
                            "Export_Warehouse_Inventory_Transfer_Requests_for_Task",
                            "Export_Listed_On_Channel_for_Task",
                            "Export_Customer_for_Task",
                            "Import_Shopify_MetaField",
                            "Export_Product_LastInventorySent",
                            "WarehouseBin_PrintBarcode",
                            "WalmartMarketplace_CompetitivePricingOptInOrOptOut",
                            "WFS_ShipmentInbound_QueryStatus",
                            "Orders_ApplyRebates",
                            "Dynamic_Code_Execution",
                            "AdHoc_Plugin_Execution",
                            "Products_Enable_For_WFS"
                        ]
                    },
                    {
                        "name": "model.submittedBy",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model.jobStatuses",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32",
                            "enum": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10]
                        },
                        "collectionFormat": "multi",
                        "x-enumNames": [
                            "Submitted",
                            "Processing",
                            "Completed",
                            "Failed",
                            "PartialSuccess",
                            "OnHold",
                            "Cancelled",
                            "Cancelled_Service_Restarted",
                            "Aborted_Too_Much_Time_Consumed",
                            "Cancelled_While_Running"
                        ]
                    },
                    {
                        "name": "model.companyIDList",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "model.submittedFrom",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "model.submittedTo",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "model.queuedJobPriorities",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32",
                            "enum": [0, 1, 2, 3]
                        },
                        "collectionFormat": "multi",
                        "x-enumNames": ["BelowNormal", "Normal", "High", "Critical"]
                    },
                    {
                        "name": "model.pageNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model.pageSize",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Base.GetAllResponse[SellerCloud.Delta.Models.ManageEntity.Concrete.QueuedJobDto]"
                        }
                    }
                }
            }
        },
        "/api/Rma/GetAllByView": {
            "get": {
                "tags": ["Rma"],
                "summary": "Get data for RMAs by view",
                "operationId": "Rma_GetAllByView",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "viewID",
                        "in": "query",
                        "description": "View ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Page Size",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Base.GetAllResponse[SellerCloud.Delta.Models.ClientAPI.Base.GetAllResponse[SellerCloud.Delta.Models.ManageEntity.Concrete.RmaDto]]"
                        }
                    }
                }
            }
        },
        "/api/Rma/{id}/Receive": {
            "post": {
                "tags": ["Rma"],
                "summary": "Receive RMA items",
                "operationId": "Rma_ReceiveRMAItems",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of RMA",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Request model",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Rma.ReceiveReturnRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Rma/{id}/Resolution": {
            "post": {
                "tags": ["Rma"],
                "summary": "Set resolution for RMA items",
                "operationId": "Rma_SetResolution",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of RMA",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Request model",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Rma.SetResolutionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Rma/ReturnReasons": {
            "get": {
                "tags": ["Rma"],
                "summary": "Get list of possible RMA items return reasons",
                "operationId": "Rma_GetReturnReasons",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Rma.RmaReason"
                            }
                        }
                    }
                }
            }
        },
        "/api/Rma/{id}/ShippingLabels": {
            "get": {
                "tags": ["Rma"],
                "summary": "Get data for RMA Shipping labels",
                "operationId": "Rma_GetRMAShippingLabelsDataContext",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of RMA",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Rma.RMAShippingLabelResponseDto"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Rma"],
                "summary": "Create shipping label",
                "operationId": "Rma_CreateShippingLabel",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of RMA",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Request model",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Rma.CreateShippingLabelRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Rma.CreateShippingLabelResponse"
                        }
                    }
                }
            }
        },
        "/api/Rma/{id}/ShippingLabels/Carriers": {
            "get": {
                "tags": ["Rma"],
                "summary": "Get list of possible RMA shipping carriers",
                "operationId": "Rma_GetShippingCarriers",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of RMA",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SellerCloud.Common.Models.Data.IDataItem[System.String,System.String]"
                            }
                        }
                    }
                }
            }
        },
        "/api/Rma/{id}/ShippingLabels/Services": {
            "get": {
                "tags": ["Rma"],
                "summary": "Get list of possible RMA shipping services",
                "operationId": "Rma_GetShippingServices",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of RMA",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "shippingCarrier",
                        "in": "query",
                        "description": "Shipping carrier",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SellerCloud.Common.Models.Data.IDataItem[System.Int32,System.String]"
                            }
                        }
                    }
                }
            }
        },
        "/api/Rma/{id}/ShippingLabels/PackageTypes": {
            "get": {
                "tags": ["Rma"],
                "summary": "Get list of possible RMA shipping package types",
                "operationId": "Rma_GetShippingPackageTypes",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of RMA",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "shippingCarrier",
                        "in": "query",
                        "description": "Shipping carrier",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SellerCloud.Common.Models.Data.IDataItem[System.String,System.String]"
                            }
                        }
                    }
                }
            }
        },
        "/api/Rma/{id}/ShippingLabels/InsuranceProviders": {
            "get": {
                "tags": ["Rma"],
                "summary": "Get list of possible RMA shipping insurance providers",
                "operationId": "Rma_GetShippingInsuraceProviders",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of RMA",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "shippingCarrier",
                        "in": "query",
                        "description": "Shipping carrier",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SellerCloud.Common.Models.Data.IDataItem[System.String,System.String]"
                            }
                        }
                    }
                }
            }
        },
        "/api/Rma/{id}/ShippingLabels/{labelId}": {
            "get": {
                "tags": ["Rma"],
                "summary": "Download shipping label in pdf format",
                "operationId": "Rma_DownloadShippingLabel",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of RMA",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "labelId",
                        "in": "path",
                        "description": "Shipping label id",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Rma/{id}/Notes": {
            "post": {
                "tags": ["Rma"],
                "operationId": "Rma_CreateRmaNote",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Rma.CreateRmaNoteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Rma/Views": {
            "get": {
                "tags": ["Rma"],
                "summary": "Get RMA saved views",
                "operationId": "Rma_Views",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CoreWebAdmin.Delta.ManageEntity.View.SavedView"
                            }
                        }
                    }
                }
            }
        },
        "/api/Rma/{id}/CustomColumns": {
            "get": {
                "tags": ["Rma"],
                "summary": "Get RMA Custom Columns",
                "operationId": "Rma_GetCustomColumns",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of RMA",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Order.CustomColumnDto"
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Rma"],
                "summary": "Update RMA custom columns",
                "operationId": "Rma_UpdateCustomColumns",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of RMA.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Collection of columns to be updated.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Base.UpdateCustomColumn"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Rma/{id}/Items": {
            "get": {
                "tags": ["Rma"],
                "summary": "Get RMA items",
                "operationId": "Rma_GetRmaItems",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of RMA",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Rma.Items.RmaItem"
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Rma"],
                "summary": "Update RMA items",
                "operationId": "Rma_UpdateRmaItems",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of RMA",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Collection of RMA items to be updated",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Rma.Items.RmaItemUpdate"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "tags": ["Rma"],
                "summary": "Add RMA items",
                "operationId": "Rma_AddRmaItems",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of RMA",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Collection of RMA items to add",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Rma.Items.RmaItemAdd"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Rma": {
            "get": {
                "tags": ["Rma"],
                "summary": "Get metadata for list of RMAs",
                "operationId": "Rma_GetAll",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "model.rMAIDs",
                        "in": "query",
                        "description": "List of RMA IDs",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "model.orderIDs",
                        "in": "query",
                        "description": "List of Order IDs related to RMAs",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "model.companyIDList",
                        "in": "query",
                        "description": "List of Company IDs to which the RMAs belong",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "model.productID",
                        "in": "query",
                        "description": "List of ProductIDs in the RMAs",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "model.rmaStatuses",
                        "in": "query",
                        "description": "RMA Statuses",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32",
                            "enum": [0, 1, 2, 3]
                        },
                        "collectionFormat": "multi",
                        "x-enumNames": ["Open", "On_Hold", "Processing", "Closed"]
                    },
                    {
                        "name": "model.orderSources",
                        "in": "query",
                        "description": "Channels",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32",
                            "enum": [
                                0, 1, 2, 3, 4, 5, 6, 7, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
                                25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
                                42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,
                                59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75,
                                76, 77, 78, 79
                            ]
                        },
                        "collectionFormat": "multi",
                        "x-enumNames": [
                            "Local_Store",
                            "eBayOrder",
                            "eBaySingleItem",
                            "Yahoo",
                            "Amazon",
                            "PriceGrabber",
                            "Website",
                            "Buy",
                            "NewEggMall",
                            "Magento",
                            "QuickBooks",
                            "RMS",
                            "Cart32",
                            "Sears",
                            "FBA",
                            "Wholesale",
                            "Overstock",
                            "NewEggdotcom",
                            "Etsy",
                            "Bonanza",
                            "PriceFalls",
                            "Wayfair",
                            "UnbeatableSale",
                            "VendorCentral",
                            "Hayneedle",
                            "SmartBargains",
                            "uBid",
                            "ATGStores",
                            "StacksAndStacks",
                            "Sharkstores",
                            "BestBuy",
                            "Kohls",
                            "Staples",
                            "OneStopPlus",
                            "Meijer",
                            "Sonsi",
                            "Walmart",
                            "HSN",
                            "NewEgg_Business",
                            "KMart",
                            "Wish",
                            "SPRichards",
                            "FingerHut",
                            "Groupon",
                            "Walmart_Marketplace",
                            "ShopHQ",
                            "PriceMinister",
                            "GS",
                            "DrugStore",
                            "MercadoLibre",
                            "JET",
                            "ElevenMain",
                            "SearsVendor",
                            "Choxi",
                            "TradeMe",
                            "Tanga",
                            "Target",
                            "GrouponMarketplace",
                            "Reverb",
                            "BedBathAndBeyond",
                            "Dropship_Central",
                            "DSW",
                            "Houzz",
                            "Gilt",
                            "BestBuyDS",
                            "TopHatter",
                            "HomeDepot",
                            "MassGenie",
                            "Cdiscount",
                            "GrouponGateway",
                            "SBN",
                            "GoogleExpress",
                            "Target_Plus",
                            "WFS"
                        ]
                    },
                    {
                        "name": "model.orderSourceRMAID",
                        "in": "query",
                        "description": "Order Source (Channel) RMA ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "model.orderSourceOrderIDs",
                        "in": "query",
                        "description": "List of Order Source (Channel) Order IDs",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "model.dateFrom",
                        "in": "query",
                        "description": "RMA Date Create From",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "model.dateTo",
                        "in": "query",
                        "description": "RMA Date Create To",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "model.closedOnFrom",
                        "in": "query",
                        "description": "Closed on from date",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "model.closedOnTo",
                        "in": "query",
                        "description": "Closed on to date",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "model.returnedOnFrom",
                        "in": "query",
                        "description": "Received on from date",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "model.returnedOnTo",
                        "in": "query",
                        "description": "Received on to date",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "model.lastUpdatedOnFrom",
                        "in": "query",
                        "description": "Last Updated On From date",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "model.lastUpdatedOnTo",
                        "in": "query",
                        "description": "Last Updated On To date",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "model.pageNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model.pageSize",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Base.GetAllResponse[SellerCloud.Delta.Models.ManageEntity.Concrete.RmaDto]"
                        }
                    }
                }
            },
            "post": {
                "tags": ["Rma"],
                "summary": "Create RMA",
                "operationId": "Rma_CreateRma",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Request model",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Rma.CreateRmaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Rma.CreateRmaResponse"
                        }
                    }
                }
            }
        },
        "/api/Rma/{id}": {
            "get": {
                "tags": ["Rma"],
                "summary": "Get metadata for single RMA",
                "operationId": "Rma_Get",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of RMA",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Rma.RmaEntity"
                        }
                    }
                }
            },
            "put": {
                "tags": ["Rma"],
                "summary": "Update single RMA",
                "operationId": "Rma_Update",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of RMA",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Request model",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Rma.UpdateRmaRuquest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/ScheduledTasks/{id}/ExecutionHistory": {
            "get": {
                "tags": ["ScheduledTasks"],
                "summary": "Get execution history of a task",
                "operationId": "ScheduledTasks_ExecutionHistory",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the scheduled task",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.Common.PaginationResultsDto[SellerCloud.Delta.Models.Details.Concrete.ScheduledTask.ExecutionHistoryItem]"
                        }
                    }
                }
            }
        },
        "/api/ScheduledTasks/{id}/ExecuteTask": {
            "post": {
                "tags": ["ScheduledTasks"],
                "summary": "Execute scheduled task by ID",
                "operationId": "ScheduledTasks_ExecuteTask",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the scheduled task",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Response.QueuedJobResponse"
                        }
                    }
                }
            }
        },
        "/api/Settings/PaymentTerms": {
            "get": {
                "tags": ["Settings"],
                "summary": "Get list of payment terms",
                "operationId": "Settings_GetPaymentTerms",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SellerCloud.Common.Models.Data.IDataItem[System.Int32,System.String]"
                            }
                        }
                    }
                }
            }
        },
        "/api/Settings/Manufacturers": {
            "get": {
                "tags": ["Settings"],
                "summary": "Get list of manufacturers for company",
                "operationId": "Settings_GetManufacturers",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "query",
                        "description": "Company ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SellerCloud.Common.Models.Data.IDataItem[System.Int32,System.String]"
                            }
                        }
                    }
                }
            }
        },
        "/api/Settings/Brands": {
            "get": {
                "tags": ["Settings"],
                "summary": "Get list of brands",
                "operationId": "Settings_GetBrands",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SellerCloud.Common.Models.Data.IDataItem[System.Int32,System.String]"
                            }
                        }
                    }
                }
            }
        },
        "/api/Vendors/{id}/products": {
            "get": {
                "tags": ["Vendors"],
                "summary": "Get metadata for list of vendor products",
                "operationId": "Vendors_GetVendorProducts",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the vendor",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model.productSKU",
                        "in": "query",
                        "description": "Product SKU",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "model.vendorSKU",
                        "in": "query",
                        "description": "Vendor SKU",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "model.pageNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model.pageSize",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Base.GetAllResponse[SellerCloud.Delta.Models.ClientAPI.Vendor.VendorProductDto]"
                        }
                    }
                }
            }
        },
        "/api/Vendors/{vendorId}/products/{productSKU}": {
            "put": {
                "tags": ["Vendors"],
                "summary": "Update single Vendor Product [obsolete]",
                "operationId": "Vendors_UpdateVendorProduct",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "vendorId",
                        "in": "path",
                        "description": "ID of Vendor",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "productSKU",
                        "in": "path",
                        "description": "Product SKU",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Request model",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Vendor.UpdateVendorProductRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Vendors/{vendorId}/products": {
            "put": {
                "tags": ["Vendors"],
                "summary": "Update Single Vendor Product",
                "operationId": "Vendors_UpdateVendorProductV2",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "vendorId",
                        "in": "path",
                        "description": "ID of Vendor",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Request model",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Vendor.UpdateVendorProductRequestV2"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "tags": ["Vendors"],
                "summary": "Add Vendor Products",
                "operationId": "Vendors_AddVendorProduct",
                "consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "vendorId",
                        "in": "path",
                        "description": "ID of Vendor",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Request model",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Vendor.AddVendorProductRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Vendors/{id}": {
            "get": {
                "tags": ["Vendors"],
                "summary": "Get metadata for existing vendor",
                "operationId": "Vendors_Get",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the vendor",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Vendor.VendorDto"
                        }
                    }
                }
            }
        },
        "/api/Vendors": {
            "get": {
                "tags": ["Vendors"],
                "summary": "Get metadata for list of vendors",
                "operationId": "Vendors_GetAll",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "model.vendorIDs",
                        "in": "query",
                        "description": "List of vendor IDs",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "model.names",
                        "in": "query",
                        "description": "List of vendor names",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "model.email",
                        "in": "query",
                        "description": "Vendor email",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "model.activeStatus",
                        "in": "query",
                        "description": "Active status",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model.pageNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model.pageSize",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Base.GetAllResponse[SellerCloud.Delta.Models.ClientAPI.Vendor.BaseVendorDto]"
                        }
                    }
                }
            }
        },
        "/api/Warehouses/{id}": {
            "get": {
                "tags": ["Warehouses"],
                "summary": "Get metadata of existing warehouse",
                "operationId": "Warehouses_Get",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of warehouse.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CoreWebAdmin.Delta.DetailsEntity.Models.Warehouse.WarehouseDto"
                        }
                    }
                }
            }
        },
        "/api/Warehouses": {
            "get": {
                "tags": ["Warehouses"],
                "summary": "Get metadata for list of warehouses",
                "operationId": "Warehouses_GetAll",
                "consumes": [],
                "produces": ["application/json", "text/json"],
                "parameters": [
                    {
                        "name": "model.warehouseIds",
                        "in": "query",
                        "description": "Warehouse Ids",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "model.warehouseType",
                        "in": "query",
                        "description": "Warehouse type<br />  0 = Normal ,  1 = FBA ,  2 = Un_Tested ,  3 = Interim ,  4 = DropShip ,  5 = NewEgg ,  6 = Cdiscount ,  7 = WFS ",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [0, 1, 2, 3, 4, 5, 6, 7],
                        "x-enumNames": [
                            "Normal",
                            "FBA",
                            "Un_Tested",
                            "Interim",
                            "DropShip",
                            "NewEgg",
                            "Cdiscount",
                            "WFS"
                        ]
                    },
                    {
                        "name": "model.name",
                        "in": "query",
                        "description": "Name of warehouse",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "model.isDefault",
                        "in": "query",
                        "description": "Is a default warehouse<br />  0 = All ,  1 = Yes ,  2 = No ",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [0, 1, 2],
                        "x-enumNames": ["All", "Yes", "No"]
                    },
                    {
                        "name": "model.isSellable",
                        "in": "query",
                        "description": "Is sellable warehouse<br />  0 = All ,  1 = Yes ,  2 = No ",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [0, 1, 2],
                        "x-enumNames": ["All", "Yes", "No"]
                    },
                    {
                        "name": "model.pageNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model.pageSize",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Base.GetAllResponse[CoreWebAdmin.Delta.Manage.Concrete.ManageWarehouseDto]"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "SellerCloud.Delta.WebApi.Models.Authentication.CreateTokenRequest": {
            "required": ["Username", "Password"],
            "type": "object",
            "properties": {
                "Username": {
                    "description": "Valid username",
                    "type": "string"
                },
                "Password": {
                    "description": "Valid user password",
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.WebApi.Models.Authentication.CreateTokenResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "token_type": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "expires_in": {
                    "format": "double",
                    "type": "number"
                },
                ".issued": {
                    "format": "date-time",
                    "type": "string"
                },
                ".expires": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Product.UpdateBasicInfoRequest": {
            "required": ["ProductID"],
            "type": "object",
            "properties": {
                "ProductID": {
                    "type": "string"
                },
                "ShortDescription": {
                    "type": "string"
                },
                "LongDescription": {
                    "type": "string"
                },
                "ListPrice": {
                    "format": "double",
                    "type": "number"
                },
                "SitePrice": {
                    "format": "double",
                    "type": "number"
                },
                "SiteCost": {
                    "format": "double",
                    "type": "number"
                },
                "ProductName": {
                    "type": "string"
                },
                "IsActive": {
                    "type": "boolean"
                },
                "MasterSKU": {
                    "type": "string"
                },
                "ManufacturerSKU": {
                    "type": "string"
                },
                "UPC": {
                    "type": "string"
                },
                "ASIN": {
                    "type": "string"
                },
                "FNSKU": {
                    "type": "string"
                },
                "EAN": {
                    "type": "string"
                },
                "GTIN": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Product.ProductPricesDto": {
            "type": "object",
            "properties": {
                "SitePrice": {
                    "format": "double",
                    "type": "number"
                },
                "ChannelsPrices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Product.ChannelPriceDto"
                    }
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Product.ChannelPriceDto": {
            "required": ["ChannelID"],
            "type": "object",
            "properties": {
                "ChannelID": {
                    "format": "int32",
                    "description": " 0 = Local_Store ,  1 = eBayOrder ,  2 = eBaySingleItem ,  3 = Yahoo ,  4 = Amazon ,  5 = PriceGrabber ,  6 = Website ,  7 = Buy ,  12 = NewEggMall ,  15 = Magento ,  16 = QuickBooks ,  17 = RMS ,  18 = Cart32 ,  19 = Sears ,  20 = FBA ,  21 = Wholesale ,  22 = Overstock ,  23 = NewEggdotcom ,  24 = Etsy ,  25 = Bonanza ,  26 = PriceFalls ,  27 = Wayfair ,  28 = UnbeatableSale ,  29 = VendorCentral ,  30 = Hayneedle ,  31 = SmartBargains ,  32 = uBid ,  33 = ATGStores ,  34 = StacksAndStacks ,  35 = Sharkstores ,  36 = BestBuy ,  37 = Kohls ,  38 = Staples ,  39 = OneStopPlus ,  40 = Meijer ,  41 = Sonsi ,  42 = Walmart ,  43 = HSN ,  44 = NewEgg_Business ,  45 = KMart ,  46 = Wish ,  47 = SPRichards ,  48 = FingerHut ,  49 = Groupon ,  50 = Walmart_Marketplace ,  51 = ShopHQ ,  52 = PriceMinister ,  53 = GS ,  54 = DrugStore ,  55 = MercadoLibre ,  56 = JET ,  57 = ElevenMain ,  58 = SearsVendor ,  59 = Choxi ,  60 = TradeMe ,  61 = Tanga ,  62 = Target ,  63 = GrouponMarketplace ,  64 = Reverb ,  65 = BedBathAndBeyond ,  66 = Dropship_Central ,  67 = DSW ,  68 = Houzz ,  69 = Gilt ,  70 = BestBuyDS ,  71 = TopHatter ,  72 = HomeDepot ,  73 = MassGenie ,  74 = Cdiscount ,  75 = GrouponGateway ,  76 = SBN ,  77 = GoogleExpress ,  78 = Target_Plus ,  79 = WFS ",
                    "enum": [
                        0, 1, 2, 3, 4, 5, 6, 7, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,
                        27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45,
                        46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64,
                        65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79
                    ],
                    "type": "integer",
                    "x-enumNames": [
                        "Local_Store",
                        "eBayOrder",
                        "eBaySingleItem",
                        "Yahoo",
                        "Amazon",
                        "PriceGrabber",
                        "Website",
                        "Buy",
                        "NewEggMall",
                        "Magento",
                        "QuickBooks",
                        "RMS",
                        "Cart32",
                        "Sears",
                        "FBA",
                        "Wholesale",
                        "Overstock",
                        "NewEggdotcom",
                        "Etsy",
                        "Bonanza",
                        "PriceFalls",
                        "Wayfair",
                        "UnbeatableSale",
                        "VendorCentral",
                        "Hayneedle",
                        "SmartBargains",
                        "uBid",
                        "ATGStores",
                        "StacksAndStacks",
                        "Sharkstores",
                        "BestBuy",
                        "Kohls",
                        "Staples",
                        "OneStopPlus",
                        "Meijer",
                        "Sonsi",
                        "Walmart",
                        "HSN",
                        "NewEgg_Business",
                        "KMart",
                        "Wish",
                        "SPRichards",
                        "FingerHut",
                        "Groupon",
                        "Walmart_Marketplace",
                        "ShopHQ",
                        "PriceMinister",
                        "GS",
                        "DrugStore",
                        "MercadoLibre",
                        "JET",
                        "ElevenMain",
                        "SearsVendor",
                        "Choxi",
                        "TradeMe",
                        "Tanga",
                        "Target",
                        "GrouponMarketplace",
                        "Reverb",
                        "BedBathAndBeyond",
                        "Dropship_Central",
                        "DSW",
                        "Houzz",
                        "Gilt",
                        "BestBuyDS",
                        "TopHatter",
                        "HomeDepot",
                        "MassGenie",
                        "Cdiscount",
                        "GrouponGateway",
                        "SBN",
                        "GoogleExpress",
                        "Target_Plus",
                        "WFS"
                    ]
                },
                "Price": {
                    "format": "double",
                    "type": "number"
                },
                "UseDefaultSitePrice": {
                    "type": "boolean"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Product.UpdateProductPricesRequest": {
            "required": ["ProductID"],
            "type": "object",
            "properties": {
                "ProductID": {
                    "type": "string"
                },
                "SitePrice": {
                    "format": "double",
                    "type": "number"
                },
                "ChannelsPrices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Product.ChannelPriceDto"
                    }
                }
            }
        },
        "CoreWebAdmin.Delta.ManageEntity.View.SavedView": {
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "Name": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Base.GetAllResponse[SellerCloud.Delta.Models.ManageEntity.Concrete.ProductCatalogDto]": {
            "type": "object",
            "properties": {
                "Items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.ManageEntity.Concrete.ProductCatalogDto"
                    }
                },
                "TotalResults": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ManageEntity.Concrete.ProductCatalogDto": {
            "type": "object",
            "properties": {
                "ImageUrl": {
                    "type": "string"
                },
                "Weight": {
                    "format": "double",
                    "type": "number"
                },
                "ShippingWeight": {
                    "format": "double",
                    "type": "number"
                },
                "WeightOz": {
                    "format": "double",
                    "type": "number"
                },
                "PackageWeightLbs": {
                    "format": "double",
                    "type": "number"
                },
                "PackageWeightOz": {
                    "format": "double",
                    "type": "number"
                },
                "LocationNotes": {
                    "type": "string"
                },
                "eBayCategory": {
                    "type": "string"
                },
                "eBayStoreCategory": {
                    "type": "string"
                },
                "eBayItemCondition": {
                    "type": "string"
                },
                "MAPPrice": {
                    "format": "double",
                    "type": "number"
                },
                "ShadowOf": {
                    "type": "string"
                },
                "AverageCost": {
                    "format": "double",
                    "type": "number"
                },
                "Priority": {
                    "format": "int32",
                    "type": "integer"
                },
                "Rating": {
                    "format": "int32",
                    "type": "integer"
                },
                "ProductName": {
                    "type": "string"
                },
                "ShortDescription": {
                    "type": "string"
                },
                "LongDescription": {
                    "type": "string"
                },
                "Buyer": {
                    "type": "string"
                },
                "ASIN": {
                    "type": "string"
                },
                "GTIN": {
                    "type": "string"
                },
                "QtySold15": {
                    "format": "int32",
                    "type": "integer"
                },
                "QtySold30": {
                    "format": "int32",
                    "type": "integer"
                },
                "QtySold60": {
                    "format": "int32",
                    "type": "integer"
                },
                "QtySold90": {
                    "format": "int32",
                    "type": "integer"
                },
                "QtySold180": {
                    "format": "int32",
                    "type": "integer"
                },
                "QtySold365": {
                    "format": "int32",
                    "type": "integer"
                },
                "QtySoldYTD": {
                    "format": "int32",
                    "type": "integer"
                },
                "IsEndOfLife": {
                    "type": "boolean"
                },
                "ShippingCost": {
                    "format": "double",
                    "type": "number"
                },
                "AggregatePhysicalQtyFBA": {
                    "format": "int32",
                    "type": "integer"
                },
                "AggregatePhysicalQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "AggregateQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "ProductType": {
                    "type": "string"
                },
                "DefaultVendor": {
                    "type": "string"
                },
                "DefaultVendorSKU": {
                    "type": "string"
                },
                "HomeCountryCode": {
                    "format": "int32",
                    "type": "integer"
                },
                "Country": {
                    "type": "string"
                },
                "AmazonMarketPlaceID": {
                    "type": "string"
                },
                "OverstockGeneratedProductID": {
                    "type": "string"
                },
                "ReverbListingID": {
                    "format": "int64",
                    "type": "integer"
                },
                "WalmartProductID": {
                    "type": "string"
                },
                "WPID": {
                    "type": "string"
                },
                "ItemPageURL": {
                    "type": "string"
                },
                "CompanyName": {
                    "type": "string"
                },
                "CompanyNameAbbreviation": {
                    "type": "string"
                },
                "FirstKitChild": {
                    "type": "string"
                },
                "WarehousePhysicalQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "WarehousePhysicalQtyValue": {
                    "format": "double",
                    "type": "number"
                },
                "WarehouseReservedQtyValue": {
                    "format": "double",
                    "type": "number"
                },
                "AggregatedQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "AggregatePhysicalSellableQtyIncludingPhysicalValue": {
                    "format": "double",
                    "type": "number"
                },
                "ReservedQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "ReserveQtyTotalValue": {
                    "format": "double",
                    "type": "number"
                },
                "PhysicalQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "AggregateNonSellableQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "StorePrice": {
                    "format": "double",
                    "type": "number"
                },
                "ManufacturerSKU": {
                    "type": "string"
                },
                "ManufacturerID": {
                    "format": "int32",
                    "type": "integer"
                },
                "BrandID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ASINInActiveListing": {
                    "type": "string"
                },
                "WeightLbs": {
                    "format": "double",
                    "type": "number"
                },
                "UPC": {
                    "type": "string"
                },
                "AmazonFBASKU": {
                    "type": "string"
                },
                "NELiveInventory": {
                    "format": "int32",
                    "type": "integer"
                },
                "NEBizInventory": {
                    "format": "int32",
                    "type": "integer"
                },
                "WebsiteViewURL": {
                    "type": "string"
                },
                "WishProductID": {
                    "type": "string"
                },
                "FulfilledBy": {
                    "format": "int32",
                    "type": "integer"
                },
                "SalesRank": {
                    "format": "int32",
                    "type": "integer"
                },
                "AmazonProductCondition": {
                    "format": "int32",
                    "type": "integer"
                },
                "AmazonCondition": {
                    "type": "string"
                },
                "MainProductID": {
                    "type": "string"
                },
                "FixedPriceQuantity": {
                    "format": "int32",
                    "type": "integer"
                },
                "BuyItNowPrice": {
                    "format": "double",
                    "type": "number"
                },
                "ShippingTemplateID": {
                    "type": "string"
                },
                "ListPrice": {
                    "format": "double",
                    "type": "number"
                },
                "SalePrice": {
                    "format": "double",
                    "type": "number"
                },
                "SalePriceStartDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "SalePriceEndDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "DropShipMode": {
                    "format": "int32",
                    "description": " 1 = ShipFromSite ,  2 = ShipFromVendor ,  3 = ShipFromManufacturer ",
                    "enum": [1, 2, 3],
                    "type": "integer",
                    "x-enumNames": ["ShipFromSite", "ShipFromVendor", "ShipFromManufacturer"]
                },
                "eBayCategory1ID": {
                    "type": "string"
                },
                "eBayCategory1Name": {
                    "type": "string"
                },
                "eBayTopTitle": {
                    "type": "string"
                },
                "ProductTitleCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "DescriptionTemplateID": {
                    "type": "string"
                },
                "ebayItemID": {
                    "type": "string"
                },
                "ebaySiteCode": {
                    "format": "int32",
                    "type": "integer"
                },
                "ProductConditionName": {
                    "type": "string"
                },
                "NotesCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "OrderReserveTotal": {
                    "format": "int32",
                    "type": "integer"
                },
                "VendorOfProduct": {
                    "type": "string"
                },
                "VendorPrice": {
                    "format": "double",
                    "type": "number"
                },
                "ReplacementQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "WarehouseName": {
                    "type": "string"
                },
                "IsSellAble": {
                    "type": "boolean"
                },
                "WarehouseCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "CompanyID": {
                    "format": "int32",
                    "type": "integer"
                },
                "EnabledOnChannels": {
                    "description": " 0 = Local_Store ,  1 = eBayOrder ,  2 = eBaySingleItem ,  3 = Yahoo ,  4 = Amazon ,  5 = PriceGrabber ,  6 = Website ,  7 = Buy ,  12 = NewEggMall ,  15 = Magento ,  16 = QuickBooks ,  17 = RMS ,  18 = Cart32 ,  19 = Sears ,  20 = FBA ,  21 = Wholesale ,  22 = Overstock ,  23 = NewEggdotcom ,  24 = Etsy ,  25 = Bonanza ,  26 = PriceFalls ,  27 = Wayfair ,  28 = UnbeatableSale ,  29 = VendorCentral ,  30 = Hayneedle ,  31 = SmartBargains ,  32 = uBid ,  33 = ATGStores ,  34 = StacksAndStacks ,  35 = Sharkstores ,  36 = BestBuy ,  37 = Kohls ,  38 = Staples ,  39 = OneStopPlus ,  40 = Meijer ,  41 = Sonsi ,  42 = Walmart ,  43 = HSN ,  44 = NewEgg_Business ,  45 = KMart ,  46 = Wish ,  47 = SPRichards ,  48 = FingerHut ,  49 = Groupon ,  50 = Walmart_Marketplace ,  51 = ShopHQ ,  52 = PriceMinister ,  53 = GS ,  54 = DrugStore ,  55 = MercadoLibre ,  56 = JET ,  57 = ElevenMain ,  58 = SearsVendor ,  59 = Choxi ,  60 = TradeMe ,  61 = Tanga ,  62 = Target ,  63 = GrouponMarketplace ,  64 = Reverb ,  65 = BedBathAndBeyond ,  66 = Dropship_Central ,  67 = DSW ,  68 = Houzz ,  69 = Gilt ,  70 = BestBuyDS ,  71 = TopHatter ,  72 = HomeDepot ,  73 = MassGenie ,  74 = Cdiscount ,  75 = GrouponGateway ,  76 = SBN ,  77 = GoogleExpress ,  78 = Target_Plus ,  79 = WFS ",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "description": " 0 = Local_Store ,  1 = eBayOrder ,  2 = eBaySingleItem ,  3 = Yahoo ,  4 = Amazon ,  5 = PriceGrabber ,  6 = Website ,  7 = Buy ,  12 = NewEggMall ,  15 = Magento ,  16 = QuickBooks ,  17 = RMS ,  18 = Cart32 ,  19 = Sears ,  20 = FBA ,  21 = Wholesale ,  22 = Overstock ,  23 = NewEggdotcom ,  24 = Etsy ,  25 = Bonanza ,  26 = PriceFalls ,  27 = Wayfair ,  28 = UnbeatableSale ,  29 = VendorCentral ,  30 = Hayneedle ,  31 = SmartBargains ,  32 = uBid ,  33 = ATGStores ,  34 = StacksAndStacks ,  35 = Sharkstores ,  36 = BestBuy ,  37 = Kohls ,  38 = Staples ,  39 = OneStopPlus ,  40 = Meijer ,  41 = Sonsi ,  42 = Walmart ,  43 = HSN ,  44 = NewEgg_Business ,  45 = KMart ,  46 = Wish ,  47 = SPRichards ,  48 = FingerHut ,  49 = Groupon ,  50 = Walmart_Marketplace ,  51 = ShopHQ ,  52 = PriceMinister ,  53 = GS ,  54 = DrugStore ,  55 = MercadoLibre ,  56 = JET ,  57 = ElevenMain ,  58 = SearsVendor ,  59 = Choxi ,  60 = TradeMe ,  61 = Tanga ,  62 = Target ,  63 = GrouponMarketplace ,  64 = Reverb ,  65 = BedBathAndBeyond ,  66 = Dropship_Central ,  67 = DSW ,  68 = Houzz ,  69 = Gilt ,  70 = BestBuyDS ,  71 = TopHatter ,  72 = HomeDepot ,  73 = MassGenie ,  74 = Cdiscount ,  75 = GrouponGateway ,  76 = SBN ,  77 = GoogleExpress ,  78 = Target_Plus ,  79 = WFS ",
                        "enum": [
                            0, 1, 2, 3, 4, 5, 6, 7, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,
                            26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
                            44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
                            62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79
                        ],
                        "type": "integer"
                    },
                    "x-enumNames": [
                        "Local_Store",
                        "eBayOrder",
                        "eBaySingleItem",
                        "Yahoo",
                        "Amazon",
                        "PriceGrabber",
                        "Website",
                        "Buy",
                        "NewEggMall",
                        "Magento",
                        "QuickBooks",
                        "RMS",
                        "Cart32",
                        "Sears",
                        "FBA",
                        "Wholesale",
                        "Overstock",
                        "NewEggdotcom",
                        "Etsy",
                        "Bonanza",
                        "PriceFalls",
                        "Wayfair",
                        "UnbeatableSale",
                        "VendorCentral",
                        "Hayneedle",
                        "SmartBargains",
                        "uBid",
                        "ATGStores",
                        "StacksAndStacks",
                        "Sharkstores",
                        "BestBuy",
                        "Kohls",
                        "Staples",
                        "OneStopPlus",
                        "Meijer",
                        "Sonsi",
                        "Walmart",
                        "HSN",
                        "NewEgg_Business",
                        "KMart",
                        "Wish",
                        "SPRichards",
                        "FingerHut",
                        "Groupon",
                        "Walmart_Marketplace",
                        "ShopHQ",
                        "PriceMinister",
                        "GS",
                        "DrugStore",
                        "MercadoLibre",
                        "JET",
                        "ElevenMain",
                        "SearsVendor",
                        "Choxi",
                        "TradeMe",
                        "Tanga",
                        "Target",
                        "GrouponMarketplace",
                        "Reverb",
                        "BedBathAndBeyond",
                        "Dropship_Central",
                        "DSW",
                        "Houzz",
                        "Gilt",
                        "BestBuyDS",
                        "TopHatter",
                        "HomeDepot",
                        "MassGenie",
                        "Cdiscount",
                        "GrouponGateway",
                        "SBN",
                        "GoogleExpress",
                        "Target_Plus",
                        "WFS"
                    ]
                },
                "WebEnabled": {
                    "type": "boolean"
                },
                "BuyDotComEnabled": {
                    "type": "boolean"
                },
                "MagentoEnabled": {
                    "type": "boolean"
                },
                "SearsEnabled": {
                    "type": "boolean"
                },
                "PriceGrabberEnabled": {
                    "type": "boolean"
                },
                "OverStockEnabled": {
                    "type": "boolean"
                },
                "PriceFallEnabled": {
                    "type": "boolean"
                },
                "UnbeatableSalesEnabled": {
                    "type": "boolean"
                },
                "eBayEnabled": {
                    "type": "boolean"
                },
                "AmazonEnabled": {
                    "type": "boolean"
                },
                "WayfairEnabled": {
                    "type": "boolean"
                },
                "VendorCentralEnabled": {
                    "type": "boolean"
                },
                "BonanzaEnabled": {
                    "type": "boolean"
                },
                "SmartBargainsEnabled": {
                    "type": "boolean"
                },
                "ATGStoresEnabled": {
                    "type": "boolean"
                },
                "BestBuyEnabled": {
                    "type": "boolean"
                },
                "BestBuyDsEnabled": {
                    "type": "boolean"
                },
                "KohlsEnabled": {
                    "type": "boolean"
                },
                "HomeDepotEnabled": {
                    "type": "boolean"
                },
                "StaplesEnabled": {
                    "type": "boolean"
                },
                "MeijerEnabled": {
                    "type": "boolean"
                },
                "OneStopPlusEnabled": {
                    "type": "boolean"
                },
                "SonsiEnabled": {
                    "type": "boolean"
                },
                "KMartEnabled": {
                    "type": "boolean"
                },
                "ElevenMainEnabled": {
                    "type": "boolean"
                },
                "GroupOnGoodsEnabled": {
                    "type": "boolean"
                },
                "GrouponMarketplaceEnabled": {
                    "type": "boolean"
                },
                "WalmartEnabled": {
                    "type": "boolean"
                },
                "WalmartAPIEnabled": {
                    "type": "boolean"
                },
                "WishEnabled": {
                    "type": "boolean"
                },
                "JETEnabled": {
                    "type": "boolean"
                },
                "EtsyEnabled": {
                    "type": "boolean"
                },
                "FingerHutEnabled": {
                    "type": "boolean"
                },
                "TopHatterEnabled": {
                    "type": "boolean"
                },
                "TangaEnabled": {
                    "type": "boolean"
                },
                "TargetEnabled": {
                    "type": "boolean"
                },
                "NewEggDotComEnabled": {
                    "type": "boolean"
                },
                "NewEggBizEnabled": {
                    "type": "boolean"
                },
                "YahooStoreEnabled": {
                    "type": "boolean"
                },
                "HayneedleEnabled": {
                    "type": "boolean"
                },
                "ReverbEnabled": {
                    "type": "boolean"
                },
                "DropShipCentralEnabled": {
                    "type": "boolean"
                },
                "DrugStoresEnabled": {
                    "type": "boolean"
                },
                "CdiscountEnabled": {
                    "type": "boolean"
                },
                "BedBathAndBeyondEnabled": {
                    "type": "boolean"
                },
                "ShopHQEnabled": {
                    "type": "boolean"
                },
                "GoogleShoppingEnabled": {
                    "type": "boolean"
                },
                "HouzzEnabled": {
                    "type": "boolean"
                },
                "IsMatrixParent": {
                    "type": "boolean",
                    "readOnly": true
                },
                "MerchantSKU": {
                    "type": "string"
                },
                "AmazonMerchantSKU": {
                    "type": "string"
                },
                "WayfairMerchantSKU": {
                    "type": "string"
                },
                "WebsiteProductID": {
                    "type": "string"
                },
                "ChannelPreviews": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.Entity.Product.ChannelPreview"
                    }
                },
                "ActiveRebateID": {
                    "format": "double",
                    "type": "number"
                },
                "ActiveRebateValue": {
                    "format": "double",
                    "type": "number"
                },
                "ActiveRebateDeductFromItemCost": {
                    "format": "double",
                    "type": "number"
                },
                "DeductFromItemCostType": {
                    "format": "int32",
                    "type": "integer"
                },
                "Status": {
                    "format": "int32",
                    "description": " 0 = Disabled ,  1 = Active ",
                    "enum": [0, 1],
                    "type": "integer",
                    "x-enumNames": ["Disabled", "Active"]
                },
                "InventoryDependantOption": {
                    "format": "int32",
                    "type": "integer"
                },
                "OnOrder": {
                    "format": "int32",
                    "type": "integer"
                },
                "AmazonPrice": {
                    "format": "double",
                    "type": "number"
                },
                "VendorID": {
                    "format": "int32",
                    "type": "integer"
                },
                "LastAggregateDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "LastModifiedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "AmazonMarketplace": {
                    "type": "string"
                },
                "OnBackOrder": {
                    "format": "int32",
                    "type": "integer"
                },
                "BackOrderVisible": {
                    "type": "boolean",
                    "readOnly": true
                },
                "WholeSalePrice": {
                    "format": "double",
                    "type": "number"
                },
                "WholeSalePriceVisible": {
                    "type": "boolean",
                    "readOnly": true
                },
                "SitePrice": {
                    "format": "double",
                    "type": "number"
                },
                "SiteCost": {
                    "format": "double",
                    "type": "number"
                },
                "IsKit": {
                    "type": "boolean"
                },
                "SiteCostVisible": {
                    "type": "boolean",
                    "readOnly": true
                },
                "LastCost": {
                    "format": "double",
                    "type": "number"
                },
                "LastCostVisible": {
                    "type": "boolean",
                    "readOnly": true
                },
                "ShowPriorityAndRatingDelta": {
                    "type": "boolean",
                    "readOnly": true
                },
                "InventoryAvailableQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "ChildProducts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.ManageEntity.Concrete.ProductBundleDto"
                    }
                },
                "CustomColumns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.CustomColumns.CustomColumnValueDto"
                    }
                },
                "AmazonStoreStatus": {
                    "type": "boolean"
                },
                "AmazonEnableBOPISProduct": {
                    "type": "boolean"
                },
                "ID": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.Entity.Product.ChannelPreview": {
            "type": "object",
            "properties": {
                "Channel": {
                    "format": "int32",
                    "description": " 0 = Local_Store ,  1 = eBayOrder ,  2 = eBaySingleItem ,  3 = Yahoo ,  4 = Amazon ,  5 = PriceGrabber ,  6 = Website ,  7 = Buy ,  12 = NewEggMall ,  15 = Magento ,  16 = QuickBooks ,  17 = RMS ,  18 = Cart32 ,  19 = Sears ,  20 = FBA ,  21 = Wholesale ,  22 = Overstock ,  23 = NewEggdotcom ,  24 = Etsy ,  25 = Bonanza ,  26 = PriceFalls ,  27 = Wayfair ,  28 = UnbeatableSale ,  29 = VendorCentral ,  30 = Hayneedle ,  31 = SmartBargains ,  32 = uBid ,  33 = ATGStores ,  34 = StacksAndStacks ,  35 = Sharkstores ,  36 = BestBuy ,  37 = Kohls ,  38 = Staples ,  39 = OneStopPlus ,  40 = Meijer ,  41 = Sonsi ,  42 = Walmart ,  43 = HSN ,  44 = NewEgg_Business ,  45 = KMart ,  46 = Wish ,  47 = SPRichards ,  48 = FingerHut ,  49 = Groupon ,  50 = Walmart_Marketplace ,  51 = ShopHQ ,  52 = PriceMinister ,  53 = GS ,  54 = DrugStore ,  55 = MercadoLibre ,  56 = JET ,  57 = ElevenMain ,  58 = SearsVendor ,  59 = Choxi ,  60 = TradeMe ,  61 = Tanga ,  62 = Target ,  63 = GrouponMarketplace ,  64 = Reverb ,  65 = BedBathAndBeyond ,  66 = Dropship_Central ,  67 = DSW ,  68 = Houzz ,  69 = Gilt ,  70 = BestBuyDS ,  71 = TopHatter ,  72 = HomeDepot ,  73 = MassGenie ,  74 = Cdiscount ,  75 = GrouponGateway ,  76 = SBN ,  77 = GoogleExpress ,  78 = Target_Plus ,  79 = WFS ",
                    "enum": [
                        0, 1, 2, 3, 4, 5, 6, 7, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,
                        27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45,
                        46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64,
                        65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79
                    ],
                    "type": "integer",
                    "x-enumNames": [
                        "Local_Store",
                        "eBayOrder",
                        "eBaySingleItem",
                        "Yahoo",
                        "Amazon",
                        "PriceGrabber",
                        "Website",
                        "Buy",
                        "NewEggMall",
                        "Magento",
                        "QuickBooks",
                        "RMS",
                        "Cart32",
                        "Sears",
                        "FBA",
                        "Wholesale",
                        "Overstock",
                        "NewEggdotcom",
                        "Etsy",
                        "Bonanza",
                        "PriceFalls",
                        "Wayfair",
                        "UnbeatableSale",
                        "VendorCentral",
                        "Hayneedle",
                        "SmartBargains",
                        "uBid",
                        "ATGStores",
                        "StacksAndStacks",
                        "Sharkstores",
                        "BestBuy",
                        "Kohls",
                        "Staples",
                        "OneStopPlus",
                        "Meijer",
                        "Sonsi",
                        "Walmart",
                        "HSN",
                        "NewEgg_Business",
                        "KMart",
                        "Wish",
                        "SPRichards",
                        "FingerHut",
                        "Groupon",
                        "Walmart_Marketplace",
                        "ShopHQ",
                        "PriceMinister",
                        "GS",
                        "DrugStore",
                        "MercadoLibre",
                        "JET",
                        "ElevenMain",
                        "SearsVendor",
                        "Choxi",
                        "TradeMe",
                        "Tanga",
                        "Target",
                        "GrouponMarketplace",
                        "Reverb",
                        "BedBathAndBeyond",
                        "Dropship_Central",
                        "DSW",
                        "Houzz",
                        "Gilt",
                        "BestBuyDS",
                        "TopHatter",
                        "HomeDepot",
                        "MassGenie",
                        "Cdiscount",
                        "GrouponGateway",
                        "SBN",
                        "GoogleExpress",
                        "Target_Plus",
                        "WFS"
                    ]
                },
                "URL": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ManageEntity.Concrete.ProductBundleDto": {
            "type": "object",
            "properties": {
                "ProductId": {
                    "type": "string"
                },
                "ChildProductId": {
                    "type": "string"
                },
                "PerKitQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "ProductName": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.CustomColumns.CustomColumnValueDto": {
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "DataType": {
                    "format": "int32",
                    "description": " 0 = String ,  1 = Integer ,  2 = Decimal ,  3 = DateTime ,  4 = Boolean ,  5 = nText ,  6 = Hyperlink ",
                    "enum": [0, 1, 2, 3, 4, 5, 6],
                    "type": "integer",
                    "x-enumNames": [
                        "String",
                        "Integer",
                        "Decimal",
                        "DateTime",
                        "Boolean",
                        "nText",
                        "Hyperlink"
                    ]
                },
                "DataLength": {
                    "format": "int32",
                    "type": "integer"
                },
                "IsDropDownColumn": {
                    "type": "boolean"
                },
                "IsDropDownCustomTextAllowed": {
                    "type": "boolean"
                },
                "IsDropDownAllowMultipleSelection": {
                    "type": "boolean"
                },
                "ClientID": {
                    "format": "int32",
                    "type": "integer"
                },
                "NewValue": {
                    "type": "object"
                },
                "AllowHTMLPopup": {
                    "type": "boolean"
                },
                "DataSourceContainer": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Common.Models.Data.DataItem[System.String,System.String]"
                    }
                },
                "IsRequired": {
                    "type": "boolean"
                },
                "ColumnName": {
                    "type": "string"
                },
                "DisplayName": {
                    "type": "string"
                },
                "Value": {
                    "type": "object"
                }
            }
        },
        "SellerCloud.Common.Models.Data.DataItem[System.String,System.String]": {
            "type": "object",
            "properties": {
                "Key": {
                    "type": "string"
                },
                "Value": {
                    "type": "string"
                },
                "Additional": {
                    "type": "object"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Catalog.ProductTypesFilters": {
            "type": "object",
            "properties": {
                "ProductTypeIds": {
                    "description": "List of Product Type IDs",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "TypeNames": {
                    "description": "List of Product Type Names",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "PageNumber": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Base.GetAllResponse[SellerCloud.Delta.Models.ManageEntity.Concrete.ManageProductTypeDto]": {
            "type": "object",
            "properties": {
                "Items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.ManageEntity.Concrete.ManageProductTypeDto"
                    }
                },
                "TotalResults": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ManageEntity.Concrete.ManageProductTypeDto": {
            "type": "object",
            "properties": {
                "CompanyID": {
                    "format": "int32",
                    "type": "integer"
                },
                "CompanyName": {
                    "type": "string"
                },
                "IsDefault": {
                    "type": "boolean"
                },
                "ProductTypeName": {
                    "type": "string"
                },
                "BuyDotComCategoryID": {
                    "type": "string"
                },
                "NewEggCategory": {
                    "type": "string"
                },
                "PriceLevel": {
                    "format": "int32",
                    "type": "integer"
                },
                "ID": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Catalog.DimentionsFilter": {
            "type": "object",
            "properties": {
                "SearchTerm": {
                    "type": "string"
                },
                "PageNumber": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Base.GetAllResponse[SellerCloud.Delta.Models.Toolbox.Product.VariationProperties.VariationDimensionResponseDto]": {
            "type": "object",
            "properties": {
                "Items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.Toolbox.Product.VariationProperties.VariationDimensionResponseDto"
                    }
                },
                "TotalResults": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.Toolbox.Product.VariationProperties.VariationDimensionResponseDto": {
            "type": "object",
            "properties": {
                "UniqueName": {
                    "type": "string"
                },
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ClientID": {
                    "format": "int32",
                    "type": "integer"
                },
                "Name": {
                    "type": "string"
                },
                "Abbreviation": {
                    "type": "string"
                },
                "ManufacturerName": {
                    "type": "string"
                },
                "ProductTypeName": {
                    "type": "string"
                },
                "Values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.Toolbox.Product.VariationProperties.VariationDimensionValueDto"
                    }
                }
            }
        },
        "SellerCloud.Delta.Models.Toolbox.Product.VariationProperties.VariationDimensionValueDto": {
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "DimensionID": {
                    "format": "int32",
                    "type": "integer"
                },
                "Value": {
                    "type": "string"
                },
                "ObjectValue": {
                    "type": "object"
                },
                "Abbreviation": {
                    "type": "string"
                },
                "SortOrder": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Catalog.LoadMatrixFilter": {
            "type": "object",
            "properties": {
                "ProductID": {
                    "type": "string"
                },
                "PageNumber": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.Toolbox.Product.VariationProperties.MatrixWithImagesResponse": {
            "type": "object",
            "properties": {
                "Matrix": {
                    "$ref": "#/definitions/SellerCloud.Delta.Models.Toolbox.Product.VariationProperties.VariationCombinationDto"
                },
                "Images": {
                    "$ref": "#/definitions/SellerCloud.Delta.Models.Toolbox.Product.VariationProperties.VariationDimensionImageGridDto"
                }
            }
        },
        "SellerCloud.Delta.Models.Toolbox.Product.VariationProperties.VariationCombinationDto": {
            "type": "object",
            "properties": {
                "Columns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "CompanyId": {
                    "format": "int32",
                    "type": "integer"
                },
                "MatrixParentID": {
                    "type": "string"
                },
                "IsMatrixAvailable": {
                    "type": "boolean"
                },
                "IsMatrixChild": {
                    "type": "boolean"
                },
                "TotalResults": {
                    "format": "int32",
                    "type": "integer"
                },
                "Rows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.Toolbox.Product.VariationProperties.VariationCombinationRowDto"
                    }
                },
                "UsedDimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BVSoftware.BVC.Core.Catalog.MatrixProductDimension"
                    }
                }
            }
        },
        "SellerCloud.Delta.Models.Toolbox.Product.VariationProperties.VariationDimensionImageGridDto": {
            "type": "object",
            "properties": {
                "VariationName": {
                    "type": "string"
                },
                "DimensionID": {
                    "format": "int32",
                    "type": "integer"
                },
                "Items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.Toolbox.Product.VariationProperties.VariationDimensionValuesImagesDto"
                    }
                },
                "UsedDimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BVSoftware.BVC.Core.Catalog.MatrixProductDimension"
                    }
                }
            }
        },
        "SellerCloud.Delta.Models.Toolbox.Product.VariationProperties.VariationCombinationRowDto": {
            "type": "object",
            "properties": {
                "Row": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.Toolbox.Product.VariationProperties.VariationDimensionValueDto"
                    }
                }
            }
        },
        "BVSoftware.BVC.Core.Catalog.MatrixProductDimension": {
            "type": "object",
            "properties": {
                "IsPrimary": {
                    "type": "boolean"
                },
                "ProductID": {
                    "type": "string"
                },
                "DimensionID": {
                    "format": "int32",
                    "type": "integer"
                },
                "SortOrder": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.Toolbox.Product.VariationProperties.VariationDimensionValuesImagesDto": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string"
                },
                "ValueID": {
                    "format": "int32",
                    "type": "integer"
                },
                "Images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BVSoftware.BVC.Core.Catalog.MatrixProductDimensionImage"
                    }
                }
            }
        },
        "BVSoftware.BVC.Core.Catalog.MatrixProductDimensionImage": {
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ProductID": {
                    "type": "string"
                },
                "DimensionID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ValueID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ImageID": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Catalog.CatalogFilters": {
            "type": "object",
            "properties": {
                "SKU": {
                    "description": "List of product IDs",
                    "type": "string"
                },
                "DisplayShadows": {
                    "format": "int32",
                    "description": " 0 = Non_Shadow_Only ,  1 = Shadow_Only ,  2 = Shadow_Parent ,  3 = Not_Shadow_or_Shadow_Parent ",
                    "enum": [0, 1, 2, 3],
                    "type": "integer",
                    "x-enumNames": [
                        "Non_Shadow_Only",
                        "Shadow_Only",
                        "Shadow_Parent",
                        "Not_Shadow_or_Shadow_Parent"
                    ]
                },
                "SelectedKits": {
                    "format": "int32",
                    "description": "Kit 0 = Not_a_Kit_Parent_or_Component ,  1 = Kit_Parent ,  2 = Kit_Component ,  3 = Not_a_Kit_Parent ,  4 = Not_a_Kit_Component ",
                    "enum": [0, 1, 2, 3, 4],
                    "type": "integer",
                    "x-enumNames": [
                        "Not_a_Kit_Parent_or_Component",
                        "Kit_Parent",
                        "Kit_Component",
                        "Not_a_Kit_Parent",
                        "Not_a_Kit_Component"
                    ]
                },
                "ActiveStatus": {
                    "format": "int32",
                    "description": "Is Active 0 = No ,  1 = Yes ,  -1 = All ",
                    "enum": [0, 1, -1],
                    "type": "integer",
                    "x-enumNames": ["No", "Yes", "All"]
                },
                "PoID": {
                    "description": "List of IDs of different purchase orders",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "CompanyID": {
                    "description": "List of IDs of different companies",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "VendorID": {
                    "description": "List of IDs of vendors",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "DefaultVendorID": {
                    "description": "List of IDs of default vendors",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "VendorSKU": {
                    "description": "List of vendor SKUs",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Warehouse": {
                    "description": "List of IDs of different warehouses",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "UPC": {
                    "description": "Universal Product Code number",
                    "type": "string"
                },
                "PhysicalQtyFrom": {
                    "format": "int32",
                    "description": "Minimum physical qty",
                    "type": "integer"
                },
                "PhysicalQtyTo": {
                    "format": "int32",
                    "description": "Maximum physical qty",
                    "type": "integer"
                },
                "KitType": {
                    "format": "int32",
                    "description": "Inventory kit type 0 = Independant ,  1 = MainComponent ,  2 = AllComponents ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["Independant", "MainComponent", "AllComponents"]
                },
                "LastAggregateFrom": {
                    "format": "date-time",
                    "description": "Start date-time of creation: mm/dd/yyyy hh:mm",
                    "type": "string"
                },
                "LastAggregateTo": {
                    "format": "date-time",
                    "description": "Last date-time of creation: mm/dd/yyyy hh:mm",
                    "type": "string"
                },
                "LastUpdatedFrom": {
                    "format": "date-time",
                    "description": "Start date-time of updating: mm/dd/yyyy hh:mm",
                    "type": "string"
                },
                "LastUpdatedTo": {
                    "format": "date-time",
                    "description": "Last date-time of updating: mm/dd/yyyy hh:mm",
                    "type": "string"
                },
                "Keyword": {
                    "type": "string"
                },
                "PageNumber": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Common.Models.Data.IDataItem[System.String,System.String]": {
            "type": "object",
            "properties": {
                "Key": {
                    "type": "string",
                    "readOnly": true
                },
                "Value": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "SellerCloud.Delta.Client.Api.Models.Response.FileResponse": {
            "type": "object",
            "properties": {
                "FileName": {
                    "type": "string"
                },
                "Content": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Client.Api.Models.Request.CatalogImportFileRequest": {
            "required": ["FileContents"],
            "type": "object",
            "properties": {
                "FileContents": {
                    "type": "string"
                },
                "Format": {
                    "format": "int32",
                    "description": " 0 = TAB_Delimited ,  1 = CSV ,  2 = Excel ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["TAB_Delimited", "CSV", "Excel"]
                }
            }
        },
        "SellerCloud.Delta.Client.Api.Models.Response.QueuedJobResponse": {
            "type": "object",
            "properties": {
                "QueuedJobLink": {
                    "type": "string"
                },
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "Message": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.Entity.Product.ImportProductInfo.BulkUpdateSaveTemplateRequest": {
            "required": ["TemplateFields", "TemplateName"],
            "type": "object",
            "properties": {
                "TemplateFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "TemplateName": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Services.IServiceDataResult[SellerCloud.Delta.Models.Entity.Product.ImportProductInfo.BulkUpdateTemplateDto]": {
            "type": "object",
            "properties": {
                "Data": {
                    "$ref": "#/definitions/SellerCloud.Delta.Models.Entity.Product.ImportProductInfo.BulkUpdateTemplateDto"
                },
                "ResultType": {
                    "format": "int32",
                    "description": " 0 = Success ,  1 = Warning ,  2 = Error ,  3 = Info ",
                    "enum": [0, 1, 2, 3],
                    "type": "integer"
                },
                "Message": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.Entity.Product.ImportProductInfo.BulkUpdateTemplateDto": {
            "required": ["TemplateName"],
            "type": "object",
            "properties": {
                "TemplateName": {
                    "type": "string"
                },
                "TemplateFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "SellerCloud.Delta.Models.Entity.Product.ImportProductInfo.BulkUpdateDownloadTemplateRequest": {
            "type": "object",
            "properties": {
                "TemplateName": {
                    "type": "string"
                },
                "TemplateFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ToAddSampleRow": {
                    "type": "boolean"
                },
                "ProductId": {
                    "type": "string"
                },
                "FileFormat": {
                    "format": "int32",
                    "description": " 0 = TAB_Delimited ,  1 = CSV ,  2 = Excel ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["TAB_Delimited", "CSV", "Excel"]
                },
                "FormatProduct": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Client.Api.Models.Request.CatalogImportFileRequest[SellerCloud.Delta.Client.Api.Models.Request.BulkUpdateProductsDto]": {
            "required": ["Metadata", "FileContents"],
            "type": "object",
            "properties": {
                "Metadata": {
                    "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Request.BulkUpdateProductsDto"
                },
                "FileContents": {
                    "type": "string"
                },
                "Format": {
                    "format": "int32",
                    "description": " 0 = TAB_Delimited ,  1 = CSV ,  2 = Excel ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["TAB_Delimited", "CSV", "Excel"]
                }
            }
        },
        "SellerCloud.Delta.Client.Api.Models.Request.BulkUpdateProductsDto": {
            "type": "object",
            "properties": {
                "ScheduleDate": {
                    "format": "date-time",
                    "description": "At what time task to be scheduled",
                    "type": "string"
                },
                "CreateProductIfDoesntExist": {
                    "description": "If to create a product if such does not exist in Sellercloud",
                    "type": "boolean"
                },
                "CompanyIdForNewProduct": {
                    "format": "int32",
                    "description": "ID of the company for the newly imported products",
                    "type": "integer"
                },
                "UpdateFromCompanyId": {
                    "format": "int32",
                    "description": "ID of company",
                    "type": "integer"
                },
                "DoNotUpdateProducts": {
                    "description": "If to update existing products in Sellercloud",
                    "type": "boolean"
                }
            }
        },
        "SellerCloud.Delta.Models.Manage.Actions.Catalog.ExportStandardProductInfoRequest": {
            "required": ["ProductIds"],
            "type": "object",
            "properties": {
                "StandardExportKind": {
                    "format": "int32",
                    "description": " 0 = Kits ,  1 = Shadows ,  2 = Aliases ,  3 = Variations ,  4 = Rebates ,  5 = GeneralExportInExcel ,  6 = GeneralExportInPdf ,  7 = RelatedProducts ,  8 = RelatedKits ,  9 = ProductGroups ,  10 = ListedOnChannel ,  11 = ProductImages ,  12 = UpcForChannel ,  13 = VendorSkus ,  14 = VariationImages ",
                    "enum": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14],
                    "type": "integer",
                    "x-enumNames": [
                        "Kits",
                        "Shadows",
                        "Aliases",
                        "Variations",
                        "Rebates",
                        "GeneralExportInExcel",
                        "GeneralExportInPdf",
                        "RelatedProducts",
                        "RelatedKits",
                        "ProductGroups",
                        "ListedOnChannel",
                        "ProductImages",
                        "UpcForChannel",
                        "VendorSkus",
                        "VariationImages"
                    ]
                },
                "ProductIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "SellerCloud.Delta.Client.Api.Models.Response.ExportQueuedJobResponse": {
            "type": "object",
            "properties": {
                "QueuedJobLink": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Client.Api.Models.Response.CustomCatalogExportsMetadataResponse": {
            "type": "object",
            "properties": {
                "FileFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Common.Models.Data.IDataItem[System.Int32,System.String]"
                    }
                },
                "CustomTemplates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Common.Models.Data.IDataItem[System.Int32,System.String]"
                    }
                },
                "AvailableColumns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Common.Models.Data.IDataItem[System.String,System.String]"
                    }
                }
            }
        },
        "SellerCloud.Common.Models.Data.IDataItem[System.Int32,System.String]": {
            "type": "object",
            "properties": {
                "Key": {
                    "format": "int32",
                    "type": "integer",
                    "readOnly": true
                },
                "Value": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "SellerCloud.Delta.Client.Api.Models.Request.CustomCatalogExportRequest": {
            "required": ["Columns", "ProductIds"],
            "type": "object",
            "properties": {
                "Columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Request.CatalogExportColumnName"
                    }
                },
                "FileFormat": {
                    "format": "int32",
                    "description": " 0 = TAB_Delimited ,  1 = CSV ,  2 = Excel ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["TAB_Delimited", "CSV", "Excel"]
                },
                "SortBy": {
                    "type": "string"
                },
                "ProductIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "SellerCloud.Delta.Client.Api.Models.Request.CatalogExportColumnName": {
            "required": ["OriginalName"],
            "type": "object",
            "properties": {
                "OriginalName": {
                    "type": "string"
                },
                "DisplayName": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.Manage.Actions.Catalog.CustomCatalogExportTemplateDto": {
            "type": "object",
            "properties": {
                "TemplateId": {
                    "format": "int32",
                    "type": "integer"
                },
                "TemplateName": {
                    "type": "string"
                },
                "TemplateColumns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.Manage.Actions.Catalog.ExportInfoTemplateColumnDto"
                    }
                }
            }
        },
        "SellerCloud.Delta.Models.Manage.Actions.Catalog.ExportInfoTemplateColumnDto": {
            "description": "DTO for the \"Selected columns\" panel\r\nin the Export Product Catalog Info wizard.",
            "type": "object",
            "properties": {
                "Key": {
                    "type": "string"
                },
                "Value": {
                    "type": "string",
                    "readOnly": true
                },
                "DisplayName": {
                    "type": "string"
                },
                "Additional": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Product.ExportPluginsResponse": {
            "type": "object",
            "properties": {
                "Plugins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Common.Models.Data.IDataItem[System.String,System.String]"
                    }
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Product.ExportProductViaPluginRequest": {
            "required": ["PluginProfileKey", "ProductIds"],
            "type": "object",
            "properties": {
                "PluginProfileKey": {
                    "type": "string"
                },
                "FileFormat": {
                    "format": "int32",
                    "description": " 0 = TAB_Delimited ,  1 = CSV ,  2 = Excel ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["TAB_Delimited", "CSV", "Excel"]
                },
                "ProductIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Product.MappingProfilesResponse": {
            "type": "object",
            "properties": {
                "MappingProfiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Common.Models.Data.IDataItem[System.String,System.String]"
                    }
                }
            }
        },
        "SellerCloud.Delta.Client.Api.Models.Request.CatalogImportFileRequest[SellerCloud.Delta.Models.Entity.Product.ImportProductInfo.PerCompanyProductDataImportRequest]": {
            "required": ["Metadata", "FileContents"],
            "type": "object",
            "properties": {
                "Metadata": {
                    "$ref": "#/definitions/SellerCloud.Delta.Models.Entity.Product.ImportProductInfo.PerCompanyProductDataImportRequest"
                },
                "FileContents": {
                    "type": "string"
                },
                "Format": {
                    "format": "int32",
                    "description": " 0 = TAB_Delimited ,  1 = CSV ,  2 = Excel ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["TAB_Delimited", "CSV", "Excel"]
                }
            }
        },
        "SellerCloud.Delta.Models.Entity.Product.ImportProductInfo.PerCompanyProductDataImportRequest": {
            "required": ["UploadedFileToken"],
            "type": "object",
            "properties": {
                "CompanyId": {
                    "format": "int32",
                    "type": "integer"
                },
                "InfoKind": {
                    "format": "int32",
                    "description": " 0 = BulkUpdateProducts ,  1 = ViaPluginProfile ,  2 = Shadows ,  3 = Variations ,  4 = Kits ,  5 = KitBoxDimensions ,  6 = EbaySpecifics ,  7 = ProductImages ,  8 = ProductChannelSpecificImages ,  9 = WalmartMarketplaceAttributes ,  10 = WalmartMarketplaceVariationValues ,  11 = NeweggComAttributes ,  12 = AmazonAttributes ,  13 = AmazonHazardousAttributes ,  14 = ProductClones ,  15 = VariationImages ,  16 = ProductGroups ,  17 = ProductAverageCostAdjustments ,  18 = ProductRebates ,  19 = ProductReplacements ,  20 = NeweggBizAttributes ,  21 = ProductTitles ,  22 = SearsAttributes ,  23 = JetAttributes ,  24 = MagentoAttributes ,  25 = EbayPartsCompatibility ,  26 = RelatedProducts ,  27 = ShopifyMetafields ,  28 = ProductDocuments ,  29 = BonanzaTraits ,  30 = ProductNotes ,  31 = EbayAuctions ,  32 = SkuSplittingInfo ,  33 = PerChannelUpc ,  34 = MagentoTierPricing ,  35 = NeweggComInternationalPrices ,  36 = ProductAliases ,  37 = ProductAccessories ,  38 = RakutenAttributes ",
                    "enum": [
                        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
                        21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38
                    ],
                    "type": "integer",
                    "x-enumNames": [
                        "BulkUpdateProducts",
                        "ViaPluginProfile",
                        "Shadows",
                        "Variations",
                        "Kits",
                        "KitBoxDimensions",
                        "EbaySpecifics",
                        "ProductImages",
                        "ProductChannelSpecificImages",
                        "WalmartMarketplaceAttributes",
                        "WalmartMarketplaceVariationValues",
                        "NeweggComAttributes",
                        "AmazonAttributes",
                        "AmazonHazardousAttributes",
                        "ProductClones",
                        "VariationImages",
                        "ProductGroups",
                        "ProductAverageCostAdjustments",
                        "ProductRebates",
                        "ProductReplacements",
                        "NeweggBizAttributes",
                        "ProductTitles",
                        "SearsAttributes",
                        "JetAttributes",
                        "MagentoAttributes",
                        "EbayPartsCompatibility",
                        "RelatedProducts",
                        "ShopifyMetafields",
                        "ProductDocuments",
                        "BonanzaTraits",
                        "ProductNotes",
                        "EbayAuctions",
                        "SkuSplittingInfo",
                        "PerChannelUpc",
                        "MagentoTierPricing",
                        "NeweggComInternationalPrices",
                        "ProductAliases",
                        "ProductAccessories",
                        "RakutenAttributes"
                    ]
                },
                "UploadedFileToken": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Client.Api.Models.Request.CatalogImportFileRequest[SellerCloud.Delta.Client.Api.Models.Request.ImportVariationsDto]": {
            "required": ["Metadata", "FileContents"],
            "type": "object",
            "properties": {
                "Metadata": {
                    "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Request.ImportVariationsDto"
                },
                "FileContents": {
                    "type": "string"
                },
                "Format": {
                    "format": "int32",
                    "description": " 0 = TAB_Delimited ,  1 = CSV ,  2 = Excel ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["TAB_Delimited", "CSV", "Excel"]
                }
            }
        },
        "SellerCloud.Delta.Client.Api.Models.Request.ImportVariationsDto": {
            "type": "object",
            "properties": {
                "ScheduleDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "AddToExistingMatrix": {
                    "type": "boolean"
                },
                "OverwriteExistingMatrix": {
                    "type": "boolean"
                }
            }
        },
        "SellerCloud.Delta.Client.Api.Models.Request.CatalogImportFileRequest[SellerCloud.Delta.Client.Api.Models.Request.ImportShadowsDto]": {
            "required": ["Metadata", "FileContents"],
            "type": "object",
            "properties": {
                "Metadata": {
                    "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Request.ImportShadowsDto"
                },
                "FileContents": {
                    "type": "string"
                },
                "Format": {
                    "format": "int32",
                    "description": " 0 = TAB_Delimited ,  1 = CSV ,  2 = Excel ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["TAB_Delimited", "CSV", "Excel"]
                }
            }
        },
        "SellerCloud.Delta.Client.Api.Models.Request.ImportShadowsDto": {
            "type": "object",
            "properties": {
                "ScheduleDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "CompanyId": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Client.Api.Models.Request.CatalogImportFileRequest[SellerCloud.Delta.Client.Api.Models.Request.ImportKitsDto]": {
            "required": ["Metadata", "FileContents"],
            "type": "object",
            "properties": {
                "Metadata": {
                    "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Request.ImportKitsDto"
                },
                "FileContents": {
                    "type": "string"
                },
                "Format": {
                    "format": "int32",
                    "description": " 0 = TAB_Delimited ,  1 = CSV ,  2 = Excel ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["TAB_Delimited", "CSV", "Excel"]
                }
            }
        },
        "SellerCloud.Delta.Client.Api.Models.Request.ImportKitsDto": {
            "type": "object",
            "properties": {
                "ScheduleDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "CreateParentProductIfDoesntExist": {
                    "type": "boolean"
                },
                "CreateChildProductIfDoesntExist": {
                    "type": "boolean"
                },
                "OverwriteExistingKits": {
                    "type": "boolean"
                },
                "InventoryCalculationKind": {
                    "format": "int32",
                    "description": " 0 = Normal ,  1 = End ,  2 = None ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["Normal", "End", "None"]
                }
            }
        },
        "SellerCloud.Delta.Client.Api.Models.Request.CatalogImportFileRequest[SellerCloud.Delta.Client.Api.Models.Request.ImportEbayspecificsDto]": {
            "required": ["Metadata", "FileContents"],
            "type": "object",
            "properties": {
                "Metadata": {
                    "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Request.ImportEbayspecificsDto"
                },
                "FileContents": {
                    "type": "string"
                },
                "Format": {
                    "format": "int32",
                    "description": " 0 = TAB_Delimited ,  1 = CSV ,  2 = Excel ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["TAB_Delimited", "CSV", "Excel"]
                }
            }
        },
        "SellerCloud.Delta.Client.Api.Models.Request.ImportEbayspecificsDto": {
            "type": "object",
            "properties": {
                "DeleteExistingSpecifics": {
                    "type": "boolean"
                },
                "FormatProduct": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Client.Api.Models.Request.CatalogImportFileRequest[SellerCloud.Delta.Client.Api.Models.Request.ImportNeweggAttributesDto]": {
            "required": ["Metadata", "FileContents"],
            "type": "object",
            "properties": {
                "Metadata": {
                    "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Request.ImportNeweggAttributesDto"
                },
                "FileContents": {
                    "type": "string"
                },
                "Format": {
                    "format": "int32",
                    "description": " 0 = TAB_Delimited ,  1 = CSV ,  2 = Excel ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["TAB_Delimited", "CSV", "Excel"]
                }
            }
        },
        "SellerCloud.Delta.Client.Api.Models.Request.ImportNeweggAttributesDto": {
            "type": "object",
            "properties": {
                "ImportInMultiFormat": {
                    "type": "boolean"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Company.ShippingApiDetailsDto": {
            "type": "object",
            "properties": {
                "UPSApi": {
                    "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Company.UPSShippingApiDto"
                },
                "FedExApi": {
                    "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Company.FedExShippingApiDto"
                },
                "FedExApiOld": {
                    "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Company.FedExShippingApiOldDto"
                },
                "EndiciaApi": {
                    "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Company.EndiciaShippingApiDto"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Company.UPSShippingApiDto": {
            "type": "object",
            "properties": {
                "ShippingNumber": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Company.FedExShippingApiDto": {
            "type": "object",
            "properties": {
                "ShippingAccountNumber": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Company.FedExShippingApiOldDto": {
            "type": "object",
            "properties": {
                "AccountNumber": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Company.EndiciaShippingApiDto": {
            "type": "object",
            "properties": {
                "AccountID": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Company.Settings.Ebay.GetEbayBusinessPoliciesDto": {
            "type": "object",
            "properties": {
                "Policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Company.Settings.Ebay.EbayBusinessPolicyDto"
                    }
                },
                "TotalPolicies": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Company.Settings.Ebay.EbayBusinessPolicyDto": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Type": {
                    "format": "int32",
                    "description": " 0 = PAYMENT ,  1 = RETURN_POLICY ,  2 = SHIPPING ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["PAYMENT", "RETURN_POLICY", "SHIPPING"]
                },
                "Name": {
                    "type": "string"
                },
                "Version": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                }
            }
        },
        "CoreWebAdmin.Delta.DetailsEntity.Models.Company.CompanyDetailsDto": {
            "type": "object",
            "properties": {
                "Details": {
                    "$ref": "#/definitions/CoreWebAdmin.Delta.DetailsEntity.Models.Company.CompanyDetailsContent"
                },
                "Address": {
                    "$ref": "#/definitions/SellerCloud.Delta.Models.Details.Concrete.Common.CompanyAddressDto"
                },
                "AmazonSettings": {
                    "$ref": "#/definitions/CoreWebAdmin.Delta.DetailsEntity.Models.Company.CompanyAmazonSettingsContent"
                },
                "IsModified": {
                    "type": "boolean"
                }
            }
        },
        "CoreWebAdmin.Delta.DetailsEntity.Models.Company.CompanyDetailsContent": {
            "type": "object",
            "properties": {
                "CompanyName": {
                    "type": "string"
                },
                "Abbreviation": {
                    "type": "string"
                },
                "CountryCode": {
                    "format": "int32",
                    "description": " 0 = US ,  1 = UK ,  2 = JP ,  3 = FR ,  4 = DE ,  5 = CA ,  6 = AU ,  7 = IT ,  8 = ES ,  9 = MX ,  10 = CN ,  11 = AF ,  12 = AL ,  13 = DZ ,  14 = AS ,  15 = AD ,  16 = AO ,  17 = AI ,  18 = AQ ,  19 = AG ,  20 = AR ,  21 = AM ,  22 = AW ,  23 = AT ,  24 = AZ ,  25 = BS ,  26 = BH ,  27 = BD ,  28 = BB ,  29 = BY ,  30 = BE ,  31 = BZ ,  32 = BJ ,  33 = BM ,  34 = BT ,  35 = BO ,  36 = BA ,  37 = BW ,  38 = BV ,  39 = BR ,  40 = IO ,  41 = BN ,  42 = BG ,  43 = BF ,  44 = BI ,  45 = KH ,  46 = CM ,  47 = CV ,  48 = KY ,  49 = CF ,  50 = TD ,  51 = CL ,  52 = CX ,  53 = CC ,  54 = CO ,  55 = KM ,  56 = CG ,  57 = CD ,  58 = CK ,  59 = CR ,  60 = CI ,  61 = HR ,  62 = CU ,  63 = CY ,  64 = CZ ,  65 = DK ,  66 = DJ ,  67 = DM ,  68 = DO ,  69 = TP ,  70 = EC ,  71 = EG ,  72 = SV ,  73 = GQ ,  74 = ER ,  75 = EE ,  76 = ET ,  77 = FK ,  78 = FO ,  79 = FJ ,  80 = FI ,  81 = GF ,  82 = PF ,  83 = TF ,  84 = GA ,  85 = GM ,  86 = GE ,  87 = GH ,  88 = GI ,  89 = GR ,  90 = GL ,  91 = GD ,  92 = GP ,  93 = GU ,  94 = GT ,  95 = GN ,  96 = GW ,  97 = GY ,  98 = HT ,  99 = HM ,  100 = VA ,  101 = HN ,  102 = HK ,  103 = HU ,  104 = IS ,  105 = IN ,  106 = ID ,  107 = IR ,  108 = IQ ,  109 = IE ,  110 = IL ,  111 = JM ,  112 = JO ,  113 = KZ ,  114 = KE ,  115 = KI ,  116 = KP ,  117 = KR ,  118 = KW ,  119 = KG ,  120 = LA ,  121 = LV ,  122 = LB ,  123 = LS ,  124 = LR ,  125 = LY ,  126 = LI ,  127 = LT ,  128 = LU ,  129 = MO ,  130 = MK ,  131 = MG ,  132 = MW ,  133 = MY ,  134 = MV ,  135 = ML ,  136 = MT ,  137 = MH ,  138 = MQ ,  139 = MR ,  140 = MU ,  141 = YT ,  142 = FM ,  143 = MD ,  144 = MC ,  145 = MN ,  146 = MS ,  147 = MA ,  148 = MZ ,  149 = MM ,  150 = NA ,  151 = NR ,  152 = NP ,  153 = NL ,  154 = AN ,  155 = NC ,  156 = NZ ,  157 = NI ,  158 = NE ,  159 = NG ,  160 = NU ,  161 = NF ,  162 = MP ,  163 = NO ,  164 = OM ,  165 = PK ,  166 = PW ,  167 = PS ,  168 = PA ,  169 = PG ,  170 = PY ,  171 = PE ,  172 = PH ,  173 = PN ,  174 = PL ,  175 = PT ,  176 = PR ,  177 = QA ,  178 = RE ,  179 = RO ,  180 = RU ,  181 = RW ,  182 = SH ,  183 = KN ,  184 = LC ,  185 = PM ,  186 = VC ,  187 = WS ,  188 = SM ,  189 = ST ,  190 = SA ,  191 = SN ,  192 = SC ,  193 = SL ,  194 = SG ,  195 = SK ,  196 = SI ,  197 = SB ,  198 = SO ,  199 = ZA ,  200 = GS ,  201 = LK ,  202 = SD ,  203 = SR ,  204 = SJ ,  205 = SZ ,  206 = SE ,  207 = CH ,  208 = SY ,  209 = TW ,  210 = TJ ,  211 = TZ ,  212 = TH ,  213 = TG ,  214 = TK ,  215 = TO ,  216 = TT ,  217 = TN ,  218 = TR ,  219 = TM ,  220 = TC ,  221 = TV ,  222 = UG ,  223 = UA ,  224 = AE ,  225 = UM ,  226 = UY ,  227 = UZ ,  228 = VU ,  229 = VE ,  230 = VN ,  231 = VG ,  232 = VI ,  233 = WF ,  234 = EH ,  235 = YE ,  236 = YU ,  237 = ZM ,  238 = ZW ,  239 = AA ,  240 = QM ,  241 = QN ,  242 = QO ,  243 = QP ,  244 = JE ,  245 = GG ,  246 = ZZ ,  247 = RS ,  248 = ME ",
                    "enum": [
                        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
                        21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
                        40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,
                        59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
                        78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
                        97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112,
                        113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
                        128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
                        143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
                        158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
                        173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
                        188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
                        203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
                        218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232,
                        233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247,
                        248
                    ],
                    "type": "integer",
                    "x-enumNames": [
                        "US",
                        "UK",
                        "JP",
                        "FR",
                        "DE",
                        "CA",
                        "AU",
                        "IT",
                        "ES",
                        "MX",
                        "CN",
                        "AF",
                        "AL",
                        "DZ",
                        "AS",
                        "AD",
                        "AO",
                        "AI",
                        "AQ",
                        "AG",
                        "AR",
                        "AM",
                        "AW",
                        "AT",
                        "AZ",
                        "BS",
                        "BH",
                        "BD",
                        "BB",
                        "BY",
                        "BE",
                        "BZ",
                        "BJ",
                        "BM",
                        "BT",
                        "BO",
                        "BA",
                        "BW",
                        "BV",
                        "BR",
                        "IO",
                        "BN",
                        "BG",
                        "BF",
                        "BI",
                        "KH",
                        "CM",
                        "CV",
                        "KY",
                        "CF",
                        "TD",
                        "CL",
                        "CX",
                        "CC",
                        "CO",
                        "KM",
                        "CG",
                        "CD",
                        "CK",
                        "CR",
                        "CI",
                        "HR",
                        "CU",
                        "CY",
                        "CZ",
                        "DK",
                        "DJ",
                        "DM",
                        "DO",
                        "TP",
                        "EC",
                        "EG",
                        "SV",
                        "GQ",
                        "ER",
                        "EE",
                        "ET",
                        "FK",
                        "FO",
                        "FJ",
                        "FI",
                        "GF",
                        "PF",
                        "TF",
                        "GA",
                        "GM",
                        "GE",
                        "GH",
                        "GI",
                        "GR",
                        "GL",
                        "GD",
                        "GP",
                        "GU",
                        "GT",
                        "GN",
                        "GW",
                        "GY",
                        "HT",
                        "HM",
                        "VA",
                        "HN",
                        "HK",
                        "HU",
                        "IS",
                        "IN",
                        "ID",
                        "IR",
                        "IQ",
                        "IE",
                        "IL",
                        "JM",
                        "JO",
                        "KZ",
                        "KE",
                        "KI",
                        "KP",
                        "KR",
                        "KW",
                        "KG",
                        "LA",
                        "LV",
                        "LB",
                        "LS",
                        "LR",
                        "LY",
                        "LI",
                        "LT",
                        "LU",
                        "MO",
                        "MK",
                        "MG",
                        "MW",
                        "MY",
                        "MV",
                        "ML",
                        "MT",
                        "MH",
                        "MQ",
                        "MR",
                        "MU",
                        "YT",
                        "FM",
                        "MD",
                        "MC",
                        "MN",
                        "MS",
                        "MA",
                        "MZ",
                        "MM",
                        "NA",
                        "NR",
                        "NP",
                        "NL",
                        "AN",
                        "NC",
                        "NZ",
                        "NI",
                        "NE",
                        "NG",
                        "NU",
                        "NF",
                        "MP",
                        "NO",
                        "OM",
                        "PK",
                        "PW",
                        "PS",
                        "PA",
                        "PG",
                        "PY",
                        "PE",
                        "PH",
                        "PN",
                        "PL",
                        "PT",
                        "PR",
                        "QA",
                        "RE",
                        "RO",
                        "RU",
                        "RW",
                        "SH",
                        "KN",
                        "LC",
                        "PM",
                        "VC",
                        "WS",
                        "SM",
                        "ST",
                        "SA",
                        "SN",
                        "SC",
                        "SL",
                        "SG",
                        "SK",
                        "SI",
                        "SB",
                        "SO",
                        "ZA",
                        "GS",
                        "LK",
                        "SD",
                        "SR",
                        "SJ",
                        "SZ",
                        "SE",
                        "CH",
                        "SY",
                        "TW",
                        "TJ",
                        "TZ",
                        "TH",
                        "TG",
                        "TK",
                        "TO",
                        "TT",
                        "TN",
                        "TR",
                        "TM",
                        "TC",
                        "TV",
                        "UG",
                        "UA",
                        "AE",
                        "UM",
                        "UY",
                        "UZ",
                        "VU",
                        "VE",
                        "VN",
                        "VG",
                        "VI",
                        "WF",
                        "EH",
                        "YE",
                        "YU",
                        "ZM",
                        "ZW",
                        "AA",
                        "QM",
                        "QN",
                        "QO",
                        "QP",
                        "JE",
                        "GG",
                        "ZZ",
                        "RS",
                        "ME"
                    ]
                },
                "Country": {
                    "type": "string"
                },
                "Email": {
                    "type": "string"
                },
                "Website": {
                    "type": "string"
                },
                "IsDefaultCompany": {
                    "type": "boolean"
                },
                "CurrencyCode": {
                    "format": "int32",
                    "description": " 0 = USD ,  1 = GBP ,  2 = JPY ,  3 = EUR ,  4 = CAD ,  5 = AUD ,  6 = MXN ,  7 = TWD ,  8 = CNY ,  9 = AFA ,  10 = ALL ,  11 = DZD ,  12 = ADP ,  13 = AOA ,  14 = ARS ,  15 = AMD ,  16 = AWG ,  17 = AZM ,  18 = BSD ,  19 = BHD ,  20 = BDT ,  21 = BBD ,  22 = BYR ,  23 = BZD ,  24 = BMD ,  25 = BTN ,  26 = INR ,  27 = BOV ,  28 = BOB ,  29 = BAM ,  30 = BWP ,  31 = BRL ,  32 = BND ,  33 = BGL ,  34 = BGN ,  35 = BIF ,  36 = KHR ,  37 = CVE ,  38 = KYD ,  39 = XAF ,  40 = CLF ,  41 = CLP ,  42 = COP ,  43 = KMF ,  44 = CDF ,  45 = CRC ,  46 = HRK ,  47 = CUP ,  48 = CYP ,  49 = CZK ,  50 = DKK ,  51 = DJF ,  52 = DOP ,  53 = TPE ,  54 = ECV ,  55 = ECS ,  56 = EGP ,  57 = SVC ,  58 = ERN ,  59 = EEK ,  60 = ETB ,  61 = FKP ,  62 = FJD ,  63 = GMD ,  64 = GEL ,  65 = GHC ,  66 = GIP ,  67 = GTQ ,  68 = GNF ,  69 = GWP ,  70 = GYD ,  71 = HTG ,  72 = HNL ,  73 = HKD ,  74 = HUF ,  75 = ISK ,  76 = IDR ,  77 = IRR ,  78 = IQD ,  79 = ILS ,  80 = JMD ,  81 = JOD ,  82 = KZT ,  83 = KES ,  84 = KPW ,  85 = KRW ,  86 = KWD ,  87 = KGS ,  88 = LAK ,  89 = LVL ,  90 = LBP ,  91 = LSL ,  92 = LRD ,  93 = LYD ,  94 = CHF ,  95 = LTL ,  96 = MOP ,  97 = MKD ,  98 = MGF ,  99 = MWK ,  100 = MYR ,  101 = MVR ,  102 = MTL ,  103 = MRO ,  104 = MUR ,  105 = MXV ,  106 = MDL ,  107 = MNT ,  108 = XCD ,  109 = MZM ,  110 = MMK ,  111 = ZAR ,  112 = NAD ,  113 = NPR ,  114 = ANG ,  115 = XPF ,  116 = NZD ,  117 = NIO ,  118 = NGN ,  119 = NOK ,  120 = OMR ,  121 = PKR ,  122 = PAB ,  123 = PGK ,  124 = PYG ,  125 = PEN ,  126 = PHP ,  127 = PLN ,  128 = QAR ,  129 = ROL ,  130 = RUB ,  131 = RUR ,  132 = RWF ,  133 = SHP ,  134 = WST ,  135 = STD ,  136 = SAR ,  137 = SCR ,  138 = SLL ,  139 = SGD ,  140 = SKK ,  141 = SIT ,  142 = SBD ,  143 = SOS ,  144 = LKR ,  145 = SDD ,  146 = SRG ,  147 = SZL ,  148 = SEK ,  149 = SYP ,  150 = TJS ,  151 = TZS ,  152 = THB ,  153 = XOF ,  154 = TOP ,  155 = TTD ,  156 = TND ,  157 = TRL ,  158 = TMM ,  159 = UGX ,  160 = UAH ,  161 = AED ,  162 = USS ,  163 = USN ,  164 = UYU ,  165 = UZS ,  166 = VUV ,  167 = VEB ,  168 = VND ,  169 = MAD ,  170 = YER ,  171 = YUM ,  172 = ZMK ,  173 = ZWD ,  174 = ATS ",
                    "enum": [
                        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
                        21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
                        40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,
                        59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
                        78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
                        97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112,
                        113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
                        128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
                        143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
                        158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
                        173, 174
                    ],
                    "type": "integer",
                    "x-enumNames": [
                        "USD",
                        "GBP",
                        "JPY",
                        "EUR",
                        "CAD",
                        "AUD",
                        "MXN",
                        "TWD",
                        "CNY",
                        "AFA",
                        "ALL",
                        "DZD",
                        "ADP",
                        "AOA",
                        "ARS",
                        "AMD",
                        "AWG",
                        "AZM",
                        "BSD",
                        "BHD",
                        "BDT",
                        "BBD",
                        "BYR",
                        "BZD",
                        "BMD",
                        "BTN",
                        "INR",
                        "BOV",
                        "BOB",
                        "BAM",
                        "BWP",
                        "BRL",
                        "BND",
                        "BGL",
                        "BGN",
                        "BIF",
                        "KHR",
                        "CVE",
                        "KYD",
                        "XAF",
                        "CLF",
                        "CLP",
                        "COP",
                        "KMF",
                        "CDF",
                        "CRC",
                        "HRK",
                        "CUP",
                        "CYP",
                        "CZK",
                        "DKK",
                        "DJF",
                        "DOP",
                        "TPE",
                        "ECV",
                        "ECS",
                        "EGP",
                        "SVC",
                        "ERN",
                        "EEK",
                        "ETB",
                        "FKP",
                        "FJD",
                        "GMD",
                        "GEL",
                        "GHC",
                        "GIP",
                        "GTQ",
                        "GNF",
                        "GWP",
                        "GYD",
                        "HTG",
                        "HNL",
                        "HKD",
                        "HUF",
                        "ISK",
                        "IDR",
                        "IRR",
                        "IQD",
                        "ILS",
                        "JMD",
                        "JOD",
                        "KZT",
                        "KES",
                        "KPW",
                        "KRW",
                        "KWD",
                        "KGS",
                        "LAK",
                        "LVL",
                        "LBP",
                        "LSL",
                        "LRD",
                        "LYD",
                        "CHF",
                        "LTL",
                        "MOP",
                        "MKD",
                        "MGF",
                        "MWK",
                        "MYR",
                        "MVR",
                        "MTL",
                        "MRO",
                        "MUR",
                        "MXV",
                        "MDL",
                        "MNT",
                        "XCD",
                        "MZM",
                        "MMK",
                        "ZAR",
                        "NAD",
                        "NPR",
                        "ANG",
                        "XPF",
                        "NZD",
                        "NIO",
                        "NGN",
                        "NOK",
                        "OMR",
                        "PKR",
                        "PAB",
                        "PGK",
                        "PYG",
                        "PEN",
                        "PHP",
                        "PLN",
                        "QAR",
                        "ROL",
                        "RUB",
                        "RUR",
                        "RWF",
                        "SHP",
                        "WST",
                        "STD",
                        "SAR",
                        "SCR",
                        "SLL",
                        "SGD",
                        "SKK",
                        "SIT",
                        "SBD",
                        "SOS",
                        "LKR",
                        "SDD",
                        "SRG",
                        "SZL",
                        "SEK",
                        "SYP",
                        "TJS",
                        "TZS",
                        "THB",
                        "XOF",
                        "TOP",
                        "TTD",
                        "TND",
                        "TRL",
                        "TMM",
                        "UGX",
                        "UAH",
                        "AED",
                        "USS",
                        "USN",
                        "UYU",
                        "UZS",
                        "VUV",
                        "VEB",
                        "VND",
                        "MAD",
                        "YER",
                        "YUM",
                        "ZMK",
                        "ZWD",
                        "ATS"
                    ]
                },
                "UnitOfMeasure": {
                    "format": "int32",
                    "description": " 0 = Imperial ,  1 = Metric ",
                    "enum": [0, 1],
                    "type": "integer",
                    "x-enumNames": ["Imperial", "Metric"]
                },
                "ChannelsCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "RemoveLogoVisible": {
                    "type": "boolean"
                },
                "LogoUrl": {
                    "type": "string"
                },
                "LogoUrlToDisplay": {
                    "type": "string"
                },
                "LogoVisible": {
                    "type": "boolean"
                },
                "AlertEmail": {
                    "type": "string"
                },
                "IsModified": {
                    "type": "boolean"
                }
            }
        },
        "SellerCloud.Delta.Models.Details.Concrete.Common.CompanyAddressDto": {
            "type": "object",
            "properties": {
                "FirstName": {
                    "type": "string"
                },
                "LastName": {
                    "type": "string"
                },
                "Country": {
                    "type": "string"
                },
                "ZipCode": {
                    "type": "string"
                },
                "Region": {
                    "type": "string"
                },
                "State": {
                    "type": "string"
                },
                "City": {
                    "type": "string"
                },
                "Address": {
                    "type": "string"
                },
                "Address2": {
                    "type": "string"
                },
                "Fax": {
                    "type": "string"
                },
                "Phone": {
                    "type": "string"
                }
            }
        },
        "CoreWebAdmin.Delta.DetailsEntity.Models.Company.CompanyAmazonSettingsContent": {
            "type": "object",
            "properties": {
                "merchantID": {
                    "type": "string"
                },
                "accessKey": {
                    "type": "string"
                },
                "secretKey": {
                    "type": "string"
                },
                "marketPlaceID": {
                    "type": "string"
                },
                "MWSAuthTokenEnabled": {
                    "type": "boolean"
                },
                "MWSAuthToken": {
                    "type": "string"
                },
                "AmazonUseMWSToGetInfoFromAmazon": {
                    "type": "boolean"
                },
                "IsModified": {
                    "type": "boolean"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Company.CompanyFilters": {
            "type": "object",
            "properties": {
                "CompanyID": {
                    "description": "List of company ID",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "Channel": {
                    "description": "List of channels 0 = Local_Store ,  1 = eBayOrder ,  2 = eBaySingleItem ,  3 = Yahoo ,  4 = Amazon ,  5 = PriceGrabber ,  6 = Website ,  7 = Buy ,  12 = NewEggMall ,  15 = Magento ,  16 = QuickBooks ,  17 = RMS ,  18 = Cart32 ,  19 = Sears ,  20 = FBA ,  21 = Wholesale ,  22 = Overstock ,  23 = NewEggdotcom ,  24 = Etsy ,  25 = Bonanza ,  26 = PriceFalls ,  27 = Wayfair ,  28 = UnbeatableSale ,  29 = VendorCentral ,  30 = Hayneedle ,  31 = SmartBargains ,  32 = uBid ,  33 = ATGStores ,  34 = StacksAndStacks ,  35 = Sharkstores ,  36 = BestBuy ,  37 = Kohls ,  38 = Staples ,  39 = OneStopPlus ,  40 = Meijer ,  41 = Sonsi ,  42 = Walmart ,  43 = HSN ,  44 = NewEgg_Business ,  45 = KMart ,  46 = Wish ,  47 = SPRichards ,  48 = FingerHut ,  49 = Groupon ,  50 = Walmart_Marketplace ,  51 = ShopHQ ,  52 = PriceMinister ,  53 = GS ,  54 = DrugStore ,  55 = MercadoLibre ,  56 = JET ,  57 = ElevenMain ,  58 = SearsVendor ,  59 = Choxi ,  60 = TradeMe ,  61 = Tanga ,  62 = Target ,  63 = GrouponMarketplace ,  64 = Reverb ,  65 = BedBathAndBeyond ,  66 = Dropship_Central ,  67 = DSW ,  68 = Houzz ,  69 = Gilt ,  70 = BestBuyDS ,  71 = TopHatter ,  72 = HomeDepot ,  73 = MassGenie ,  74 = Cdiscount ,  75 = GrouponGateway ,  76 = SBN ,  77 = GoogleExpress ,  78 = Target_Plus ,  79 = WFS ",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "description": " 0 = Local_Store ,  1 = eBayOrder ,  2 = eBaySingleItem ,  3 = Yahoo ,  4 = Amazon ,  5 = PriceGrabber ,  6 = Website ,  7 = Buy ,  12 = NewEggMall ,  15 = Magento ,  16 = QuickBooks ,  17 = RMS ,  18 = Cart32 ,  19 = Sears ,  20 = FBA ,  21 = Wholesale ,  22 = Overstock ,  23 = NewEggdotcom ,  24 = Etsy ,  25 = Bonanza ,  26 = PriceFalls ,  27 = Wayfair ,  28 = UnbeatableSale ,  29 = VendorCentral ,  30 = Hayneedle ,  31 = SmartBargains ,  32 = uBid ,  33 = ATGStores ,  34 = StacksAndStacks ,  35 = Sharkstores ,  36 = BestBuy ,  37 = Kohls ,  38 = Staples ,  39 = OneStopPlus ,  40 = Meijer ,  41 = Sonsi ,  42 = Walmart ,  43 = HSN ,  44 = NewEgg_Business ,  45 = KMart ,  46 = Wish ,  47 = SPRichards ,  48 = FingerHut ,  49 = Groupon ,  50 = Walmart_Marketplace ,  51 = ShopHQ ,  52 = PriceMinister ,  53 = GS ,  54 = DrugStore ,  55 = MercadoLibre ,  56 = JET ,  57 = ElevenMain ,  58 = SearsVendor ,  59 = Choxi ,  60 = TradeMe ,  61 = Tanga ,  62 = Target ,  63 = GrouponMarketplace ,  64 = Reverb ,  65 = BedBathAndBeyond ,  66 = Dropship_Central ,  67 = DSW ,  68 = Houzz ,  69 = Gilt ,  70 = BestBuyDS ,  71 = TopHatter ,  72 = HomeDepot ,  73 = MassGenie ,  74 = Cdiscount ,  75 = GrouponGateway ,  76 = SBN ,  77 = GoogleExpress ,  78 = Target_Plus ,  79 = WFS ",
                        "enum": [
                            0, 1, 2, 3, 4, 5, 6, 7, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,
                            26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
                            44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
                            62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79
                        ],
                        "type": "integer"
                    },
                    "x-enumNames": [
                        "Local_Store",
                        "eBayOrder",
                        "eBaySingleItem",
                        "Yahoo",
                        "Amazon",
                        "PriceGrabber",
                        "Website",
                        "Buy",
                        "NewEggMall",
                        "Magento",
                        "QuickBooks",
                        "RMS",
                        "Cart32",
                        "Sears",
                        "FBA",
                        "Wholesale",
                        "Overstock",
                        "NewEggdotcom",
                        "Etsy",
                        "Bonanza",
                        "PriceFalls",
                        "Wayfair",
                        "UnbeatableSale",
                        "VendorCentral",
                        "Hayneedle",
                        "SmartBargains",
                        "uBid",
                        "ATGStores",
                        "StacksAndStacks",
                        "Sharkstores",
                        "BestBuy",
                        "Kohls",
                        "Staples",
                        "OneStopPlus",
                        "Meijer",
                        "Sonsi",
                        "Walmart",
                        "HSN",
                        "NewEgg_Business",
                        "KMart",
                        "Wish",
                        "SPRichards",
                        "FingerHut",
                        "Groupon",
                        "Walmart_Marketplace",
                        "ShopHQ",
                        "PriceMinister",
                        "GS",
                        "DrugStore",
                        "MercadoLibre",
                        "JET",
                        "ElevenMain",
                        "SearsVendor",
                        "Choxi",
                        "TradeMe",
                        "Tanga",
                        "Target",
                        "GrouponMarketplace",
                        "Reverb",
                        "BedBathAndBeyond",
                        "Dropship_Central",
                        "DSW",
                        "Houzz",
                        "Gilt",
                        "BestBuyDS",
                        "TopHatter",
                        "HomeDepot",
                        "MassGenie",
                        "Cdiscount",
                        "GrouponGateway",
                        "SBN",
                        "GoogleExpress",
                        "Target_Plus",
                        "WFS"
                    ]
                },
                "Keyword": {
                    "type": "string"
                },
                "PageNumber": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Base.GetAllResponse[CoreWebAdmin.Delta.ManageEntity.Filters.CompanyDto]": {
            "type": "object",
            "properties": {
                "Items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CoreWebAdmin.Delta.ManageEntity.Filters.CompanyDto"
                    }
                },
                "TotalResults": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "CoreWebAdmin.Delta.ManageEntity.Filters.CompanyDto": {
            "type": "object",
            "properties": {
                "CompanyName": {
                    "type": "string"
                },
                "IsDefaultCompany": {
                    "type": "boolean"
                },
                "AmazonMarketplace": {
                    "type": "string"
                },
                "IsDisabled": {
                    "type": "boolean"
                },
                "CustomColumns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.CustomColumns.CustomColumnValueDto"
                    }
                },
                "EnabledOnChannels": {
                    "description": " 0 = Local_Store ,  1 = eBayOrder ,  2 = eBaySingleItem ,  3 = Yahoo ,  4 = Amazon ,  5 = PriceGrabber ,  6 = Website ,  7 = Buy ,  12 = NewEggMall ,  15 = Magento ,  16 = QuickBooks ,  17 = RMS ,  18 = Cart32 ,  19 = Sears ,  20 = FBA ,  21 = Wholesale ,  22 = Overstock ,  23 = NewEggdotcom ,  24 = Etsy ,  25 = Bonanza ,  26 = PriceFalls ,  27 = Wayfair ,  28 = UnbeatableSale ,  29 = VendorCentral ,  30 = Hayneedle ,  31 = SmartBargains ,  32 = uBid ,  33 = ATGStores ,  34 = StacksAndStacks ,  35 = Sharkstores ,  36 = BestBuy ,  37 = Kohls ,  38 = Staples ,  39 = OneStopPlus ,  40 = Meijer ,  41 = Sonsi ,  42 = Walmart ,  43 = HSN ,  44 = NewEgg_Business ,  45 = KMart ,  46 = Wish ,  47 = SPRichards ,  48 = FingerHut ,  49 = Groupon ,  50 = Walmart_Marketplace ,  51 = ShopHQ ,  52 = PriceMinister ,  53 = GS ,  54 = DrugStore ,  55 = MercadoLibre ,  56 = JET ,  57 = ElevenMain ,  58 = SearsVendor ,  59 = Choxi ,  60 = TradeMe ,  61 = Tanga ,  62 = Target ,  63 = GrouponMarketplace ,  64 = Reverb ,  65 = BedBathAndBeyond ,  66 = Dropship_Central ,  67 = DSW ,  68 = Houzz ,  69 = Gilt ,  70 = BestBuyDS ,  71 = TopHatter ,  72 = HomeDepot ,  73 = MassGenie ,  74 = Cdiscount ,  75 = GrouponGateway ,  76 = SBN ,  77 = GoogleExpress ,  78 = Target_Plus ,  79 = WFS ",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "description": " 0 = Local_Store ,  1 = eBayOrder ,  2 = eBaySingleItem ,  3 = Yahoo ,  4 = Amazon ,  5 = PriceGrabber ,  6 = Website ,  7 = Buy ,  12 = NewEggMall ,  15 = Magento ,  16 = QuickBooks ,  17 = RMS ,  18 = Cart32 ,  19 = Sears ,  20 = FBA ,  21 = Wholesale ,  22 = Overstock ,  23 = NewEggdotcom ,  24 = Etsy ,  25 = Bonanza ,  26 = PriceFalls ,  27 = Wayfair ,  28 = UnbeatableSale ,  29 = VendorCentral ,  30 = Hayneedle ,  31 = SmartBargains ,  32 = uBid ,  33 = ATGStores ,  34 = StacksAndStacks ,  35 = Sharkstores ,  36 = BestBuy ,  37 = Kohls ,  38 = Staples ,  39 = OneStopPlus ,  40 = Meijer ,  41 = Sonsi ,  42 = Walmart ,  43 = HSN ,  44 = NewEgg_Business ,  45 = KMart ,  46 = Wish ,  47 = SPRichards ,  48 = FingerHut ,  49 = Groupon ,  50 = Walmart_Marketplace ,  51 = ShopHQ ,  52 = PriceMinister ,  53 = GS ,  54 = DrugStore ,  55 = MercadoLibre ,  56 = JET ,  57 = ElevenMain ,  58 = SearsVendor ,  59 = Choxi ,  60 = TradeMe ,  61 = Tanga ,  62 = Target ,  63 = GrouponMarketplace ,  64 = Reverb ,  65 = BedBathAndBeyond ,  66 = Dropship_Central ,  67 = DSW ,  68 = Houzz ,  69 = Gilt ,  70 = BestBuyDS ,  71 = TopHatter ,  72 = HomeDepot ,  73 = MassGenie ,  74 = Cdiscount ,  75 = GrouponGateway ,  76 = SBN ,  77 = GoogleExpress ,  78 = Target_Plus ,  79 = WFS ",
                        "enum": [
                            0, 1, 2, 3, 4, 5, 6, 7, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,
                            26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
                            44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
                            62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79
                        ],
                        "type": "integer"
                    },
                    "x-enumNames": [
                        "Local_Store",
                        "eBayOrder",
                        "eBaySingleItem",
                        "Yahoo",
                        "Amazon",
                        "PriceGrabber",
                        "Website",
                        "Buy",
                        "NewEggMall",
                        "Magento",
                        "QuickBooks",
                        "RMS",
                        "Cart32",
                        "Sears",
                        "FBA",
                        "Wholesale",
                        "Overstock",
                        "NewEggdotcom",
                        "Etsy",
                        "Bonanza",
                        "PriceFalls",
                        "Wayfair",
                        "UnbeatableSale",
                        "VendorCentral",
                        "Hayneedle",
                        "SmartBargains",
                        "uBid",
                        "ATGStores",
                        "StacksAndStacks",
                        "Sharkstores",
                        "BestBuy",
                        "Kohls",
                        "Staples",
                        "OneStopPlus",
                        "Meijer",
                        "Sonsi",
                        "Walmart",
                        "HSN",
                        "NewEgg_Business",
                        "KMart",
                        "Wish",
                        "SPRichards",
                        "FingerHut",
                        "Groupon",
                        "Walmart_Marketplace",
                        "ShopHQ",
                        "PriceMinister",
                        "GS",
                        "DrugStore",
                        "MercadoLibre",
                        "JET",
                        "ElevenMain",
                        "SearsVendor",
                        "Choxi",
                        "TradeMe",
                        "Tanga",
                        "Target",
                        "GrouponMarketplace",
                        "Reverb",
                        "BedBathAndBeyond",
                        "Dropship_Central",
                        "DSW",
                        "Houzz",
                        "Gilt",
                        "BestBuyDS",
                        "TopHatter",
                        "HomeDepot",
                        "MassGenie",
                        "Cdiscount",
                        "GrouponGateway",
                        "SBN",
                        "GoogleExpress",
                        "Target_Plus",
                        "WFS"
                    ]
                },
                "ScheduledTasksCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "ID": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Customer.UpdateCustomColumnsRequest": {
            "required": ["CustomColumns"],
            "type": "object",
            "properties": {
                "CustomColumns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Base.UpdateCustomColumn"
                    }
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Base.UpdateCustomColumn": {
            "required": ["ColumnName"],
            "type": "object",
            "properties": {
                "ColumnName": {
                    "type": "string"
                },
                "Value": {
                    "type": "object"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Customer.UpdateAddressesRequest": {
            "required": ["Addresses"],
            "type": "object",
            "properties": {
                "Addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Common.UserAddressDto"
                    }
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Common.UserAddressDto": {
            "required": [
                "ID",
                "AddressSource",
                "AddressStatus",
                "IsShippingAddress",
                "IsBillingAddress",
                "Country",
                "City",
                "ZipCode",
                "Address"
            ],
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "CompanyName": {
                    "type": "string"
                },
                "AddressSource": {
                    "format": "int32",
                    "description": " 0 = LocalSite ,  1 = eBay ,  2 = Paypal ,  3 = Yahoo ,  4 = Amazon ,  5 = Buy_Com ,  12 = NewEgg ,  15 = Magento ,  16 = Sears ,  17 = CWA ,  18 = Shopify ",
                    "enum": [0, 1, 2, 3, 4, 5, 12, 15, 16, 17, 18],
                    "type": "integer",
                    "x-enumNames": [
                        "LocalSite",
                        "eBay",
                        "Paypal",
                        "Yahoo",
                        "Amazon",
                        "Buy_Com",
                        "NewEgg",
                        "Magento",
                        "Sears",
                        "CWA",
                        "Shopify"
                    ]
                },
                "AddressStatus": {
                    "format": "int32",
                    "description": " 0 = Unknown ,  1 = None ,  2 = Confirmed ,  3 = UnConfirmed ",
                    "enum": [0, 1, 2, 3],
                    "type": "integer",
                    "x-enumNames": ["Unknown", "None", "Confirmed", "UnConfirmed"]
                },
                "IsShippingAddress": {
                    "type": "boolean"
                },
                "IsBillingAddress": {
                    "type": "boolean"
                },
                "Address2": {
                    "type": "string"
                },
                "ContactName": {
                    "type": "string"
                },
                "Country": {
                    "type": "string"
                },
                "City": {
                    "type": "string"
                },
                "State": {
                    "type": "string"
                },
                "Region": {
                    "type": "string"
                },
                "ZipCode": {
                    "type": "string"
                },
                "Address": {
                    "type": "string"
                },
                "Phone": {
                    "type": "string"
                },
                "Fax": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Customer.CreateCustomerRequest": {
            "required": ["FirstName"],
            "type": "object",
            "properties": {
                "CompanyID": {
                    "format": "int32",
                    "description": "Company ID",
                    "type": "integer"
                },
                "FirstName": {
                    "description": "Customer first name",
                    "type": "string"
                },
                "LastName": {
                    "description": "Customer last name",
                    "type": "string"
                },
                "Email": {
                    "description": "Customer email",
                    "type": "string"
                },
                "BusinessName": {
                    "description": "Business Name",
                    "type": "string"
                },
                "CustomerType": {
                    "format": "int32",
                    "description": "User Type 0 = WholeSale ,  1 = Retail ",
                    "enum": [0, 1],
                    "type": "integer",
                    "x-enumNames": ["WholeSale", "Retail"]
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Customer.CustomerFilters": {
            "type": "object",
            "properties": {
                "CustomerIds": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Email": {
                    "description": "",
                    "type": "string"
                },
                "FirstName": {
                    "description": "",
                    "type": "string"
                },
                "LastName": {
                    "description": "",
                    "type": "string"
                },
                "Rating": {
                    "format": "int32",
                    "description": " 0 = NotRated ,  1 = Very_Disatisfied ,  2 = Disatisfied ,  3 = Neutral ,  4 = Satisfied ,  5 = Very_Satisfied ",
                    "enum": [0, 1, 2, 3, 4, 5],
                    "type": "integer",
                    "x-enumNames": [
                        "NotRated",
                        "Very_Disatisfied",
                        "Disatisfied",
                        "Neutral",
                        "Satisfied",
                        "Very_Satisfied"
                    ]
                },
                "CustomerType": {
                    "format": "int32",
                    "description": " 0 = Retail ,  1 = Wholesale ",
                    "enum": [0, 1],
                    "type": "integer",
                    "x-enumNames": ["Retail", "Wholesale"]
                },
                "Subscribed": {
                    "format": "int32",
                    "description": "",
                    "type": "integer"
                },
                "CreatedOnFrom": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "CreatedOnTo": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "ModifiedOnFrom": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "ModifiedOnTo": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "PhoneNumber": {
                    "description": "",
                    "type": "string"
                },
                "City": {
                    "description": "",
                    "type": "string"
                },
                "ZipCode": {
                    "description": "",
                    "type": "string"
                },
                "Exported": {
                    "format": "int32",
                    "description": "",
                    "type": "integer"
                },
                "Channel": {
                    "format": "int32",
                    "description": " 0 = Local_Store ,  1 = eBayOrder ,  2 = eBaySingleItem ,  3 = Yahoo ,  4 = Amazon ,  5 = PriceGrabber ,  6 = Website ,  7 = Buy ,  12 = NewEggMall ,  15 = Magento ,  16 = QuickBooks ,  17 = RMS ,  18 = Cart32 ,  19 = Sears ,  20 = FBA ,  21 = Wholesale ,  22 = Overstock ,  23 = NewEggdotcom ,  24 = Etsy ,  25 = Bonanza ,  26 = PriceFalls ,  27 = Wayfair ,  28 = UnbeatableSale ,  29 = VendorCentral ,  30 = Hayneedle ,  31 = SmartBargains ,  32 = uBid ,  33 = ATGStores ,  34 = StacksAndStacks ,  35 = Sharkstores ,  36 = BestBuy ,  37 = Kohls ,  38 = Staples ,  39 = OneStopPlus ,  40 = Meijer ,  41 = Sonsi ,  42 = Walmart ,  43 = HSN ,  44 = NewEgg_Business ,  45 = KMart ,  46 = Wish ,  47 = SPRichards ,  48 = FingerHut ,  49 = Groupon ,  50 = Walmart_Marketplace ,  51 = ShopHQ ,  52 = PriceMinister ,  53 = GS ,  54 = DrugStore ,  55 = MercadoLibre ,  56 = JET ,  57 = ElevenMain ,  58 = SearsVendor ,  59 = Choxi ,  60 = TradeMe ,  61 = Tanga ,  62 = Target ,  63 = GrouponMarketplace ,  64 = Reverb ,  65 = BedBathAndBeyond ,  66 = Dropship_Central ,  67 = DSW ,  68 = Houzz ,  69 = Gilt ,  70 = BestBuyDS ,  71 = TopHatter ,  72 = HomeDepot ,  73 = MassGenie ,  74 = Cdiscount ,  75 = GrouponGateway ,  76 = SBN ,  77 = GoogleExpress ,  78 = Target_Plus ,  79 = WFS ",
                    "enum": [
                        0, 1, 2, 3, 4, 5, 6, 7, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,
                        27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45,
                        46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64,
                        65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79
                    ],
                    "type": "integer",
                    "x-enumNames": [
                        "Local_Store",
                        "eBayOrder",
                        "eBaySingleItem",
                        "Yahoo",
                        "Amazon",
                        "PriceGrabber",
                        "Website",
                        "Buy",
                        "NewEggMall",
                        "Magento",
                        "QuickBooks",
                        "RMS",
                        "Cart32",
                        "Sears",
                        "FBA",
                        "Wholesale",
                        "Overstock",
                        "NewEggdotcom",
                        "Etsy",
                        "Bonanza",
                        "PriceFalls",
                        "Wayfair",
                        "UnbeatableSale",
                        "VendorCentral",
                        "Hayneedle",
                        "SmartBargains",
                        "uBid",
                        "ATGStores",
                        "StacksAndStacks",
                        "Sharkstores",
                        "BestBuy",
                        "Kohls",
                        "Staples",
                        "OneStopPlus",
                        "Meijer",
                        "Sonsi",
                        "Walmart",
                        "HSN",
                        "NewEgg_Business",
                        "KMart",
                        "Wish",
                        "SPRichards",
                        "FingerHut",
                        "Groupon",
                        "Walmart_Marketplace",
                        "ShopHQ",
                        "PriceMinister",
                        "GS",
                        "DrugStore",
                        "MercadoLibre",
                        "JET",
                        "ElevenMain",
                        "SearsVendor",
                        "Choxi",
                        "TradeMe",
                        "Tanga",
                        "Target",
                        "GrouponMarketplace",
                        "Reverb",
                        "BedBathAndBeyond",
                        "Dropship_Central",
                        "DSW",
                        "Houzz",
                        "Gilt",
                        "BestBuyDS",
                        "TopHatter",
                        "HomeDepot",
                        "MassGenie",
                        "Cdiscount",
                        "GrouponGateway",
                        "SBN",
                        "GoogleExpress",
                        "Target_Plus",
                        "WFS"
                    ]
                },
                "CorporateName": {
                    "description": "",
                    "type": "string"
                },
                "CompanyIds": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Keyword": {
                    "type": "string"
                },
                "PageNumber": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Base.GetAllResponse[SellerCloud.Delta.Models.ManageEntity.Concrete.CustomerDto]": {
            "type": "object",
            "properties": {
                "Items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.ManageEntity.Concrete.CustomerDto"
                    }
                },
                "TotalResults": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ManageEntity.Concrete.CustomerDto": {
            "type": "object",
            "properties": {
                "UserID": {
                    "format": "int32",
                    "type": "integer"
                },
                "Email": {
                    "type": "string"
                },
                "FirstName": {
                    "type": "string"
                },
                "LastName": {
                    "type": "string"
                },
                "EmailCC": {
                    "type": "string"
                },
                "Rating": {
                    "format": "int32",
                    "type": "integer"
                },
                "CorporateName": {
                    "type": "string"
                },
                "IsWholeSaleUser": {
                    "type": "boolean"
                },
                "IsWholesaleString": {
                    "type": "string"
                },
                "CustomColumns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.CustomColumns.CustomColumnValueDto"
                    }
                }
            }
        },
        "CoreWebAdmin.Delta.DetailsEntity.Models.Customer.CustomerDetailsDto": {
            "type": "object",
            "properties": {
                "General": {
                    "$ref": "#/definitions/CoreWebAdmin.Delta.DetailsEntity.Models.Customer.GeneralContent"
                },
                "Internal": {
                    "$ref": "#/definitions/CoreWebAdmin.Delta.DetailsEntity.Models.Customer.InternalContent"
                },
                "OrderOptions": {
                    "$ref": "#/definitions/CoreWebAdmin.Delta.DetailsEntity.Models.Customer.OrderOptionsContent"
                },
                "Personal": {
                    "$ref": "#/definitions/CoreWebAdmin.Delta.DetailsEntity.Models.Customer.PersonalContent"
                },
                "Addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CoreWebAdmin.Delta.DetailsEntity.Models.Common.UserAddressDto"
                    }
                },
                "WholesaleOptions": {
                    "$ref": "#/definitions/CoreWebAdmin.Delta.DetailsEntity.Models.Customer.WholesaleOptionsContent"
                },
                "CustomerGroups": {
                    "$ref": "#/definitions/CoreWebAdmin.Delta.DetailsEntity.Models.Customer.CustomerGroupsContent"
                },
                "CreditCards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CoreWebAdmin.Delta.DetailsEntity.Models.Customer.CustomerCreditCardDto"
                    }
                },
                "CustomColumns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.CustomColumns.CustomColumnValueDto"
                    }
                },
                "NotesCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "IsModified": {
                    "type": "boolean"
                }
            }
        },
        "CoreWebAdmin.Delta.DetailsEntity.Models.Customer.GeneralContent": {
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "Title": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Email": {
                    "type": "string"
                },
                "EmailCC": {
                    "type": "string"
                },
                "CorporateName": {
                    "type": "string"
                },
                "BusinessAliases": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "EBayUserID": {
                    "type": "string"
                },
                "SourceId": {
                    "type": "string"
                },
                "IsBlackListed": {
                    "type": "boolean"
                },
                "IsWholeSaleUser": {
                    "type": "boolean"
                },
                "IsModified": {
                    "type": "boolean"
                }
            }
        },
        "CoreWebAdmin.Delta.DetailsEntity.Models.Customer.InternalContent": {
            "type": "object",
            "properties": {
                "CompanyID": {
                    "format": "int32",
                    "type": "integer"
                },
                "AccountManagerId": {
                    "format": "int32",
                    "type": "integer"
                },
                "AccountManagerCommission": {
                    "format": "double",
                    "type": "number"
                },
                "AccountManager2Id": {
                    "format": "int32",
                    "type": "integer"
                },
                "AccountManager2Commission": {
                    "format": "double",
                    "type": "number"
                },
                "AccountManager3Id": {
                    "format": "int32",
                    "type": "integer"
                },
                "AccountManager3Commission": {
                    "format": "double",
                    "type": "number"
                },
                "SalesMan": {
                    "type": "string"
                },
                "Comment": {
                    "type": "string"
                },
                "LocalRating": {
                    "format": "int32",
                    "description": " 0 = NotRated ,  1 = Very_Disatisfied ,  2 = Disatisfied ,  3 = Neutral ,  4 = Satisfied ,  5 = Very_Satisfied ",
                    "enum": [0, 1, 2, 3, 4, 5],
                    "type": "integer",
                    "x-enumNames": [
                        "NotRated",
                        "Very_Disatisfied",
                        "Disatisfied",
                        "Neutral",
                        "Satisfied",
                        "Very_Satisfied"
                    ]
                },
                "CreatedOn": {
                    "format": "date-time",
                    "type": "string"
                },
                "IsModified": {
                    "type": "boolean"
                }
            }
        },
        "CoreWebAdmin.Delta.DetailsEntity.Models.Customer.OrderOptionsContent": {
            "type": "object",
            "properties": {
                "TaxExempt": {
                    "type": "boolean"
                },
                "TaxExemptType": {
                    "type": "string"
                },
                "OrderHandlingFee": {
                    "format": "double",
                    "type": "number"
                },
                "ApplyShippingChargesToOrderTotal": {
                    "type": "boolean"
                },
                "ApplyShippingChargesToOrderTotalVisible": {
                    "type": "boolean"
                },
                "AllowShippingUnPaidOrders": {
                    "type": "boolean"
                },
                "AllowShippingUnPaidOrdersEditble": {
                    "type": "boolean"
                },
                "DisableShipNotifications": {
                    "type": "boolean"
                },
                "InvoiceNote": {
                    "type": "string"
                },
                "OrderPDFInvoicePlugin": {
                    "type": "string"
                },
                "SendInvoiceWithShipNotificationEmail": {
                    "type": "boolean"
                },
                "WholesaleDiscount": {
                    "format": "double",
                    "type": "number"
                },
                "SitePriceBasedDiscountVisible": {
                    "type": "boolean"
                },
                "SitePriceBasedDiscountEnabled": {
                    "type": "boolean"
                },
                "SitePriceBasedDiscountValue": {
                    "format": "double",
                    "type": "number"
                },
                "CostPlusBasedWholeSalePriceVisible": {
                    "type": "boolean"
                },
                "CostPlusBasedWholeSalePriceEnabled": {
                    "type": "boolean"
                },
                "CostPlusBasedWholeSalePricePercent": {
                    "format": "double",
                    "type": "number"
                },
                "CostPlusBasedWholeSalePriceUsingType": {
                    "format": "int32",
                    "description": " 0 = SiteCost ,  1 = LastCost ,  2 = AverageCost ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["SiteCost", "LastCost", "AverageCost"]
                },
                "IsModified": {
                    "type": "boolean"
                }
            }
        },
        "CoreWebAdmin.Delta.DetailsEntity.Models.Customer.PersonalContent": {
            "type": "object",
            "properties": {
                "Phone1": {
                    "type": "string"
                },
                "Phone2": {
                    "type": "string"
                },
                "Phone3": {
                    "type": "string"
                },
                "Mobile": {
                    "type": "string"
                },
                "Fax": {
                    "type": "string"
                },
                "IsModified": {
                    "type": "boolean"
                }
            }
        },
        "CoreWebAdmin.Delta.DetailsEntity.Models.Common.UserAddressDto": {
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "CompanyName": {
                    "type": "string"
                },
                "AddressSource": {
                    "format": "int32",
                    "description": " 0 = LocalSite ,  1 = eBay ,  2 = Paypal ,  3 = Yahoo ,  4 = Amazon ,  5 = Buy_Com ,  12 = NewEgg ,  15 = Magento ,  16 = Sears ,  17 = CWA ,  18 = Shopify ",
                    "enum": [0, 1, 2, 3, 4, 5, 12, 15, 16, 17, 18],
                    "type": "integer",
                    "x-enumNames": [
                        "LocalSite",
                        "eBay",
                        "Paypal",
                        "Yahoo",
                        "Amazon",
                        "Buy_Com",
                        "NewEgg",
                        "Magento",
                        "Sears",
                        "CWA",
                        "Shopify"
                    ]
                },
                "AddressStatus": {
                    "format": "int32",
                    "description": " 0 = Unknown ,  1 = None ,  2 = Confirmed ,  3 = UnConfirmed ",
                    "enum": [0, 1, 2, 3],
                    "type": "integer",
                    "x-enumNames": ["Unknown", "None", "Confirmed", "UnConfirmed"]
                },
                "IsShippingAddress": {
                    "type": "boolean"
                },
                "IsBillingAddress": {
                    "type": "boolean"
                },
                "Address2": {
                    "type": "string"
                },
                "RowStatus": {
                    "format": "int32",
                    "description": " 0 = Existing ,  1 = Delete ,  2 = Add ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["Existing", "Delete", "Add"]
                },
                "ContactName": {
                    "type": "string"
                },
                "Country": {
                    "type": "string"
                },
                "City": {
                    "type": "string"
                },
                "State": {
                    "type": "string"
                },
                "Region": {
                    "type": "string"
                },
                "ZipCode": {
                    "type": "string"
                },
                "Address": {
                    "type": "string"
                },
                "Phone": {
                    "type": "string"
                },
                "Fax": {
                    "type": "string"
                },
                "IsModified": {
                    "type": "boolean"
                }
            }
        },
        "CoreWebAdmin.Delta.DetailsEntity.Models.Customer.WholesaleOptionsContent": {
            "type": "object",
            "properties": {
                "CreditTerm": {
                    "format": "int32",
                    "type": "integer"
                },
                "CreditLimit": {
                    "format": "double",
                    "type": "number"
                },
                "BillingCycleStartdate": {
                    "format": "date-time",
                    "type": "string"
                },
                "IsModified": {
                    "type": "boolean"
                }
            }
        },
        "CoreWebAdmin.Delta.DetailsEntity.Models.Customer.CustomerGroupsContent": {
            "type": "object",
            "properties": {
                "CustomerGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CoreWebAdmin.Delta.DetailsEntity.Models.Customer.CustomerGroupDto"
                    }
                },
                "IsModified": {
                    "type": "boolean"
                }
            }
        },
        "CoreWebAdmin.Delta.DetailsEntity.Models.Customer.CustomerCreditCardDto": {
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "CardType": {
                    "format": "int32",
                    "description": " 0 = None ,  1 = Visa ,  2 = MasterCard ,  3 = Discover ,  4 = Amex ,  5 = DinersClub ,  6 = JCB ,  7 = Card ,  8 = UnionPay ",
                    "enum": [0, 1, 2, 3, 4, 5, 6, 7, 8],
                    "type": "integer",
                    "x-enumNames": [
                        "None",
                        "Visa",
                        "MasterCard",
                        "Discover",
                        "Amex",
                        "DinersClub",
                        "JCB",
                        "Card",
                        "UnionPay"
                    ]
                },
                "NameOnCard": {
                    "type": "string"
                },
                "CardNumber": {
                    "type": "string"
                },
                "ExpirationMonth": {
                    "format": "int32",
                    "type": "integer"
                },
                "ExpirationYear": {
                    "format": "int32",
                    "type": "integer"
                },
                "IsDefault": {
                    "type": "boolean"
                },
                "CVV": {
                    "type": "string"
                }
            }
        },
        "CoreWebAdmin.Delta.DetailsEntity.Models.Customer.CustomerGroupDto": {
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "Name": {
                    "type": "string"
                },
                "RowStatus": {
                    "format": "int32",
                    "description": " 0 = Existing ,  1 = Delete ,  2 = Add ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["Existing", "Delete", "Add"]
                }
            }
        },
        "SellerCloud.Delta.WebApi.Models.Home.ServerInfoResponse": {
            "type": "object",
            "properties": {
                "LastCompileTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "DbvsLocalVersion": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.WebApi.Models.Home.TenantInfoResponse": {
            "type": "object",
            "properties": {
                "IsTerriformerServer": {
                    "type": "boolean"
                },
                "Tenant": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.DetailsEntity.Concrete.Inventory.InventoryDetailsDto": {
            "type": "object",
            "properties": {
                "General": {
                    "$ref": "#/definitions/SellerCloud.Delta.Models.DetailsEntity.Concrete.Inventory.InventoryGeneralContent"
                },
                "Identifiers": {
                    "$ref": "#/definitions/SellerCloud.Delta.Models.DetailsEntity.Concrete.Inventory.InventoryIdentifiersCotent"
                },
                "Metrics": {
                    "$ref": "#/definitions/SellerCloud.Delta.Models.DetailsEntity.Concrete.Inventory.InventoryMetricsContent"
                },
                "Inventory": {
                    "$ref": "#/definitions/SellerCloud.Delta.Models.DetailsEntity.Concrete.Inventory.InventoryContent"
                },
                "Images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.Details.ProductImageDto"
                    }
                },
                "CustomColumns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.CustomColumns.CustomColumnValueDto"
                    }
                },
                "NotesCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "IsModified": {
                    "type": "boolean"
                }
            }
        },
        "SellerCloud.Delta.Models.DetailsEntity.Concrete.Inventory.InventoryGeneralContent": {
            "type": "object",
            "properties": {
                "ProductName": {
                    "type": "string"
                },
                "ProductTypeID": {
                    "format": "int32",
                    "type": "integer"
                },
                "Condition": {
                    "format": "int32",
                    "type": "integer"
                },
                "LocationNotes": {
                    "type": "string"
                },
                "CompanyID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ClientID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ShadowOf": {
                    "type": "string"
                },
                "Priority": {
                    "format": "int32",
                    "type": "integer"
                },
                "Rating": {
                    "format": "int32",
                    "type": "integer"
                },
                "ShowPriorityAndRatingDelta": {
                    "type": "boolean"
                },
                "IsModified": {
                    "type": "boolean"
                }
            }
        },
        "SellerCloud.Delta.Models.DetailsEntity.Concrete.Inventory.InventoryIdentifiersCotent": {
            "type": "object",
            "properties": {
                "MasterSku": {
                    "type": "string"
                },
                "Upc": {
                    "type": "string"
                },
                "IsModified": {
                    "type": "boolean"
                }
            }
        },
        "SellerCloud.Delta.Models.DetailsEntity.Concrete.Inventory.InventoryMetricsContent": {
            "type": "object",
            "properties": {
                "ShippingWeights": {
                    "$ref": "#/definitions/CoreWebAdmin.Delta.DetailsEntity.Models.Common.ShippingWeight"
                },
                "ProductWeights": {
                    "$ref": "#/definitions/CoreWebAdmin.Delta.DetailsEntity.Models.Common.ShippingWeight"
                },
                "ProductDimensions": {
                    "$ref": "#/definitions/CoreWebAdmin.Delta.DetailsEntity.Models.Common.Dimensions[System.Decimal]"
                },
                "ShippingDimensions": {
                    "$ref": "#/definitions/CoreWebAdmin.Delta.DetailsEntity.Models.Common.Dimensions[System.Decimal]"
                },
                "ShippingPackageTypeID": {
                    "format": "int32",
                    "type": "integer"
                },
                "UniOfMeasure": {
                    "type": "string"
                },
                "IsModified": {
                    "type": "boolean"
                }
            }
        },
        "SellerCloud.Delta.Models.DetailsEntity.Concrete.Inventory.InventoryContent": {
            "type": "object",
            "properties": {
                "AggregateQty": {
                    "type": "string"
                },
                "PhysicalInventory": {
                    "type": "string"
                },
                "PhysicalInventoryTooltip": {
                    "type": "string"
                },
                "NonSellableQty": {
                    "type": "string"
                },
                "IsNonSellableQtyVisible": {
                    "type": "boolean"
                },
                "QtyPerCase": {
                    "format": "int32",
                    "type": "integer"
                },
                "QtyPerPallet": {
                    "format": "int32",
                    "type": "integer"
                },
                "ReservedQtyTotal": {
                    "format": "int32",
                    "type": "integer"
                },
                "Replenishable": {
                    "type": "boolean"
                },
                "ExpectedDeliveryDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "ContainerETAVisible": {
                    "type": "boolean"
                },
                "ContainerETADate": {
                    "format": "date-time",
                    "type": "string"
                },
                "QtyProduct": {
                    "format": "int32",
                    "type": "integer"
                },
                "ContainerETADateQtyProduct": {
                    "type": "string"
                },
                "ContainerETALink": {
                    "type": "string"
                },
                "UnshippedQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "PendingReservedQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "FBAReservedQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "OnOrderQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "IsModified": {
                    "type": "boolean"
                }
            }
        },
        "SellerCloud.Delta.Models.Details.ProductImageDto": {
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ImageSource": {
                    "type": "string"
                },
                "IsDefault": {
                    "type": "boolean"
                }
            }
        },
        "CoreWebAdmin.Delta.DetailsEntity.Models.Common.ShippingWeight": {
            "type": "object",
            "properties": {
                "Pounds": {
                    "format": "double",
                    "type": "number"
                },
                "Ounces": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "CoreWebAdmin.Delta.DetailsEntity.Models.Common.Dimensions[System.Decimal]": {
            "type": "object",
            "properties": {
                "Width": {
                    "format": "double",
                    "type": "number"
                },
                "Height": {
                    "format": "double",
                    "type": "number"
                },
                "Length": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Inventory.InventoryFilters": {
            "type": "object",
            "properties": {
                "InventoryID": {
                    "description": "List of product IDs",
                    "type": "string"
                },
                "EAN": {
                    "description": "EAN numbers separated by comma",
                    "type": "string"
                },
                "PoID": {
                    "description": "List of IDs of different purchase orders",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "CompanyID": {
                    "description": "List of IDs of different companies",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "VendorID": {
                    "description": "List of IDs of vendors",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "DefaultVendorID": {
                    "description": "List of IDs of default vendors",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "VendorSKU": {
                    "description": "List of vendor SKUs",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Warehouse": {
                    "description": "List of IDs of different warehouses",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "UPC": {
                    "description": "Universal Product Code number",
                    "type": "string"
                },
                "PhysicalQtyFrom": {
                    "format": "int32",
                    "description": "Minimum physical qty",
                    "type": "integer"
                },
                "PhysicalQtyTo": {
                    "format": "int32",
                    "description": "Maximum physical qty",
                    "type": "integer"
                },
                "KitType": {
                    "format": "int32",
                    "description": "Inventory kit type 0 = Independant ,  1 = MainComponent ,  2 = AllComponents ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["Independant", "MainComponent", "AllComponents"]
                },
                "LastAggregateFrom": {
                    "format": "date-time",
                    "description": "Start date-time of creation: mm/dd/yyyy hh:mm",
                    "type": "string"
                },
                "LastAggregateTo": {
                    "format": "date-time",
                    "description": "Last date-time of creation: mm/dd/yyyy hh:mm",
                    "type": "string"
                },
                "LastUpdatedFrom": {
                    "format": "date-time",
                    "description": "Start date-time of updating: mm/dd/yyyy hh:mm",
                    "type": "string"
                },
                "LastUpdatedTo": {
                    "format": "date-time",
                    "description": "Last date-time of updating: mm/dd/yyyy hh:mm",
                    "type": "string"
                },
                "Keyword": {
                    "type": "string"
                },
                "PageNumber": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Base.GetAllResponse[SellerCloud.Delta.Models.ManageEntity.Concrete.ProductInventoryDto]": {
            "type": "object",
            "properties": {
                "Items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.ManageEntity.Concrete.ProductInventoryDto"
                    }
                },
                "TotalResults": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ManageEntity.Concrete.ProductInventoryDto": {
            "type": "object",
            "properties": {
                "ImageUrl": {
                    "type": "string"
                },
                "Weight": {
                    "type": "string"
                },
                "ShippingWeight": {
                    "type": "string"
                },
                "WeightOz": {
                    "format": "double",
                    "type": "number"
                },
                "PackageWeightLbs": {
                    "format": "double",
                    "type": "number"
                },
                "PackageWeightOz": {
                    "format": "double",
                    "type": "number"
                },
                "LocationNotes": {
                    "type": "string"
                },
                "CompanyID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ShadowOf": {
                    "type": "string"
                },
                "AverageCost": {
                    "format": "double",
                    "type": "number"
                },
                "Priority": {
                    "format": "int32",
                    "type": "integer"
                },
                "Rating": {
                    "format": "int32",
                    "type": "integer"
                },
                "ProductName": {
                    "type": "string"
                },
                "DefaultVendorSKU": {
                    "type": "string"
                },
                "QtyPerCase": {
                    "format": "int32",
                    "type": "integer"
                },
                "QtySold15": {
                    "format": "int32",
                    "type": "integer"
                },
                "QtySold30": {
                    "format": "int32",
                    "type": "integer"
                },
                "QtySold60": {
                    "format": "int32",
                    "type": "integer"
                },
                "QtySold90": {
                    "format": "int32",
                    "type": "integer"
                },
                "QtySold180": {
                    "format": "int32",
                    "type": "integer"
                },
                "QtySold365": {
                    "format": "int32",
                    "type": "integer"
                },
                "QtySoldYTD": {
                    "format": "int32",
                    "type": "integer"
                },
                "IsEndOfLife": {
                    "type": "boolean"
                },
                "ShippingCost": {
                    "format": "double",
                    "type": "number"
                },
                "AggregateQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "ASIN": {
                    "type": "string"
                },
                "AggregatePhysicalQtyFBA": {
                    "format": "int32",
                    "type": "integer"
                },
                "ASINInActiveListing": {
                    "type": "string"
                },
                "ShippingWidth": {
                    "format": "double",
                    "type": "number"
                },
                "ShippingHeight": {
                    "format": "double",
                    "type": "number"
                },
                "ShippingLength": {
                    "format": "double",
                    "type": "number"
                },
                "LocationRegion": {
                    "format": "int32",
                    "type": "integer"
                },
                "WeightLbs": {
                    "format": "double",
                    "type": "number"
                },
                "ProductType": {
                    "type": "string"
                },
                "DefaultVendor": {
                    "type": "string"
                },
                "UnitOfMeasure": {
                    "format": "int32",
                    "description": " 0 = Imperial ,  1 = Metric ",
                    "enum": [0, 1],
                    "type": "integer",
                    "x-enumNames": ["Imperial", "Metric"]
                },
                "HomeCountryCode": {
                    "format": "int32",
                    "type": "integer"
                },
                "Country": {
                    "type": "string"
                },
                "AmazonMarketPlaceID": {
                    "type": "string"
                },
                "CompanyName": {
                    "type": "string"
                },
                "CompanyNameAbbreviation": {
                    "type": "string"
                },
                "WarehouseBasedPhysicalAndReservedQty": {
                    "type": "boolean"
                },
                "WarehousePhysicalQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "WarehousePhysicalQtyValue": {
                    "format": "double",
                    "type": "number"
                },
                "WarehouseReservedQtyValue": {
                    "format": "double",
                    "type": "number"
                },
                "AggregatedQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "AggregatePhysicalSellableQtyIncludingPhysicalValue": {
                    "format": "double",
                    "type": "number"
                },
                "PhysicalQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "ReservedQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "ReserveQtyTotalValue": {
                    "format": "double",
                    "type": "number"
                },
                "AggregateNonSellableQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "StorePrice": {
                    "format": "double",
                    "type": "number"
                },
                "ManufacturerSKU": {
                    "type": "string"
                },
                "UPC": {
                    "type": "string"
                },
                "EAN": {
                    "type": "string"
                },
                "AmazonFBASKU": {
                    "type": "string"
                },
                "FulfilledBy": {
                    "type": "string"
                },
                "SalesRank": {
                    "format": "int32",
                    "type": "integer"
                },
                "ProductConditionName": {
                    "type": "string"
                },
                "NotesCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "FirstKitChild": {
                    "type": "string"
                },
                "WarehouseName": {
                    "type": "string"
                },
                "IsSellAble": {
                    "type": "boolean"
                },
                "WarehouseCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "OrderReserveTotal": {
                    "format": "int32",
                    "type": "integer"
                },
                "ExpectedDeliveryDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "CreationDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "Status": {
                    "format": "int32",
                    "description": " 0 = Disabled ,  1 = Active ",
                    "enum": [0, 1],
                    "type": "integer",
                    "x-enumNames": ["Disabled", "Active"]
                },
                "InventoryDependantOption": {
                    "format": "int32",
                    "type": "integer"
                },
                "OnOrder": {
                    "format": "int32",
                    "type": "integer"
                },
                "AmazonPrice": {
                    "format": "double",
                    "type": "number"
                },
                "VendorID": {
                    "format": "int32",
                    "type": "integer"
                },
                "LastAggregateDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "LastModifiedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "AmazonMarketplace": {
                    "type": "string"
                },
                "OnBackOrder": {
                    "format": "int32",
                    "type": "integer"
                },
                "BackOrderVisible": {
                    "type": "boolean",
                    "readOnly": true
                },
                "WholeSalePrice": {
                    "format": "double",
                    "type": "number"
                },
                "WholeSalePriceVisible": {
                    "type": "boolean",
                    "readOnly": true
                },
                "SitePrice": {
                    "format": "double",
                    "type": "number"
                },
                "SiteCost": {
                    "format": "double",
                    "type": "number"
                },
                "IsKit": {
                    "type": "boolean"
                },
                "SiteCostVisible": {
                    "type": "boolean",
                    "readOnly": true
                },
                "LastCost": {
                    "format": "double",
                    "type": "number"
                },
                "LastCostVisible": {
                    "type": "boolean",
                    "readOnly": true
                },
                "ShowPriorityAndRatingDelta": {
                    "type": "boolean",
                    "readOnly": true
                },
                "InventoryAvailableQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "ChildProducts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.ManageEntity.Concrete.ProductBundleDto"
                    }
                },
                "CustomColumns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.CustomColumns.CustomColumnValueDto"
                    }
                },
                "AmazonStoreStatus": {
                    "type": "boolean"
                },
                "AmazonEnableBOPISProduct": {
                    "type": "boolean"
                },
                "ID": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Inventory.UpdateInventoryRequest": {
            "required": ["ID"],
            "type": "object",
            "properties": {
                "ID": {
                    "description": "ID of inventory",
                    "type": "string"
                },
                "ProductName": {
                    "description": "Name of inventory",
                    "type": "string"
                },
                "CompanyID": {
                    "format": "int32",
                    "description": "ID of the company",
                    "type": "integer"
                },
                "ProductTypeID": {
                    "format": "int32",
                    "description": "Product Type",
                    "type": "integer"
                },
                "Condition": {
                    "format": "int32",
                    "type": "integer"
                },
                "MasterSku": {
                    "type": "string"
                },
                "UPC": {
                    "type": "string"
                },
                "ShippingWeights": {
                    "$ref": "#/definitions/CoreWebAdmin.Delta.DetailsEntity.Models.Common.ShippingWeight",
                    "description": "Shipping weights"
                },
                "ProductWeights": {
                    "$ref": "#/definitions/CoreWebAdmin.Delta.DetailsEntity.Models.Common.ShippingWeight",
                    "description": "Product weights"
                },
                "ProductDimensions": {
                    "$ref": "#/definitions/CoreWebAdmin.Delta.DetailsEntity.Models.Common.Dimensions[System.Decimal]",
                    "description": "Product dimensions"
                },
                "ShippingDimensions": {
                    "$ref": "#/definitions/CoreWebAdmin.Delta.DetailsEntity.Models.Common.Dimensions[System.Decimal]",
                    "description": "Shipping dimensions"
                },
                "ShippingPackageTypeID": {
                    "format": "int32",
                    "description": "Package Type",
                    "type": "integer"
                },
                "LocationNotes": {
                    "type": "string"
                },
                "QtyPerCase": {
                    "format": "int32",
                    "type": "integer"
                },
                "QtyPerPallet": {
                    "format": "int32",
                    "type": "integer"
                },
                "Replenishable": {
                    "type": "boolean"
                }
            }
        },
        "SellerCloud.Delta.Models.Details.Concrete.Inventory.InventoryWarehouseDto": {
            "type": "object",
            "properties": {
                "ProductID": {
                    "type": "string"
                },
                "AvailableQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "PhysicalQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "WarehouseID": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.Details.Concrete.Inventory.SingleWarehouseDto": {
            "type": "object",
            "properties": {
                "AvailableQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "PhysicalQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "WarehouseID": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Inventory.WarehouseInventoryInformationDto": {
            "type": "object",
            "properties": {
                "ProductID": {
                    "type": "string"
                },
                "AvailableQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "PhysicalQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "WarehouseID": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Warehouse.SetPhysicalInventoryRequest": {
            "required": ["ProductID", "PhysicalQty"],
            "type": "object",
            "properties": {
                "WarehouseID": {
                    "format": "int32",
                    "description": "ID of warehouse",
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer"
                },
                "ProductID": {
                    "description": "ID of product",
                    "type": "string"
                },
                "InventoryDate": {
                    "format": "date-time",
                    "description": "Inventory Date",
                    "type": "string"
                },
                "PhysicalQty": {
                    "format": "int32",
                    "description": "Qty to set",
                    "type": "integer"
                },
                "SiteCost": {
                    "format": "double",
                    "description": "Cost",
                    "type": "number"
                },
                "PinCode": {
                    "description": "PinCode",
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Warehouse.AdjustPhysicalInventoryRequest": {
            "required": ["ProductID", "AdjustmentType", "Reason"],
            "type": "object",
            "properties": {
                "WarehouseID": {
                    "format": "int32",
                    "description": "ID of warehouse",
                    "type": "integer"
                },
                "ProductID": {
                    "description": "SKU of product",
                    "type": "string"
                },
                "Qty": {
                    "format": "int32",
                    "description": "Qty to adjust",
                    "type": "integer"
                },
                "AdjustmentType": {
                    "format": "int32",
                    "description": "Subtract = 0, Add = 1 0 = Subtract ,  1 = Add ",
                    "enum": [0, 1],
                    "type": "integer",
                    "x-enumNames": ["Subtract", "Add"]
                },
                "Reason": {
                    "description": "Reason for adjustment",
                    "type": "string"
                },
                "InventoryCost": {
                    "format": "double",
                    "description": "Inventory Cost",
                    "type": "number"
                },
                "SiteCost": {
                    "format": "double",
                    "description": "Site Cost",
                    "type": "number"
                },
                "PinCode": {
                    "description": "Pincode for verification",
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Inventory.ImportBulkPhysicalInventoryRequest": {
            "required": ["FileContent", "InventoryDate"],
            "type": "object",
            "properties": {
                "UpdateType": {
                    "format": "int32",
                    "description": " 0 = Partial ,  1 = Full ",
                    "enum": [0, 1],
                    "type": "integer",
                    "x-enumNames": ["Partial", "Full"]
                },
                "FileContent": {
                    "type": "string"
                },
                "InventoryDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "Format": {
                    "format": "int32",
                    "description": " 0 = TAB_Delimited ,  1 = CSV ,  2 = Excel ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["TAB_Delimited", "CSV", "Excel"]
                },
                "WarehouseID": {
                    "format": "int32",
                    "type": "integer"
                },
                "PinCode": {
                    "type": "string"
                },
                "MergeDefaultWarehouseInventoryIntoShadowParent": {
                    "type": "boolean"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Inventory.SerialNumbers.GetSerialNumbersRequest": {
            "required": ["ProductID"],
            "type": "object",
            "properties": {
                "ProductID": {
                    "type": "string"
                },
                "SerialNumber": {
                    "type": "string"
                },
                "WarehouseID": {
                    "format": "int32",
                    "type": "integer"
                },
                "InstockOnly": {
                    "type": "boolean"
                },
                "ReceivedOnFromDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "ReceivedOnToDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "PageNumber": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Inventory.SerialNumbers.GetSerialNumbersResponse": {
            "type": "object",
            "properties": {
                "ProductID": {
                    "type": "string"
                },
                "SerialNumbers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Inventory.SerialNumbers.GetSerialNumbersItem"
                    }
                },
                "TotalSerialNumbers": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Inventory.SerialNumbers.GetSerialNumbersItem": {
            "type": "object",
            "properties": {
                "SerialNumber": {
                    "type": "string"
                },
                "PurchaseID": {
                    "format": "int32",
                    "type": "integer"
                },
                "OrderID": {
                    "format": "int32",
                    "type": "integer"
                },
                "OrderItemID": {
                    "format": "int32",
                    "type": "integer"
                },
                "CreditMemoID": {
                    "format": "int32",
                    "type": "integer"
                },
                "CreditMemoReason": {
                    "type": "string"
                },
                "WarehouseID": {
                    "type": "string"
                },
                "BinName": {
                    "type": "string"
                },
                "FBAShipmentID": {
                    "format": "int32",
                    "type": "integer"
                },
                "WarehouseTransferRequestID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ExpiryDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "ReceivedOn": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Inventory.PhysicalInventoryImportRequest": {
            "required": ["FileContents", "InventoryDate"],
            "type": "object",
            "properties": {
                "FileContents": {
                    "type": "string"
                },
                "InventoryDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "Format": {
                    "format": "int32",
                    "description": " 0 = TAB_Delimited ,  1 = CSV ,  2 = Excel ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["TAB_Delimited", "CSV", "Excel"]
                },
                "WarehouseID": {
                    "format": "int32",
                    "type": "integer"
                },
                "PinCode": {
                    "type": "string"
                },
                "MergeDefaultWarehouseInventoryIntoShadowParent": {
                    "type": "boolean"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Order.CustomColumnDto": {
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ColumnName": {
                    "type": "string"
                },
                "DisplayName": {
                    "type": "string"
                },
                "DataType": {
                    "format": "int32",
                    "description": " 0 = String ,  1 = Integer ,  2 = Decimal ,  3 = DateTime ,  4 = Boolean ,  5 = nText ,  6 = Hyperlink ",
                    "enum": [0, 1, 2, 3, 4, 5, 6],
                    "type": "integer",
                    "x-enumNames": [
                        "String",
                        "Integer",
                        "Decimal",
                        "DateTime",
                        "Boolean",
                        "nText",
                        "Hyperlink"
                    ]
                },
                "DataLength": {
                    "format": "int32",
                    "type": "integer"
                },
                "IsDropDownColumn": {
                    "type": "boolean"
                },
                "IsDropDownCustomTextAllowed": {
                    "type": "boolean"
                },
                "Value": {
                    "type": "object"
                }
            }
        },
        "SellerCloud.Delta.Models.Common.PaginationResultsDto[SellerCloud.Delta.Models.Details.Concrete.Order.OrderPackageDto]": {
            "type": "object",
            "properties": {
                "Results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.Details.Concrete.Order.OrderPackageDto"
                    }
                },
                "TotalResults": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.Details.Concrete.Order.OrderPackageDto": {
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "TrackingNumber": {
                    "type": "string"
                },
                "TrackingNumberUrl": {
                    "type": "string"
                },
                "TrackingNumberText": {
                    "type": "string"
                },
                "Length": {
                    "format": "double",
                    "type": "number"
                },
                "Width": {
                    "format": "double",
                    "type": "number"
                },
                "Height": {
                    "format": "double",
                    "type": "number"
                },
                "Weight": {
                    "format": "double",
                    "type": "number"
                },
                "ShippingCost": {
                    "format": "double",
                    "type": "number"
                },
                "FinalShippingFee": {
                    "format": "double",
                    "type": "number"
                },
                "EstimatedDeliveryDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "DeliveryDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "DeliveryStatus": {
                    "format": "int32",
                    "description": " 0 = UnShipped ,  1 = Shipped ,  2 = Intransit ,  3 = Out_For_Delivery ,  4 = Delivered ,  5 = Undeliverable ,  6 = Return_To_Sender ",
                    "enum": [0, 1, 2, 3, 4, 5, 6],
                    "type": "integer",
                    "x-enumNames": [
                        "UnShipped",
                        "Shipped",
                        "Intransit",
                        "Out_For_Delivery",
                        "Delivered",
                        "Undeliverable",
                        "Return_To_Sender"
                    ]
                },
                "DeclaredValue": {
                    "format": "double",
                    "type": "number"
                },
                "Items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.Details.Concrete.Order.OrderPackageItemDto"
                    }
                },
                "EnableOrderShipmentTrackingAPI": {
                    "type": "boolean"
                }
            }
        },
        "SellerCloud.Delta.Models.Details.Concrete.Order.OrderPackageItemDto": {
            "type": "object",
            "properties": {
                "PackageID": {
                    "format": "int32",
                    "type": "integer"
                },
                "OrderItemID": {
                    "format": "int32",
                    "type": "integer"
                },
                "OrderItemBundleItemID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ProductID": {
                    "type": "string"
                },
                "Qty": {
                    "format": "int32",
                    "type": "integer"
                },
                "ItemName": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Base.GetAllResponse[SellerCloud.Delta.Models.ClientAPI.Order.MultipleOrderDataDto]": {
            "type": "object",
            "properties": {
                "Items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Order.MultipleOrderDataDto"
                    }
                },
                "TotalResults": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Order.MultipleOrderDataDto": {
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "OrderSourceOrderID": {
                    "type": "string"
                },
                "OrderSource": {
                    "format": "int32",
                    "description": " 0 = Local_Store ,  1 = eBayOrder ,  2 = eBaySingleItem ,  3 = Yahoo ,  4 = Amazon ,  5 = PriceGrabber ,  6 = Website ,  7 = Buy ,  12 = NewEggMall ,  15 = Magento ,  16 = QuickBooks ,  17 = RMS ,  18 = Cart32 ,  19 = Sears ,  20 = FBA ,  21 = Wholesale ,  22 = Overstock ,  23 = NewEggdotcom ,  24 = Etsy ,  25 = Bonanza ,  26 = PriceFalls ,  27 = Wayfair ,  28 = UnbeatableSale ,  29 = VendorCentral ,  30 = Hayneedle ,  31 = SmartBargains ,  32 = uBid ,  33 = ATGStores ,  34 = StacksAndStacks ,  35 = Sharkstores ,  36 = BestBuy ,  37 = Kohls ,  38 = Staples ,  39 = OneStopPlus ,  40 = Meijer ,  41 = Sonsi ,  42 = Walmart ,  43 = HSN ,  44 = NewEgg_Business ,  45 = KMart ,  46 = Wish ,  47 = SPRichards ,  48 = FingerHut ,  49 = Groupon ,  50 = Walmart_Marketplace ,  51 = ShopHQ ,  52 = PriceMinister ,  53 = GS ,  54 = DrugStore ,  55 = MercadoLibre ,  56 = JET ,  57 = ElevenMain ,  58 = SearsVendor ,  59 = Choxi ,  60 = TradeMe ,  61 = Tanga ,  62 = Target ,  63 = GrouponMarketplace ,  64 = Reverb ,  65 = BedBathAndBeyond ,  66 = Dropship_Central ,  67 = DSW ,  68 = Houzz ,  69 = Gilt ,  70 = BestBuyDS ,  71 = TopHatter ,  72 = HomeDepot ,  73 = MassGenie ,  74 = Cdiscount ,  75 = GrouponGateway ,  76 = SBN ,  77 = GoogleExpress ,  78 = Target_Plus ,  79 = WFS ",
                    "enum": [
                        0, 1, 2, 3, 4, 5, 6, 7, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,
                        27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45,
                        46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64,
                        65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79
                    ],
                    "type": "integer",
                    "x-enumNames": [
                        "Local_Store",
                        "eBayOrder",
                        "eBaySingleItem",
                        "Yahoo",
                        "Amazon",
                        "PriceGrabber",
                        "Website",
                        "Buy",
                        "NewEggMall",
                        "Magento",
                        "QuickBooks",
                        "RMS",
                        "Cart32",
                        "Sears",
                        "FBA",
                        "Wholesale",
                        "Overstock",
                        "NewEggdotcom",
                        "Etsy",
                        "Bonanza",
                        "PriceFalls",
                        "Wayfair",
                        "UnbeatableSale",
                        "VendorCentral",
                        "Hayneedle",
                        "SmartBargains",
                        "uBid",
                        "ATGStores",
                        "StacksAndStacks",
                        "Sharkstores",
                        "BestBuy",
                        "Kohls",
                        "Staples",
                        "OneStopPlus",
                        "Meijer",
                        "Sonsi",
                        "Walmart",
                        "HSN",
                        "NewEgg_Business",
                        "KMart",
                        "Wish",
                        "SPRichards",
                        "FingerHut",
                        "Groupon",
                        "Walmart_Marketplace",
                        "ShopHQ",
                        "PriceMinister",
                        "GS",
                        "DrugStore",
                        "MercadoLibre",
                        "JET",
                        "ElevenMain",
                        "SearsVendor",
                        "Choxi",
                        "TradeMe",
                        "Tanga",
                        "Target",
                        "GrouponMarketplace",
                        "Reverb",
                        "BedBathAndBeyond",
                        "Dropship_Central",
                        "DSW",
                        "Houzz",
                        "Gilt",
                        "BestBuyDS",
                        "TopHatter",
                        "HomeDepot",
                        "MassGenie",
                        "Cdiscount",
                        "GrouponGateway",
                        "SBN",
                        "GoogleExpress",
                        "Target_Plus",
                        "WFS"
                    ]
                },
                "OrderSubType": {
                    "format": "int32",
                    "description": " 0 = None ,  1 = Sample ,  2 = Charity ,  3 = eBayNow ,  4 = eBayLocalPickup ,  5 = Same_Day_Delivery ,  6 = GS ,  7 = Prime ,  8 = FBA_Exchange ,  9 = Amazon_Business ,  10 = Amazon_Business_Prime ,  11 = Second_Day ,  12 = Wish_Express ,  13 = SBN ,  15 = Amazon_Global_Express ,  16 = InStorePickUp ",
                    "enum": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16],
                    "type": "integer",
                    "x-enumNames": [
                        "None",
                        "Sample",
                        "Charity",
                        "eBayNow",
                        "eBayLocalPickup",
                        "Same_Day_Delivery",
                        "GS",
                        "Prime",
                        "FBA_Exchange",
                        "Amazon_Business",
                        "Amazon_Business_Prime",
                        "Second_Day",
                        "Wish_Express",
                        "SBN",
                        "Amazon_Global_Express",
                        "InStorePickUp"
                    ]
                },
                "bRushOrder": {
                    "type": "boolean"
                },
                "IsGiftOrder": {
                    "type": "boolean"
                },
                "IsBlackListed": {
                    "type": "boolean"
                },
                "ShippingStatus": {
                    "format": "int32",
                    "type": "integer"
                },
                "PaymentStatus": {
                    "format": "int32",
                    "type": "integer"
                },
                "StatusCode": {
                    "format": "int32",
                    "type": "integer"
                },
                "Dropship": {
                    "format": "int32",
                    "description": " 0 = None ,  1 = Pending ,  2 = Requested ,  3 = Acknowledged ,  4 = Processed ,  5 = PartialProcessed ,  6 = Cancelled ,  7 = Invalid ",
                    "enum": [0, 1, 2, 3, 4, 5, 6, 7],
                    "type": "integer",
                    "x-enumNames": [
                        "None",
                        "Pending",
                        "Requested",
                        "Acknowledged",
                        "Processed",
                        "PartialProcessed",
                        "Cancelled",
                        "Invalid"
                    ]
                },
                "FirstName": {
                    "type": "string"
                },
                "LastName": {
                    "type": "string"
                },
                "TimeOfOrder": {
                    "format": "date-time",
                    "type": "string"
                },
                "GrandTotal": {
                    "format": "double",
                    "type": "number"
                },
                "CompanyName": {
                    "type": "string"
                },
                "UserID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ShipDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "OrderShippingPromiseDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "CreatedOn": {
                    "format": "date-time",
                    "type": "string"
                },
                "DeliveryDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "HomeCountryCode": {
                    "format": "int32",
                    "type": "integer"
                },
                "Country": {
                    "type": "string"
                },
                "LastUpdated": {
                    "format": "date-time",
                    "type": "string"
                },
                "Payments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CoreWebAdmin.Delta.DetailsEntity.Models.Order.PaymentsHistoryRecord"
                    }
                },
                "DestinationState": {
                    "type": "string",
                    "readOnly": true
                },
                "DestinationCountry": {
                    "type": "string",
                    "readOnly": true
                },
                "ShippingAddress": {
                    "$ref": "#/definitions/BVSoftware.BVC.Core.Contacts.Address"
                },
                "BillingAddress": {
                    "$ref": "#/definitions/BVSoftware.BVC.Core.Contacts.Address"
                },
                "OrderSiteCode": {
                    "format": "int32",
                    "description": " 0 = US ,  1 = UK ,  2 = JP ,  3 = FR ,  4 = DE ,  5 = CA ,  6 = AU ,  7 = IT ,  8 = ES ,  9 = MX ,  10 = CN ,  11 = AF ,  12 = AL ,  13 = DZ ,  14 = AS ,  15 = AD ,  16 = AO ,  17 = AI ,  18 = AQ ,  19 = AG ,  20 = AR ,  21 = AM ,  22 = AW ,  23 = AT ,  24 = AZ ,  25 = BS ,  26 = BH ,  27 = BD ,  28 = BB ,  29 = BY ,  30 = BE ,  31 = BZ ,  32 = BJ ,  33 = BM ,  34 = BT ,  35 = BO ,  36 = BA ,  37 = BW ,  38 = BV ,  39 = BR ,  40 = IO ,  41 = BN ,  42 = BG ,  43 = BF ,  44 = BI ,  45 = KH ,  46 = CM ,  47 = CV ,  48 = KY ,  49 = CF ,  50 = TD ,  51 = CL ,  52 = CX ,  53 = CC ,  54 = CO ,  55 = KM ,  56 = CG ,  57 = CD ,  58 = CK ,  59 = CR ,  60 = CI ,  61 = HR ,  62 = CU ,  63 = CY ,  64 = CZ ,  65 = DK ,  66 = DJ ,  67 = DM ,  68 = DO ,  69 = TP ,  70 = EC ,  71 = EG ,  72 = SV ,  73 = GQ ,  74 = ER ,  75 = EE ,  76 = ET ,  77 = FK ,  78 = FO ,  79 = FJ ,  80 = FI ,  81 = GF ,  82 = PF ,  83 = TF ,  84 = GA ,  85 = GM ,  86 = GE ,  87 = GH ,  88 = GI ,  89 = GR ,  90 = GL ,  91 = GD ,  92 = GP ,  93 = GU ,  94 = GT ,  95 = GN ,  96 = GW ,  97 = GY ,  98 = HT ,  99 = HM ,  100 = VA ,  101 = HN ,  102 = HK ,  103 = HU ,  104 = IS ,  105 = IN ,  106 = ID ,  107 = IR ,  108 = IQ ,  109 = IE ,  110 = IL ,  111 = JM ,  112 = JO ,  113 = KZ ,  114 = KE ,  115 = KI ,  116 = KP ,  117 = KR ,  118 = KW ,  119 = KG ,  120 = LA ,  121 = LV ,  122 = LB ,  123 = LS ,  124 = LR ,  125 = LY ,  126 = LI ,  127 = LT ,  128 = LU ,  129 = MO ,  130 = MK ,  131 = MG ,  132 = MW ,  133 = MY ,  134 = MV ,  135 = ML ,  136 = MT ,  137 = MH ,  138 = MQ ,  139 = MR ,  140 = MU ,  141 = YT ,  142 = FM ,  143 = MD ,  144 = MC ,  145 = MN ,  146 = MS ,  147 = MA ,  148 = MZ ,  149 = MM ,  150 = NA ,  151 = NR ,  152 = NP ,  153 = NL ,  154 = AN ,  155 = NC ,  156 = NZ ,  157 = NI ,  158 = NE ,  159 = NG ,  160 = NU ,  161 = NF ,  162 = MP ,  163 = NO ,  164 = OM ,  165 = PK ,  166 = PW ,  167 = PS ,  168 = PA ,  169 = PG ,  170 = PY ,  171 = PE ,  172 = PH ,  173 = PN ,  174 = PL ,  175 = PT ,  176 = PR ,  177 = QA ,  178 = RE ,  179 = RO ,  180 = RU ,  181 = RW ,  182 = SH ,  183 = KN ,  184 = LC ,  185 = PM ,  186 = VC ,  187 = WS ,  188 = SM ,  189 = ST ,  190 = SA ,  191 = SN ,  192 = SC ,  193 = SL ,  194 = SG ,  195 = SK ,  196 = SI ,  197 = SB ,  198 = SO ,  199 = ZA ,  200 = GS ,  201 = LK ,  202 = SD ,  203 = SR ,  204 = SJ ,  205 = SZ ,  206 = SE ,  207 = CH ,  208 = SY ,  209 = TW ,  210 = TJ ,  211 = TZ ,  212 = TH ,  213 = TG ,  214 = TK ,  215 = TO ,  216 = TT ,  217 = TN ,  218 = TR ,  219 = TM ,  220 = TC ,  221 = TV ,  222 = UG ,  223 = UA ,  224 = AE ,  225 = UM ,  226 = UY ,  227 = UZ ,  228 = VU ,  229 = VE ,  230 = VN ,  231 = VG ,  232 = VI ,  233 = WF ,  234 = EH ,  235 = YE ,  236 = YU ,  237 = ZM ,  238 = ZW ,  239 = AA ,  240 = QM ,  241 = QN ,  242 = QO ,  243 = QP ,  244 = JE ,  245 = GG ,  246 = ZZ ,  247 = RS ,  248 = ME ",
                    "enum": [
                        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
                        21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
                        40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,
                        59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
                        78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
                        97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112,
                        113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
                        128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
                        143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
                        158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
                        173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
                        188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
                        203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
                        218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232,
                        233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247,
                        248
                    ],
                    "type": "integer",
                    "x-enumNames": [
                        "US",
                        "UK",
                        "JP",
                        "FR",
                        "DE",
                        "CA",
                        "AU",
                        "IT",
                        "ES",
                        "MX",
                        "CN",
                        "AF",
                        "AL",
                        "DZ",
                        "AS",
                        "AD",
                        "AO",
                        "AI",
                        "AQ",
                        "AG",
                        "AR",
                        "AM",
                        "AW",
                        "AT",
                        "AZ",
                        "BS",
                        "BH",
                        "BD",
                        "BB",
                        "BY",
                        "BE",
                        "BZ",
                        "BJ",
                        "BM",
                        "BT",
                        "BO",
                        "BA",
                        "BW",
                        "BV",
                        "BR",
                        "IO",
                        "BN",
                        "BG",
                        "BF",
                        "BI",
                        "KH",
                        "CM",
                        "CV",
                        "KY",
                        "CF",
                        "TD",
                        "CL",
                        "CX",
                        "CC",
                        "CO",
                        "KM",
                        "CG",
                        "CD",
                        "CK",
                        "CR",
                        "CI",
                        "HR",
                        "CU",
                        "CY",
                        "CZ",
                        "DK",
                        "DJ",
                        "DM",
                        "DO",
                        "TP",
                        "EC",
                        "EG",
                        "SV",
                        "GQ",
                        "ER",
                        "EE",
                        "ET",
                        "FK",
                        "FO",
                        "FJ",
                        "FI",
                        "GF",
                        "PF",
                        "TF",
                        "GA",
                        "GM",
                        "GE",
                        "GH",
                        "GI",
                        "GR",
                        "GL",
                        "GD",
                        "GP",
                        "GU",
                        "GT",
                        "GN",
                        "GW",
                        "GY",
                        "HT",
                        "HM",
                        "VA",
                        "HN",
                        "HK",
                        "HU",
                        "IS",
                        "IN",
                        "ID",
                        "IR",
                        "IQ",
                        "IE",
                        "IL",
                        "JM",
                        "JO",
                        "KZ",
                        "KE",
                        "KI",
                        "KP",
                        "KR",
                        "KW",
                        "KG",
                        "LA",
                        "LV",
                        "LB",
                        "LS",
                        "LR",
                        "LY",
                        "LI",
                        "LT",
                        "LU",
                        "MO",
                        "MK",
                        "MG",
                        "MW",
                        "MY",
                        "MV",
                        "ML",
                        "MT",
                        "MH",
                        "MQ",
                        "MR",
                        "MU",
                        "YT",
                        "FM",
                        "MD",
                        "MC",
                        "MN",
                        "MS",
                        "MA",
                        "MZ",
                        "MM",
                        "NA",
                        "NR",
                        "NP",
                        "NL",
                        "AN",
                        "NC",
                        "NZ",
                        "NI",
                        "NE",
                        "NG",
                        "NU",
                        "NF",
                        "MP",
                        "NO",
                        "OM",
                        "PK",
                        "PW",
                        "PS",
                        "PA",
                        "PG",
                        "PY",
                        "PE",
                        "PH",
                        "PN",
                        "PL",
                        "PT",
                        "PR",
                        "QA",
                        "RE",
                        "RO",
                        "RU",
                        "RW",
                        "SH",
                        "KN",
                        "LC",
                        "PM",
                        "VC",
                        "WS",
                        "SM",
                        "ST",
                        "SA",
                        "SN",
                        "SC",
                        "SL",
                        "SG",
                        "SK",
                        "SI",
                        "SB",
                        "SO",
                        "ZA",
                        "GS",
                        "LK",
                        "SD",
                        "SR",
                        "SJ",
                        "SZ",
                        "SE",
                        "CH",
                        "SY",
                        "TW",
                        "TJ",
                        "TZ",
                        "TH",
                        "TG",
                        "TK",
                        "TO",
                        "TT",
                        "TN",
                        "TR",
                        "TM",
                        "TC",
                        "TV",
                        "UG",
                        "UA",
                        "AE",
                        "UM",
                        "UY",
                        "UZ",
                        "VU",
                        "VE",
                        "VN",
                        "VG",
                        "VI",
                        "WF",
                        "EH",
                        "YE",
                        "YU",
                        "ZM",
                        "ZW",
                        "AA",
                        "QM",
                        "QN",
                        "QO",
                        "QP",
                        "JE",
                        "GG",
                        "ZZ",
                        "RS",
                        "ME"
                    ]
                },
                "ClientID": {
                    "format": "int32",
                    "type": "integer"
                },
                "CompanyID": {
                    "format": "int32",
                    "type": "integer"
                },
                "EBaySellingManagerSalesRecordNumber": {
                    "type": "string"
                },
                "CompletedOrderID": {
                    "type": "string"
                },
                "OrderSourceUrl": {
                    "type": "string"
                },
                "Items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Order.MultipleOrderItemDto"
                    }
                },
                "ShippingTotal": {
                    "format": "double",
                    "type": "number"
                },
                "ShippingCarrier": {
                    "type": "string"
                },
                "ShippingService": {
                    "type": "string"
                },
                "OrderDiscountsTotal": {
                    "format": "double",
                    "type": "number"
                },
                "ShippingDiscountsTotal": {
                    "format": "double",
                    "type": "number"
                },
                "InsuranceTotal": {
                    "format": "double",
                    "type": "number"
                },
                "DeclaredValue": {
                    "format": "float",
                    "type": "number"
                },
                "HandlingFee": {
                    "format": "float",
                    "type": "number"
                },
                "PaymentDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "OrderCurrencyCode": {
                    "format": "int32",
                    "description": " 0 = USD ,  1 = GBP ,  2 = JPY ,  3 = EUR ,  4 = CAD ,  5 = AUD ,  6 = MXN ,  7 = TWD ,  8 = CNY ,  9 = AFA ,  10 = ALL ,  11 = DZD ,  12 = ADP ,  13 = AOA ,  14 = ARS ,  15 = AMD ,  16 = AWG ,  17 = AZM ,  18 = BSD ,  19 = BHD ,  20 = BDT ,  21 = BBD ,  22 = BYR ,  23 = BZD ,  24 = BMD ,  25 = BTN ,  26 = INR ,  27 = BOV ,  28 = BOB ,  29 = BAM ,  30 = BWP ,  31 = BRL ,  32 = BND ,  33 = BGL ,  34 = BGN ,  35 = BIF ,  36 = KHR ,  37 = CVE ,  38 = KYD ,  39 = XAF ,  40 = CLF ,  41 = CLP ,  42 = COP ,  43 = KMF ,  44 = CDF ,  45 = CRC ,  46 = HRK ,  47 = CUP ,  48 = CYP ,  49 = CZK ,  50 = DKK ,  51 = DJF ,  52 = DOP ,  53 = TPE ,  54 = ECV ,  55 = ECS ,  56 = EGP ,  57 = SVC ,  58 = ERN ,  59 = EEK ,  60 = ETB ,  61 = FKP ,  62 = FJD ,  63 = GMD ,  64 = GEL ,  65 = GHC ,  66 = GIP ,  67 = GTQ ,  68 = GNF ,  69 = GWP ,  70 = GYD ,  71 = HTG ,  72 = HNL ,  73 = HKD ,  74 = HUF ,  75 = ISK ,  76 = IDR ,  77 = IRR ,  78 = IQD ,  79 = ILS ,  80 = JMD ,  81 = JOD ,  82 = KZT ,  83 = KES ,  84 = KPW ,  85 = KRW ,  86 = KWD ,  87 = KGS ,  88 = LAK ,  89 = LVL ,  90 = LBP ,  91 = LSL ,  92 = LRD ,  93 = LYD ,  94 = CHF ,  95 = LTL ,  96 = MOP ,  97 = MKD ,  98 = MGF ,  99 = MWK ,  100 = MYR ,  101 = MVR ,  102 = MTL ,  103 = MRO ,  104 = MUR ,  105 = MXV ,  106 = MDL ,  107 = MNT ,  108 = XCD ,  109 = MZM ,  110 = MMK ,  111 = ZAR ,  112 = NAD ,  113 = NPR ,  114 = ANG ,  115 = XPF ,  116 = NZD ,  117 = NIO ,  118 = NGN ,  119 = NOK ,  120 = OMR ,  121 = PKR ,  122 = PAB ,  123 = PGK ,  124 = PYG ,  125 = PEN ,  126 = PHP ,  127 = PLN ,  128 = QAR ,  129 = ROL ,  130 = RUB ,  131 = RUR ,  132 = RWF ,  133 = SHP ,  134 = WST ,  135 = STD ,  136 = SAR ,  137 = SCR ,  138 = SLL ,  139 = SGD ,  140 = SKK ,  141 = SIT ,  142 = SBD ,  143 = SOS ,  144 = LKR ,  145 = SDD ,  146 = SRG ,  147 = SZL ,  148 = SEK ,  149 = SYP ,  150 = TJS ,  151 = TZS ,  152 = THB ,  153 = XOF ,  154 = TOP ,  155 = TTD ,  156 = TND ,  157 = TRL ,  158 = TMM ,  159 = UGX ,  160 = UAH ,  161 = AED ,  162 = USS ,  163 = USN ,  164 = UYU ,  165 = UZS ,  166 = VUV ,  167 = VEB ,  168 = VND ,  169 = MAD ,  170 = YER ,  171 = YUM ,  172 = ZMK ,  173 = ZWD ,  174 = ATS ",
                    "enum": [
                        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
                        21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
                        40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,
                        59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
                        78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
                        97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112,
                        113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
                        128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
                        143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
                        158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
                        173, 174
                    ],
                    "type": "integer",
                    "x-enumNames": [
                        "USD",
                        "GBP",
                        "JPY",
                        "EUR",
                        "CAD",
                        "AUD",
                        "MXN",
                        "TWD",
                        "CNY",
                        "AFA",
                        "ALL",
                        "DZD",
                        "ADP",
                        "AOA",
                        "ARS",
                        "AMD",
                        "AWG",
                        "AZM",
                        "BSD",
                        "BHD",
                        "BDT",
                        "BBD",
                        "BYR",
                        "BZD",
                        "BMD",
                        "BTN",
                        "INR",
                        "BOV",
                        "BOB",
                        "BAM",
                        "BWP",
                        "BRL",
                        "BND",
                        "BGL",
                        "BGN",
                        "BIF",
                        "KHR",
                        "CVE",
                        "KYD",
                        "XAF",
                        "CLF",
                        "CLP",
                        "COP",
                        "KMF",
                        "CDF",
                        "CRC",
                        "HRK",
                        "CUP",
                        "CYP",
                        "CZK",
                        "DKK",
                        "DJF",
                        "DOP",
                        "TPE",
                        "ECV",
                        "ECS",
                        "EGP",
                        "SVC",
                        "ERN",
                        "EEK",
                        "ETB",
                        "FKP",
                        "FJD",
                        "GMD",
                        "GEL",
                        "GHC",
                        "GIP",
                        "GTQ",
                        "GNF",
                        "GWP",
                        "GYD",
                        "HTG",
                        "HNL",
                        "HKD",
                        "HUF",
                        "ISK",
                        "IDR",
                        "IRR",
                        "IQD",
                        "ILS",
                        "JMD",
                        "JOD",
                        "KZT",
                        "KES",
                        "KPW",
                        "KRW",
                        "KWD",
                        "KGS",
                        "LAK",
                        "LVL",
                        "LBP",
                        "LSL",
                        "LRD",
                        "LYD",
                        "CHF",
                        "LTL",
                        "MOP",
                        "MKD",
                        "MGF",
                        "MWK",
                        "MYR",
                        "MVR",
                        "MTL",
                        "MRO",
                        "MUR",
                        "MXV",
                        "MDL",
                        "MNT",
                        "XCD",
                        "MZM",
                        "MMK",
                        "ZAR",
                        "NAD",
                        "NPR",
                        "ANG",
                        "XPF",
                        "NZD",
                        "NIO",
                        "NGN",
                        "NOK",
                        "OMR",
                        "PKR",
                        "PAB",
                        "PGK",
                        "PYG",
                        "PEN",
                        "PHP",
                        "PLN",
                        "QAR",
                        "ROL",
                        "RUB",
                        "RUR",
                        "RWF",
                        "SHP",
                        "WST",
                        "STD",
                        "SAR",
                        "SCR",
                        "SLL",
                        "SGD",
                        "SKK",
                        "SIT",
                        "SBD",
                        "SOS",
                        "LKR",
                        "SDD",
                        "SRG",
                        "SZL",
                        "SEK",
                        "SYP",
                        "TJS",
                        "TZS",
                        "THB",
                        "XOF",
                        "TOP",
                        "TTD",
                        "TND",
                        "TRL",
                        "TMM",
                        "UGX",
                        "UAH",
                        "AED",
                        "USS",
                        "USN",
                        "UYU",
                        "UZS",
                        "VUV",
                        "VEB",
                        "VND",
                        "MAD",
                        "YER",
                        "YUM",
                        "ZMK",
                        "ZWD",
                        "ATS"
                    ]
                },
                "TrackingNumber": {
                    "type": "string"
                },
                "AllTrackingNumbers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "InvoicePrinted": {
                    "type": "boolean"
                },
                "InvoicePrintedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "CustomerServiceStatus": {
                    "format": "int32",
                    "type": "integer"
                },
                "TaxRate": {
                    "format": "float",
                    "type": "number"
                },
                "TaxTotal": {
                    "format": "float",
                    "type": "number"
                },
                "ShippingWeightTotalOz": {
                    "format": "int32",
                    "type": "integer"
                },
                "CustomerEmail": {
                    "type": "string"
                },
                "ShippingState": {
                    "type": "string"
                },
                "ShippingCountry": {
                    "type": "string"
                },
                "FinalShippingFee": {
                    "format": "float",
                    "type": "number"
                },
                "FinalValueTotal": {
                    "format": "float",
                    "type": "number"
                },
                "ProductIDMostExpensiveInOrder": {
                    "type": "string"
                },
                "EstimatedDeliveryDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "RequireSignatureConfirmation": {
                    "type": "boolean"
                },
                "RelatedOrders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Order.RelatedOrderDto"
                    }
                }
            }
        },
        "CoreWebAdmin.Delta.DetailsEntity.Models.Order.PaymentsHistoryRecord": {
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "TransactionReferenceNumber": {
                    "type": "string"
                },
                "PaidAmount": {
                    "format": "double",
                    "type": "number"
                },
                "PaymentDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "PaymentType": {
                    "format": "int32",
                    "description": " 1 = Information ,  2 = Payment ,  3 = Refund ",
                    "enum": [1, 2, 3],
                    "type": "integer",
                    "x-enumNames": ["Information", "Payment", "Refund"]
                },
                "PaymentMethod": {
                    "format": "int32",
                    "description": " 1 = CreditCard ,  2 = PayPal ,  3 = Check ,  4 = Cash ,  5 = GiftCertificate ,  6 = Other ,  7 = Telephone ,  8 = Email ,  9 = Fax ,  10 = PurchaseOrder ,  11 = Amazon ,  12 = GoogleCheckout ,  13 = Buy_Com ,  14 = NewEgg ,  15 = Magento ,  16 = Sears ,  17 = OverStock ,  18 = NewEggDotCom ,  19 = Wire ,  20 = Wayfair ,  21 = UnbeatableSale ,  22 = VendorCentral ,  23 = Hayneedle ,  24 = CreditMemo ,  25 = SmartBargains ,  26 = uBid ,  27 = ATGStores ,  28 = ThreeDCart ,  29 = StacksAndStacks ,  30 = Cash_On_Delivery ,  31 = WT_Post ,  32 = BestBuy ,  33 = Kohls ,  34 = Staples ,  35 = StoreCoupon ,  36 = OneStopPlus ,  37 = Meijer ,  38 = Sonsi ,  39 = Walmart ,  40 = PriceFall ,  41 = HSN ,  42 = NewEggDotCom_Business ,  43 = KMart ,  44 = Wish ,  45 = SPRichards ,  46 = FingerHut ,  47 = Amazon_Promotional_Discount ,  48 = Barnes_and_Noble ,  49 = Etsy ,  50 = ShopHQ ,  51 = PriceMinister ,  52 = DrugStores ,  53 = MercadoLibre ,  54 = JET ,  55 = ElevenMain ,  56 = Zibby ,  57 = Tanga ,  58 = GrouponMarketplace ,  59 = DebitCard ,  60 = SmartPay ,  61 = BedBathAndBeyond ,  62 = DSW ,  63 = Gilt ,  64 = BestBuyDS ,  65 = Klarna ,  66 = HomeDepot ,  67 = GrouponGateway ,  68 = Cdiscount ,  69 = GoogleExpress ,  70 = Yahoo ,  71 = StripeBankAccount ,  72 = Exchange_Credit ",
                    "enum": [
                        1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
                        22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,
                        41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,
                        60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72
                    ],
                    "type": "integer",
                    "x-enumNames": [
                        "CreditCard",
                        "PayPal",
                        "Check",
                        "Cash",
                        "GiftCertificate",
                        "Other",
                        "Telephone",
                        "Email",
                        "Fax",
                        "PurchaseOrder",
                        "Amazon",
                        "GoogleCheckout",
                        "Buy_Com",
                        "NewEgg",
                        "Magento",
                        "Sears",
                        "OverStock",
                        "NewEggDotCom",
                        "Wire",
                        "Wayfair",
                        "UnbeatableSale",
                        "VendorCentral",
                        "Hayneedle",
                        "CreditMemo",
                        "SmartBargains",
                        "uBid",
                        "ATGStores",
                        "ThreeDCart",
                        "StacksAndStacks",
                        "Cash_On_Delivery",
                        "WT_Post",
                        "BestBuy",
                        "Kohls",
                        "Staples",
                        "StoreCoupon",
                        "OneStopPlus",
                        "Meijer",
                        "Sonsi",
                        "Walmart",
                        "PriceFall",
                        "HSN",
                        "NewEggDotCom_Business",
                        "KMart",
                        "Wish",
                        "SPRichards",
                        "FingerHut",
                        "Amazon_Promotional_Discount",
                        "Barnes_and_Noble",
                        "Etsy",
                        "ShopHQ",
                        "PriceMinister",
                        "DrugStores",
                        "MercadoLibre",
                        "JET",
                        "ElevenMain",
                        "Zibby",
                        "Tanga",
                        "GrouponMarketplace",
                        "DebitCard",
                        "SmartPay",
                        "BedBathAndBeyond",
                        "DSW",
                        "Gilt",
                        "BestBuyDS",
                        "Klarna",
                        "HomeDepot",
                        "GrouponGateway",
                        "Cdiscount",
                        "GoogleExpress",
                        "Yahoo",
                        "StripeBankAccount",
                        "Exchange_Credit"
                    ]
                },
                "PaymentStatus": {
                    "format": "int32",
                    "description": " 0 = Cleared ,  1 = NotCleared ,  2 = Unknown ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["Cleared", "NotCleared", "Unknown"]
                }
            }
        },
        "BVSoftware.BVC.Core.Contacts.Address": {
            "type": "object",
            "properties": {
                "IsShippingAddress": {
                    "type": "boolean"
                },
                "IsBillingAddress": {
                    "type": "boolean"
                },
                "AddressClassification": {
                    "format": "int32",
                    "description": " 0 = None ,  1 = Residential ,  2 = Commercial ,  3 = Other ",
                    "enum": [0, 1, 2, 3],
                    "type": "integer",
                    "x-enumNames": ["None", "Residential", "Commercial", "Other"]
                },
                "Notes": {
                    "type": "string"
                },
                "HomePhone": {
                    "type": "string"
                },
                "EmailAddress": {
                    "type": "string"
                },
                "AddressStatus": {
                    "format": "int32",
                    "description": " 0 = Unknown ,  1 = None ,  2 = Confirmed ,  3 = UnConfirmed ",
                    "enum": [0, 1, 2, 3],
                    "type": "integer",
                    "x-enumNames": ["Unknown", "None", "Confirmed", "UnConfirmed"]
                },
                "AddressSource": {
                    "format": "int32",
                    "description": " 0 = LocalSite ,  1 = eBay ,  2 = Paypal ,  3 = Yahoo ,  4 = Amazon ,  5 = Buy_Com ,  12 = NewEgg ,  15 = Magento ,  16 = Sears ,  17 = CWA ,  18 = Shopify ",
                    "enum": [0, 1, 2, 3, 4, 5, 12, 15, 16, 17, 18],
                    "type": "integer",
                    "x-enumNames": [
                        "LocalSite",
                        "eBay",
                        "Paypal",
                        "Yahoo",
                        "Amazon",
                        "Buy_Com",
                        "NewEgg",
                        "Magento",
                        "Sears",
                        "CWA",
                        "Shopify"
                    ]
                },
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "FirstName": {
                    "type": "string"
                },
                "MiddleInitial": {
                    "type": "string"
                },
                "LastName": {
                    "type": "string"
                },
                "CompanyName": {
                    "type": "string"
                },
                "StreetLine1": {
                    "type": "string"
                },
                "StreetLine2": {
                    "type": "string"
                },
                "City": {
                    "type": "string"
                },
                "StateName": {
                    "type": "string"
                },
                "StateCode": {
                    "type": "string"
                },
                "PostalCode": {
                    "type": "string"
                },
                "CountryName": {
                    "type": "string"
                },
                "CountryCode": {
                    "type": "string"
                },
                "PhoneNumber": {
                    "type": "string"
                },
                "FaxNumber": {
                    "type": "string"
                },
                "WebSiteURL": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Order.MultipleOrderItemDto": {
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "OrderID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ProductID": {
                    "type": "string"
                },
                "Qty": {
                    "format": "int32",
                    "type": "integer"
                },
                "DisplayName": {
                    "type": "string"
                },
                "AdjustedSitePrice": {
                    "format": "double",
                    "type": "number"
                },
                "QtyReturned": {
                    "format": "int32",
                    "type": "integer"
                },
                "QtyShipped": {
                    "format": "int32",
                    "type": "integer"
                },
                "ID1": {
                    "format": "int32",
                    "type": "integer"
                },
                "OrderID1": {
                    "format": "int32",
                    "type": "integer"
                },
                "ProductID1": {
                    "type": "string"
                },
                "Qty1": {
                    "format": "int32",
                    "type": "integer"
                },
                "DisplayName1": {
                    "type": "string"
                },
                "OriginalBasePrice": {
                    "format": "double",
                    "type": "number"
                },
                "SitePrice": {
                    "format": "double",
                    "type": "number"
                },
                "AdjustedSitePrice1": {
                    "format": "double",
                    "type": "number"
                },
                "SiteCost": {
                    "format": "double",
                    "type": "number"
                },
                "TaxExempt": {
                    "format": "int32",
                    "type": "integer"
                },
                "TaxClass": {
                    "format": "int32",
                    "type": "integer"
                },
                "NonShipping": {
                    "format": "int32",
                    "type": "integer"
                },
                "ShipSeparately": {
                    "format": "int32",
                    "type": "integer"
                },
                "DropShipMode": {
                    "format": "int32",
                    "type": "integer"
                },
                "DropShipAddressID": {
                    "format": "int32",
                    "type": "integer"
                },
                "LineTotal": {
                    "format": "double",
                    "type": "number"
                },
                "LineTaxTotal": {
                    "format": "double",
                    "type": "number"
                },
                "StatusCode": {
                    "format": "int32",
                    "type": "integer"
                },
                "Weight": {
                    "format": "double",
                    "type": "number"
                },
                "Length": {
                    "format": "double",
                    "type": "number"
                },
                "Width": {
                    "format": "double",
                    "type": "number"
                },
                "Height": {
                    "format": "double",
                    "type": "number"
                },
                "MinimumQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "DisplayDescription": {
                    "type": "string"
                },
                "ImageURL": {
                    "type": "string"
                },
                "ExtraInformation": {
                    "type": "string"
                },
                "GiftWrap": {
                    "format": "int32",
                    "type": "integer"
                },
                "GiftWrapMessage": {
                    "type": "string"
                },
                "GiftWrapAllowed": {
                    "format": "int32",
                    "type": "integer"
                },
                "InventoryKey": {
                    "type": "string"
                },
                "ShippingCost": {
                    "format": "double",
                    "type": "number"
                },
                "QtyShipped1": {
                    "format": "int32",
                    "type": "integer"
                },
                "QtyReturned1": {
                    "format": "int32",
                    "type": "integer"
                },
                "ParentID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ReferenceID": {
                    "type": "string"
                },
                "eBayTransactionID": {
                    "type": "string"
                },
                "OriginalOrderSourceID": {
                    "type": "string"
                },
                "PostingFee": {
                    "format": "double",
                    "type": "number"
                },
                "FinalValueFee": {
                    "format": "double",
                    "type": "number"
                },
                "IsBackOrder": {
                    "type": "boolean"
                },
                "BackOrderAction": {
                    "format": "int32",
                    "type": "integer"
                },
                "BackOrderActionDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "BackOrderActionBy": {
                    "format": "int32",
                    "type": "integer"
                },
                "EstimatedTimeArrival": {
                    "format": "date-time",
                    "type": "string"
                },
                "ReplacementSKU": {
                    "type": "string"
                },
                "ListingError": {
                    "format": "int32",
                    "type": "integer"
                },
                "FeedBackID": {
                    "type": "string"
                },
                "FeedBackReminderSent": {
                    "format": "date-time",
                    "type": "string"
                },
                "BackOrderQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "BackOrderDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "BackOrderBy": {
                    "format": "int32",
                    "type": "integer"
                },
                "EstimatedShipDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "NotifyCustomerService": {
                    "type": "boolean"
                },
                "NotifyCustomer": {
                    "type": "string"
                },
                "DisputeID": {
                    "type": "string"
                },
                "OriginalSKU": {
                    "type": "string"
                },
                "IsSKUReplaced": {
                    "type": "boolean"
                },
                "InsuranceCost": {
                    "format": "double",
                    "type": "number"
                },
                "FeedbackLeft": {
                    "type": "boolean"
                },
                "FeedbackLeftOn": {
                    "format": "date-time",
                    "type": "string"
                },
                "FeedBackLeftID": {
                    "type": "string"
                },
                "IsDropShipped": {
                    "type": "boolean"
                },
                "DropShippedOn": {
                    "format": "date-time",
                    "type": "string"
                },
                "DropShippedToVendor": {
                    "format": "int32",
                    "type": "integer"
                },
                "Notes": {
                    "type": "string"
                },
                "ProductIDOriginal": {
                    "type": "string"
                },
                "SalesRepId": {
                    "format": "int32",
                    "type": "integer"
                },
                "ShipFromWareHouseID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ShipFromWarehouseName": {
                    "type": "string"
                },
                "FeedBackFailureCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "FeedBackLastFailureOn": {
                    "format": "date-time",
                    "type": "string"
                },
                "FeedBackFailureMessage": {
                    "type": "string"
                },
                "SourceOrderFileName": {
                    "type": "string"
                },
                "eBayItemIDUnique": {
                    "type": "string"
                },
                "eBayTransactionIDUnique": {
                    "type": "string"
                },
                "DontCountInventory": {
                    "type": "boolean"
                },
                "ShippingTax": {
                    "format": "double",
                    "type": "number"
                },
                "GiftWrapTax": {
                    "format": "double",
                    "type": "number"
                },
                "DropShippedVendorOrderID": {
                    "type": "string"
                },
                "GiftWrapType": {
                    "type": "string"
                },
                "GiftWrapCharges": {
                    "format": "double",
                    "type": "number"
                },
                "ShippingCostForAccounting": {
                    "format": "double",
                    "type": "number"
                },
                "ReturnedToWarehouseID": {
                    "format": "int32",
                    "type": "integer"
                },
                "AverageCost": {
                    "format": "double",
                    "type": "number"
                },
                "LastCost": {
                    "format": "double",
                    "type": "number"
                },
                "CreditMemoID": {
                    "format": "int32",
                    "type": "integer"
                },
                "CreditMemoItemID": {
                    "format": "int32",
                    "type": "integer"
                },
                "HasBuyDotCoupon": {
                    "type": "boolean"
                },
                "BuyDotCouponAmount": {
                    "format": "double",
                    "type": "number"
                },
                "DiscountType": {
                    "format": "int32",
                    "type": "integer"
                },
                "DiscountAmount": {
                    "format": "double",
                    "type": "number"
                },
                "DiscountTotal": {
                    "format": "double",
                    "type": "number"
                },
                "QtyRequestedByOrderSource": {
                    "format": "int32",
                    "type": "integer"
                },
                "ProductRebateID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ProductRebateValue": {
                    "format": "double",
                    "type": "number"
                },
                "Purchaser": {
                    "format": "int32",
                    "type": "integer"
                },
                "ShippingSourceOrderItemID": {
                    "type": "string"
                },
                "SalesOutlet": {
                    "type": "string"
                },
                "VariantID": {
                    "format": "int64",
                    "type": "integer"
                },
                "ShippingSourceWarehouseID": {
                    "type": "string"
                },
                "ExportedProductID": {
                    "type": "string"
                },
                "ExportedDocumentNumber": {
                    "type": "string"
                },
                "BatchExportedGUID": {
                    "type": "string"
                },
                "DeliveryDocumentNumber": {
                    "type": "string"
                },
                "BatchExportDeliveryGUID": {
                    "type": "string"
                },
                "SrcUpdatedForItemShipping": {
                    "type": "boolean"
                },
                "SrcUpdatedForItemShippingOn": {
                    "format": "date-time",
                    "type": "string"
                },
                "ShipType": {
                    "type": "string"
                },
                "DropShippedStatus": {
                    "format": "int32",
                    "type": "integer"
                },
                "BatchExportedJobID": {
                    "format": "int32",
                    "type": "integer"
                },
                "BatchExportedDateTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "ItemStatusCode": {
                    "format": "int32",
                    "type": "integer"
                },
                "ItemPaymentStatus": {
                    "format": "int32",
                    "type": "integer"
                },
                "ItemShippingStatus": {
                    "format": "int32",
                    "type": "integer"
                },
                "BatchExportDeliveryJobID": {
                    "format": "int32",
                    "type": "integer"
                },
                "BatchExportDeliveryDateTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "CancellationRequestSentToInnotrac": {
                    "type": "boolean"
                },
                "ShippingSourceCancellationQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "TotalRefunded": {
                    "format": "double",
                    "type": "number"
                },
                "ReturnDocumentNumber": {
                    "type": "string"
                },
                "BatchExportReturnGUID": {
                    "type": "string"
                },
                "BatchExportReturnJobID": {
                    "format": "int32",
                    "type": "integer"
                },
                "BatchExportReturnDateTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "ProfitAndLossAdjustmentTotal": {
                    "format": "double",
                    "type": "number"
                },
                "SalesRecordNumber": {
                    "type": "string"
                },
                "ShippingSourceOrderItemSKU": {
                    "type": "string"
                },
                "QtyPerCase": {
                    "format": "int32",
                    "type": "integer"
                },
                "TotalCases": {
                    "format": "int32",
                    "type": "integer"
                },
                "PricePerCase": {
                    "format": "double",
                    "type": "number"
                },
                "QtyPicked": {
                    "format": "int32",
                    "type": "integer"
                },
                "ProductIDRequested": {
                    "type": "string"
                },
                "WholesaleConfirmedQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "WholesaleConfirmShipDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "WholesaleBackOrderQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "WholesaleBackOrderShipDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "WholesaleRefuseQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "KitItemsCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "VatRate": {
                    "format": "double",
                    "type": "number"
                },
                "VATTotal": {
                    "format": "double",
                    "type": "number"
                },
                "AmazonShipmentID": {
                    "type": "string"
                },
                "WarehouseBinCartSlotID": {
                    "format": "int32",
                    "type": "integer"
                },
                "SettlementID": {
                    "format": "int32",
                    "type": "integer"
                },
                "RoundNumber": {
                    "format": "int32",
                    "type": "integer"
                },
                "WarehouseBinCartID": {
                    "format": "int32",
                    "type": "integer"
                },
                "MainItemID": {
                    "type": "string"
                },
                "LinkedToPOItemID": {
                    "format": "int32",
                    "type": "integer"
                },
                "OrderItemShipDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "ProductName": {
                    "type": "string"
                },
                "InventoryAvailableQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "LocationNotes": {
                    "type": "string"
                },
                "ShadowOf": {
                    "type": "string"
                },
                "DefaultVendorName": {
                    "type": "string"
                },
                "BundleItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Order.MultipleOrderItemBundleItemDto"
                    }
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Order.RelatedOrderDto": {
            "type": "object",
            "properties": {
                "RelatedOrderID": {
                    "format": "int32",
                    "type": "integer"
                },
                "RelationshipType": {
                    "format": "int32",
                    "description": " 0 = Unknown ,  1 = Parent ,  2 = Child ,  3 = Related ,  4 = SplitFrom ,  5 = SplitTo ",
                    "enum": [0, 1, 2, 3, 4, 5],
                    "type": "integer",
                    "x-enumNames": ["Unknown", "Parent", "Child", "Related", "SplitFrom", "SplitTo"]
                },
                "CreatedOn": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Order.MultipleOrderItemBundleItemDto": {
            "type": "object",
            "properties": {
                "ID": {
                    "format": "double",
                    "type": "number"
                },
                "ParentID": {
                    "format": "double",
                    "type": "number"
                },
                "OrderItemId": {
                    "format": "int32",
                    "type": "integer"
                },
                "OrderID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ProductID": {
                    "type": "string"
                },
                "Qty": {
                    "format": "int32",
                    "type": "integer"
                },
                "QtyReturned": {
                    "format": "int32",
                    "type": "integer"
                },
                "IsPackageGenerated": {
                    "type": "boolean"
                },
                "IsBackOrder": {
                    "type": "boolean"
                },
                "BackOrderAction": {
                    "format": "int32",
                    "type": "integer"
                },
                "BackOrderActionDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "BackOrderActionBy": {
                    "format": "int32",
                    "type": "integer"
                },
                "BackOrderQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "BackOrderDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "BackOrderBy": {
                    "format": "int32",
                    "type": "integer"
                },
                "TotalQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "ReturnedToWarehouseID": {
                    "format": "int32",
                    "type": "integer"
                },
                "SiteCost": {
                    "format": "double",
                    "type": "number"
                },
                "LastCost": {
                    "format": "double",
                    "type": "number"
                },
                "AverageCost": {
                    "format": "double",
                    "type": "number"
                },
                "ProductRebateID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ProductRebateValue": {
                    "format": "double",
                    "type": "number"
                },
                "ShippingSourceOrderItemID": {
                    "type": "string"
                },
                "ShippingSourceWarehouseID": {
                    "type": "string"
                },
                "QtyPicked": {
                    "format": "int32",
                    "type": "integer"
                },
                "ReplacementSKU": {
                    "type": "string"
                },
                "IsSKUReplaced": {
                    "type": "boolean"
                },
                "WarehouseBinCartSlotID": {
                    "format": "int32",
                    "type": "integer"
                },
                "RoundNumber": {
                    "format": "int32",
                    "type": "integer"
                },
                "WarehouseBinCartID": {
                    "format": "int32",
                    "type": "integer"
                },
                "LinkedToPOItemID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ProductName": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.Details.Concrete.Order.GenerateWayToPayLinkResponse": {
            "type": "object",
            "properties": {
                "OrderID": {
                    "format": "int32",
                    "type": "integer"
                },
                "TinyUrl": {
                    "type": "string"
                },
                "Error": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.Details.Concrete.Order.ShippingStatus.UpdateShippingStatusRequest": {
            "required": ["ShippingCarrier", "ShippingService"],
            "type": "object",
            "properties": {
                "OrderID": {
                    "format": "int32",
                    "description": "ID of the order",
                    "type": "integer"
                },
                "ShippingCarrier": {
                    "description": "Shipping carrier",
                    "type": "string"
                },
                "ShippingService": {
                    "description": "Shipping service",
                    "type": "string"
                },
                "ShipFromWarehouseID": {
                    "format": "int32",
                    "description": "ID of warehouse to ship from",
                    "type": "integer"
                },
                "DeclaredValue": {
                    "format": "double",
                    "type": "number"
                },
                "ShipDate": {
                    "format": "date-time",
                    "description": "Date of shipping",
                    "type": "string"
                },
                "TrackingNumber": {
                    "type": "string"
                },
                "ShippingCost": {
                    "format": "double",
                    "type": "number"
                },
                "Width": {
                    "format": "double",
                    "type": "number"
                },
                "Height": {
                    "format": "double",
                    "type": "number"
                },
                "Length": {
                    "format": "double",
                    "type": "number"
                },
                "Weight": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Order.UpdateSerialNumbersRequest": {
            "type": "object",
            "properties": {
                "Items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Order.OrderSerialNumber"
                    }
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Order.OrderSerialNumber": {
            "type": "object",
            "properties": {
                "OrderID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ProductID": {
                    "type": "string"
                },
                "SerialNumber": {
                    "type": "string"
                },
                "OrderItemID": {
                    "format": "int32",
                    "type": "integer"
                },
                "KitItemID": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.Notes.OrderNoteDto": {
            "type": "object",
            "properties": {
                "EntityID": {
                    "format": "int32",
                    "type": "integer"
                },
                "Category": {
                    "format": "int32",
                    "description": " 0 = General ,  1 = Customer_Instructions ,  2 = Customer_Service_Note ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["General", "Customer_Instructions", "Customer_Service_Note"]
                },
                "NoteID": {
                    "format": "int32",
                    "type": "integer"
                },
                "Note": {
                    "type": "string"
                },
                "AuditDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "CreatedBy": {
                    "format": "int32",
                    "type": "integer"
                },
                "CreatedByName": {
                    "type": "string"
                },
                "CreatedByEmail": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Order.NoteDto": {
            "type": "object",
            "properties": {
                "Message": {
                    "type": "string"
                },
                "Category": {
                    "format": "int32",
                    "description": " 0 = General ,  1 = Customer_Instructions ,  2 = Customer_Service_Note ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["General", "Customer_Instructions", "Customer_Service_Note"]
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Order.GetCustomColumnsRequest": {
            "type": "object",
            "properties": {
                "OrderIDs": {
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Order.CustomColumnOrderResponseDto": {
            "type": "object",
            "properties": {
                "OrderID": {
                    "format": "int32",
                    "type": "integer"
                },
                "CustomColumns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Order.CustomColumnDto"
                    }
                }
            }
        },
        "SellerCloud.Delta.Models.Details.Concrete.Order.ShippingStatus.UpdateSinglePackageShippingStatusRequest": {
            "type": "object",
            "properties": {
                "OrderID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ShipDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "TrackingNumber": {
                    "type": "string"
                },
                "ShippingCost": {
                    "format": "double",
                    "type": "number"
                },
                "PackageID": {
                    "format": "int32",
                    "type": "integer"
                },
                "CarrierName": {
                    "type": "string"
                },
                "ShippingMethod": {
                    "type": "string"
                },
                "WarehouseID": {
                    "format": "int32",
                    "type": "integer"
                },
                "Length": {
                    "format": "double",
                    "type": "number"
                },
                "Width": {
                    "format": "double",
                    "type": "number"
                },
                "Height": {
                    "format": "double",
                    "type": "number"
                },
                "Weight": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Order.UnshipOrderDto": {
            "required": ["Orders"],
            "type": "object",
            "properties": {
                "Orders": {
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "PIN": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.Details.Concrete.Order.ShippingStatus.UpdateOrdersAsExportedRequest": {
            "required": ["Orders", "Exported"],
            "type": "object",
            "properties": {
                "Orders": {
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "Exported": {
                    "type": "boolean"
                }
            }
        },
        "SellerCloud.Delta.Models.Details.Concrete.Order.UpdateQBExportStatusRequest": {
            "type": "object",
            "properties": {
                "OrderIDs": {
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "Exported": {
                    "type": "boolean"
                }
            }
        },
        "SellerCloud.Delta.Models.Details.Concrete.Order.ShippingStatus.UpdateOrdersStatusCodeRequest": {
            "required": ["Orders", "Status"],
            "type": "object",
            "properties": {
                "Orders": {
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "Status": {
                    "format": "int32",
                    "description": " 1 = ShoppingCart ,  2 = InProcess ,  3 = Completed ,  100 = ProblemOrder ,  200 = OnHold ,  300 = Quote ,  999 = Void ,  -1 = Canceled ",
                    "enum": [1, 2, 3, 100, 200, 300, 999, -1],
                    "type": "integer",
                    "x-enumNames": [
                        "ShoppingCart",
                        "InProcess",
                        "Completed",
                        "ProblemOrder",
                        "OnHold",
                        "Quote",
                        "Void",
                        "Canceled"
                    ]
                }
            }
        },
        "SellerCloud.Delta.Models.Details.Concrete.Order.ShippingStatus.OrderIdsRequest": {
            "required": ["Orders"],
            "type": "object",
            "properties": {
                "Orders": {
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            }
        },
        "SellerCloud.Delta.Models.Details.Concrete.Order.ShippingStatus.UpdateOrdersDropShipRequest": {
            "required": ["Orders", "DropshipStatus"],
            "type": "object",
            "properties": {
                "Orders": {
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "DropshipStatus": {
                    "format": "int32",
                    "description": " 0 = None ,  1 = Pending ,  2 = Requested ,  3 = Acknowledged ,  4 = Processed ,  5 = PartialProcessed ,  6 = Cancelled ,  7 = Invalid ",
                    "enum": [0, 1, 2, 3, 4, 5, 6, 7],
                    "type": "integer",
                    "x-enumNames": [
                        "None",
                        "Pending",
                        "Requested",
                        "Acknowledged",
                        "Processed",
                        "PartialProcessed",
                        "Cancelled",
                        "Invalid"
                    ]
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Order.UploadDocumentRequest": {
            "required": ["FileContent", "FileName"],
            "type": "object",
            "properties": {
                "FileContent": {
                    "type": "string"
                },
                "FileName": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.Details.Concrete.Order.OrderSplitStatusDto": {
            "type": "object",
            "properties": {
                "IsSplitted": {
                    "type": "boolean"
                },
                "IsChildOrder": {
                    "type": "boolean"
                },
                "ChildOrderIDs": {
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "ParrentOrderID": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Order.GetProfitAndLossRequest": {
            "type": "object",
            "properties": {
                "Orders": {
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            }
        },
        "SellerCloud.Delta.Models.Details.Concrete.Order.Commissions.OrderProfitAndLossDataDto": {
            "type": "object",
            "properties": {
                "OrderItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CoreWebAdmin.Delta.DetailsEntity.Models.Order.ProfitAndLossDetailDto"
                    }
                },
                "OrderID": {
                    "format": "int32",
                    "type": "integer"
                },
                "PaymentStatus": {
                    "format": "int32",
                    "description": " 10 = NoPayment ,  20 = Authorized ,  30 = Charged ,  40 = Uncleared ,  50 = PartiallyRefund ,  60 = FullRefund ,  70 = PartialPayment ,  80 = eBayPaid ,  99 = PaymentError ",
                    "enum": [10, 20, 30, 40, 50, 60, 70, 80, 99],
                    "type": "integer",
                    "x-enumNames": [
                        "NoPayment",
                        "Authorized",
                        "Charged",
                        "Uncleared",
                        "PartiallyRefund",
                        "FullRefund",
                        "PartialPayment",
                        "eBayPaid",
                        "PaymentError"
                    ]
                },
                "ShippingStatus": {
                    "format": "int32",
                    "description": " 0 = Unknown ,  1 = Unshipped ,  2 = PartiallyShipped ,  3 = FullyShipped ,  4 = ReadyForPickup ",
                    "enum": [0, 1, 2, 3, 4],
                    "type": "integer",
                    "x-enumNames": [
                        "Unknown",
                        "Unshipped",
                        "PartiallyShipped",
                        "FullyShipped",
                        "ReadyForPickup"
                    ]
                },
                "ShipDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "Channel": {
                    "format": "int32",
                    "description": " 0 = Local_Store ,  1 = eBayOrder ,  2 = eBaySingleItem ,  3 = Yahoo ,  4 = Amazon ,  5 = PriceGrabber ,  6 = Website ,  7 = Buy ,  12 = NewEggMall ,  15 = Magento ,  16 = QuickBooks ,  17 = RMS ,  18 = Cart32 ,  19 = Sears ,  20 = FBA ,  21 = Wholesale ,  22 = Overstock ,  23 = NewEggdotcom ,  24 = Etsy ,  25 = Bonanza ,  26 = PriceFalls ,  27 = Wayfair ,  28 = UnbeatableSale ,  29 = VendorCentral ,  30 = Hayneedle ,  31 = SmartBargains ,  32 = uBid ,  33 = ATGStores ,  34 = StacksAndStacks ,  35 = Sharkstores ,  36 = BestBuy ,  37 = Kohls ,  38 = Staples ,  39 = OneStopPlus ,  40 = Meijer ,  41 = Sonsi ,  42 = Walmart ,  43 = HSN ,  44 = NewEgg_Business ,  45 = KMart ,  46 = Wish ,  47 = SPRichards ,  48 = FingerHut ,  49 = Groupon ,  50 = Walmart_Marketplace ,  51 = ShopHQ ,  52 = PriceMinister ,  53 = GS ,  54 = DrugStore ,  55 = MercadoLibre ,  56 = JET ,  57 = ElevenMain ,  58 = SearsVendor ,  59 = Choxi ,  60 = TradeMe ,  61 = Tanga ,  62 = Target ,  63 = GrouponMarketplace ,  64 = Reverb ,  65 = BedBathAndBeyond ,  66 = Dropship_Central ,  67 = DSW ,  68 = Houzz ,  69 = Gilt ,  70 = BestBuyDS ,  71 = TopHatter ,  72 = HomeDepot ,  73 = MassGenie ,  74 = Cdiscount ,  75 = GrouponGateway ,  76 = SBN ,  77 = GoogleExpress ,  78 = Target_Plus ,  79 = WFS ",
                    "enum": [
                        0, 1, 2, 3, 4, 5, 6, 7, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,
                        27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45,
                        46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64,
                        65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79
                    ],
                    "type": "integer",
                    "x-enumNames": [
                        "Local_Store",
                        "eBayOrder",
                        "eBaySingleItem",
                        "Yahoo",
                        "Amazon",
                        "PriceGrabber",
                        "Website",
                        "Buy",
                        "NewEggMall",
                        "Magento",
                        "QuickBooks",
                        "RMS",
                        "Cart32",
                        "Sears",
                        "FBA",
                        "Wholesale",
                        "Overstock",
                        "NewEggdotcom",
                        "Etsy",
                        "Bonanza",
                        "PriceFalls",
                        "Wayfair",
                        "UnbeatableSale",
                        "VendorCentral",
                        "Hayneedle",
                        "SmartBargains",
                        "uBid",
                        "ATGStores",
                        "StacksAndStacks",
                        "Sharkstores",
                        "BestBuy",
                        "Kohls",
                        "Staples",
                        "OneStopPlus",
                        "Meijer",
                        "Sonsi",
                        "Walmart",
                        "HSN",
                        "NewEgg_Business",
                        "KMart",
                        "Wish",
                        "SPRichards",
                        "FingerHut",
                        "Groupon",
                        "Walmart_Marketplace",
                        "ShopHQ",
                        "PriceMinister",
                        "GS",
                        "DrugStore",
                        "MercadoLibre",
                        "JET",
                        "ElevenMain",
                        "SearsVendor",
                        "Choxi",
                        "TradeMe",
                        "Tanga",
                        "Target",
                        "GrouponMarketplace",
                        "Reverb",
                        "BedBathAndBeyond",
                        "Dropship_Central",
                        "DSW",
                        "Houzz",
                        "Gilt",
                        "BestBuyDS",
                        "TopHatter",
                        "HomeDepot",
                        "MassGenie",
                        "Cdiscount",
                        "GrouponGateway",
                        "SBN",
                        "GoogleExpress",
                        "Target_Plus",
                        "WFS"
                    ]
                },
                "CustomerID": {
                    "format": "int32",
                    "type": "integer"
                },
                "IsTaxCollectedByMarketplace": {
                    "type": "boolean"
                },
                "SettlementDataAvailable": {
                    "type": "boolean"
                },
                "ItemCost": {
                    "type": "string"
                },
                "ItemCostUsd": {
                    "type": "string"
                },
                "PostingFee": {
                    "type": "string"
                },
                "PostingFeeUsd": {
                    "type": "string"
                },
                "Comission": {
                    "type": "string"
                },
                "ComissionUsd": {
                    "type": "string"
                },
                "TransportationFee": {
                    "type": "string"
                },
                "TransactionFee": {
                    "type": "string"
                },
                "TransactionFeeUsd": {
                    "type": "string"
                },
                "ShippingCost": {
                    "type": "string"
                },
                "ShippingCostUsd": {
                    "type": "string"
                },
                "FbaOrderHandling": {
                    "type": "string"
                },
                "FbaPickAndPack": {
                    "type": "string"
                },
                "FbaShippingChargeback": {
                    "type": "string"
                },
                "FbaGiftWrapChargeback": {
                    "type": "string"
                },
                "FbaWeightHandling": {
                    "type": "string"
                },
                "Tax": {
                    "type": "string"
                },
                "TaxUsd": {
                    "type": "string"
                },
                "Promotion": {
                    "type": "string"
                },
                "PromotionUsd": {
                    "type": "string"
                },
                "Rebates": {
                    "type": "string"
                },
                "RebatesUsd": {
                    "type": "string"
                },
                "OrderCost": {
                    "type": "string"
                },
                "OrderCostUsd": {
                    "type": "string"
                },
                "Payments": {
                    "type": "string"
                },
                "PaymentsUsd": {
                    "type": "string"
                },
                "Adjustments": {
                    "type": "string"
                },
                "AdjustmentsUsd": {
                    "type": "string"
                },
                "DropShipFee": {
                    "type": "string"
                },
                "DropShipFeeUsd": {
                    "type": "string"
                },
                "ShippingClaim": {
                    "type": "string"
                },
                "ProfitLoss": {
                    "type": "string"
                },
                "ProfitLossPercentage": {
                    "type": "string"
                },
                "ProfitLossUsd": {
                    "type": "string"
                },
                "ProfitLossForParentOrder": {
                    "type": "string"
                },
                "QbExported": {
                    "type": "boolean"
                },
                "CurrencyCode": {
                    "format": "int32",
                    "description": " 0 = USD ,  1 = GBP ,  2 = JPY ,  3 = EUR ,  4 = CAD ,  5 = AUD ,  6 = MXN ,  7 = TWD ,  8 = CNY ,  9 = AFA ,  10 = ALL ,  11 = DZD ,  12 = ADP ,  13 = AOA ,  14 = ARS ,  15 = AMD ,  16 = AWG ,  17 = AZM ,  18 = BSD ,  19 = BHD ,  20 = BDT ,  21 = BBD ,  22 = BYR ,  23 = BZD ,  24 = BMD ,  25 = BTN ,  26 = INR ,  27 = BOV ,  28 = BOB ,  29 = BAM ,  30 = BWP ,  31 = BRL ,  32 = BND ,  33 = BGL ,  34 = BGN ,  35 = BIF ,  36 = KHR ,  37 = CVE ,  38 = KYD ,  39 = XAF ,  40 = CLF ,  41 = CLP ,  42 = COP ,  43 = KMF ,  44 = CDF ,  45 = CRC ,  46 = HRK ,  47 = CUP ,  48 = CYP ,  49 = CZK ,  50 = DKK ,  51 = DJF ,  52 = DOP ,  53 = TPE ,  54 = ECV ,  55 = ECS ,  56 = EGP ,  57 = SVC ,  58 = ERN ,  59 = EEK ,  60 = ETB ,  61 = FKP ,  62 = FJD ,  63 = GMD ,  64 = GEL ,  65 = GHC ,  66 = GIP ,  67 = GTQ ,  68 = GNF ,  69 = GWP ,  70 = GYD ,  71 = HTG ,  72 = HNL ,  73 = HKD ,  74 = HUF ,  75 = ISK ,  76 = IDR ,  77 = IRR ,  78 = IQD ,  79 = ILS ,  80 = JMD ,  81 = JOD ,  82 = KZT ,  83 = KES ,  84 = KPW ,  85 = KRW ,  86 = KWD ,  87 = KGS ,  88 = LAK ,  89 = LVL ,  90 = LBP ,  91 = LSL ,  92 = LRD ,  93 = LYD ,  94 = CHF ,  95 = LTL ,  96 = MOP ,  97 = MKD ,  98 = MGF ,  99 = MWK ,  100 = MYR ,  101 = MVR ,  102 = MTL ,  103 = MRO ,  104 = MUR ,  105 = MXV ,  106 = MDL ,  107 = MNT ,  108 = XCD ,  109 = MZM ,  110 = MMK ,  111 = ZAR ,  112 = NAD ,  113 = NPR ,  114 = ANG ,  115 = XPF ,  116 = NZD ,  117 = NIO ,  118 = NGN ,  119 = NOK ,  120 = OMR ,  121 = PKR ,  122 = PAB ,  123 = PGK ,  124 = PYG ,  125 = PEN ,  126 = PHP ,  127 = PLN ,  128 = QAR ,  129 = ROL ,  130 = RUB ,  131 = RUR ,  132 = RWF ,  133 = SHP ,  134 = WST ,  135 = STD ,  136 = SAR ,  137 = SCR ,  138 = SLL ,  139 = SGD ,  140 = SKK ,  141 = SIT ,  142 = SBD ,  143 = SOS ,  144 = LKR ,  145 = SDD ,  146 = SRG ,  147 = SZL ,  148 = SEK ,  149 = SYP ,  150 = TJS ,  151 = TZS ,  152 = THB ,  153 = XOF ,  154 = TOP ,  155 = TTD ,  156 = TND ,  157 = TRL ,  158 = TMM ,  159 = UGX ,  160 = UAH ,  161 = AED ,  162 = USS ,  163 = USN ,  164 = UYU ,  165 = UZS ,  166 = VUV ,  167 = VEB ,  168 = VND ,  169 = MAD ,  170 = YER ,  171 = YUM ,  172 = ZMK ,  173 = ZWD ,  174 = ATS ",
                    "enum": [
                        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
                        21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
                        40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,
                        59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
                        78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
                        97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112,
                        113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
                        128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
                        143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
                        158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
                        173, 174
                    ],
                    "type": "integer",
                    "x-enumNames": [
                        "USD",
                        "GBP",
                        "JPY",
                        "EUR",
                        "CAD",
                        "AUD",
                        "MXN",
                        "TWD",
                        "CNY",
                        "AFA",
                        "ALL",
                        "DZD",
                        "ADP",
                        "AOA",
                        "ARS",
                        "AMD",
                        "AWG",
                        "AZM",
                        "BSD",
                        "BHD",
                        "BDT",
                        "BBD",
                        "BYR",
                        "BZD",
                        "BMD",
                        "BTN",
                        "INR",
                        "BOV",
                        "BOB",
                        "BAM",
                        "BWP",
                        "BRL",
                        "BND",
                        "BGL",
                        "BGN",
                        "BIF",
                        "KHR",
                        "CVE",
                        "KYD",
                        "XAF",
                        "CLF",
                        "CLP",
                        "COP",
                        "KMF",
                        "CDF",
                        "CRC",
                        "HRK",
                        "CUP",
                        "CYP",
                        "CZK",
                        "DKK",
                        "DJF",
                        "DOP",
                        "TPE",
                        "ECV",
                        "ECS",
                        "EGP",
                        "SVC",
                        "ERN",
                        "EEK",
                        "ETB",
                        "FKP",
                        "FJD",
                        "GMD",
                        "GEL",
                        "GHC",
                        "GIP",
                        "GTQ",
                        "GNF",
                        "GWP",
                        "GYD",
                        "HTG",
                        "HNL",
                        "HKD",
                        "HUF",
                        "ISK",
                        "IDR",
                        "IRR",
                        "IQD",
                        "ILS",
                        "JMD",
                        "JOD",
                        "KZT",
                        "KES",
                        "KPW",
                        "KRW",
                        "KWD",
                        "KGS",
                        "LAK",
                        "LVL",
                        "LBP",
                        "LSL",
                        "LRD",
                        "LYD",
                        "CHF",
                        "LTL",
                        "MOP",
                        "MKD",
                        "MGF",
                        "MWK",
                        "MYR",
                        "MVR",
                        "MTL",
                        "MRO",
                        "MUR",
                        "MXV",
                        "MDL",
                        "MNT",
                        "XCD",
                        "MZM",
                        "MMK",
                        "ZAR",
                        "NAD",
                        "NPR",
                        "ANG",
                        "XPF",
                        "NZD",
                        "NIO",
                        "NGN",
                        "NOK",
                        "OMR",
                        "PKR",
                        "PAB",
                        "PGK",
                        "PYG",
                        "PEN",
                        "PHP",
                        "PLN",
                        "QAR",
                        "ROL",
                        "RUB",
                        "RUR",
                        "RWF",
                        "SHP",
                        "WST",
                        "STD",
                        "SAR",
                        "SCR",
                        "SLL",
                        "SGD",
                        "SKK",
                        "SIT",
                        "SBD",
                        "SOS",
                        "LKR",
                        "SDD",
                        "SRG",
                        "SZL",
                        "SEK",
                        "SYP",
                        "TJS",
                        "TZS",
                        "THB",
                        "XOF",
                        "TOP",
                        "TTD",
                        "TND",
                        "TRL",
                        "TMM",
                        "UGX",
                        "UAH",
                        "AED",
                        "USS",
                        "USN",
                        "UYU",
                        "UZS",
                        "VUV",
                        "VEB",
                        "VND",
                        "MAD",
                        "YER",
                        "YUM",
                        "ZMK",
                        "ZWD",
                        "ATS"
                    ]
                },
                "FirstSalesRep": {
                    "type": "string"
                },
                "SecondSalesRep": {
                    "type": "string"
                },
                "ThirdSalesRep": {
                    "type": "string"
                }
            }
        },
        "CoreWebAdmin.Delta.DetailsEntity.Models.Order.ProfitAndLossDetailDto": {
            "type": "object",
            "properties": {
                "ProductID": {
                    "type": "string"
                },
                "QtySold": {
                    "format": "int32",
                    "type": "integer"
                },
                "OrderUnitSiteCost": {
                    "format": "double",
                    "type": "number"
                },
                "OrderSiteCost": {
                    "format": "double",
                    "type": "number"
                },
                "ProductUnitSiteCost": {
                    "format": "double",
                    "type": "number"
                },
                "ProductSiteCost": {
                    "format": "double",
                    "type": "number"
                },
                "SellingPrice": {
                    "format": "double",
                    "type": "number"
                },
                "RefundTotal": {
                    "format": "double",
                    "type": "number"
                },
                "ChannelCommission": {
                    "format": "double",
                    "type": "number"
                },
                "TransactionFee": {
                    "format": "double",
                    "type": "number"
                },
                "FinalCostTotal": {
                    "format": "double",
                    "type": "number"
                },
                "Profit": {
                    "format": "double",
                    "type": "number"
                },
                "ProfitPercent": {
                    "format": "double",
                    "type": "number"
                },
                "ProductIDRequested": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.WebApi.Models.ClientApi.Order.CreateOrderItemRequestModel": {
            "required": ["ProductID", "Qty"],
            "type": "object",
            "properties": {
                "ProductID": {
                    "type": "string"
                },
                "ProductName": {
                    "type": "string"
                },
                "SitePrice": {
                    "format": "double",
                    "type": "number"
                },
                "DiscountValue": {
                    "format": "double",
                    "type": "number"
                },
                "DiscountType": {
                    "format": "int32",
                    "description": " 0 = FixedAmount ,  1 = Percentage ",
                    "enum": [0, 1],
                    "type": "integer",
                    "x-enumNames": ["FixedAmount", "Percentage"]
                },
                "Qty": {
                    "format": "int32",
                    "type": "integer"
                },
                "LineTaxTotal": {
                    "format": "float",
                    "type": "number"
                },
                "FinalValueFee": {
                    "format": "double",
                    "type": "number"
                },
                "ReferenceID": {
                    "type": "string"
                },
                "Notes": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.WebApi.Models.ClientApi.Order.UpdateOrderItemRequestModel": {
            "required": ["OrderItemID"],
            "type": "object",
            "properties": {
                "OrderItemID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ProductID": {
                    "type": "string"
                },
                "ProductName": {
                    "type": "string"
                },
                "SitePrice": {
                    "format": "double",
                    "type": "number"
                },
                "DiscountValue": {
                    "format": "double",
                    "type": "number"
                },
                "DiscountType": {
                    "format": "int32",
                    "description": " 0 = FixedAmount ,  1 = Percentage ",
                    "enum": [0, 1],
                    "type": "integer",
                    "x-enumNames": ["FixedAmount", "Percentage"]
                },
                "Qty": {
                    "format": "int32",
                    "type": "integer"
                },
                "WarehouseID": {
                    "format": "int32",
                    "type": "integer"
                },
                "Notes": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Order.PrintPdfInvoiceRequest": {
            "type": "object",
            "properties": {
                "OrderIDs": {
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Order.CreateReplacementOrderRequest": {
            "required": ["OrderID", "ReasonID"],
            "type": "object",
            "properties": {
                "OrderID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ReasonID": {
                    "format": "int32",
                    "type": "integer"
                },
                "AdditionalNote": {
                    "type": "string"
                },
                "DisableInventoryCount": {
                    "type": "boolean"
                },
                "SecurityPin": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Order.CreateReplacementOrderResponse": {
            "type": "object",
            "properties": {
                "ReplacementOrderID": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Order.SingleOrderDataDto": {
            "type": "object",
            "properties": {
                "OrderID": {
                    "format": "int32",
                    "type": "integer"
                },
                "OrderDetails": {
                    "$ref": "#/definitions/CoreWebAdmin.Delta.DetailsEntity.Models.Order.OrderDetailsContent"
                },
                "Statuses": {
                    "$ref": "#/definitions/SellerCloud.Delta.Models.Details.Concrete.Order.OrderStatusesDto"
                },
                "OrderItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CoreWebAdmin.Delta.DetailsEntity.Models.Order.OrderItemDto"
                    }
                },
                "RelatedOrders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Order.RelatedOrderDto"
                    }
                },
                "TotalInfo": {
                    "$ref": "#/definitions/SellerCloud.Delta.Models.Details.Concrete.Order.OrderTotalInfoContent"
                },
                "PaymentOptions": {
                    "$ref": "#/definitions/CoreWebAdmin.Delta.DetailsEntity.Models.Order.PaymentOptionsContent"
                },
                "ShippingDetails": {
                    "$ref": "#/definitions/CoreWebAdmin.Delta.DetailsEntity.Models.Order.ShippingDetailsDto"
                },
                "OrderPackages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.Details.Concrete.Order.OrderPackageDto"
                    }
                },
                "LastUpdated": {
                    "format": "date-time",
                    "type": "string"
                },
                "OrderSiteCode": {
                    "type": "string"
                },
                "OrderItemDiscountAllowed": {
                    "type": "boolean"
                },
                "EnableCaseQty": {
                    "type": "boolean"
                },
                "ShowProductImageOnOrderDetailPage": {
                    "type": "boolean"
                },
                "HideBackOrdersColumnInManageOrders": {
                    "type": "boolean"
                },
                "DisplayLocationNotesOnOrderItemsGrid": {
                    "type": "boolean"
                },
                "EnableWarehouseBins": {
                    "type": "boolean"
                },
                "EnableSecondSalesRep": {
                    "type": "boolean"
                },
                "RmaID": {
                    "format": "int32",
                    "type": "integer"
                },
                "IsWholeSaleOrder": {
                    "type": "boolean"
                },
                "MostExpensiveSKU": {
                    "type": "string"
                },
                "RequirePinToSetCancelledOrdersToInProcess": {
                    "type": "boolean"
                },
                "ForceEnterCommentsWhenSettingOrderToOnHoldOrProblem": {
                    "type": "boolean"
                },
                "ShippingAddress": {
                    "$ref": "#/definitions/BVSoftware.BVC.Core.Contacts.Address"
                },
                "BillingAddress": {
                    "$ref": "#/definitions/BVSoftware.BVC.Core.Contacts.Address"
                },
                "StoreType": {
                    "format": "int32",
                    "description": " 0 = Not_Specified ,  1 = Magento ,  2 = nsCommerce ,  3 = Froobie ,  4 = PriceFalls ,  5 = ProStores ,  6 = SMDC ,  7 = Yugster ,  8 = Unbeatable ,  9 = Volusion ,  10 = Spree ,  11 = SellerCloud ,  12 = ThreeDCart ,  14 = Shopify ,  15 = ASPDotNetStoreFront ,  99 = Custom ",
                    "enum": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 99],
                    "type": "integer",
                    "x-enumNames": [
                        "Not_Specified",
                        "Magento",
                        "nsCommerce",
                        "Froobie",
                        "PriceFalls",
                        "ProStores",
                        "SMDC",
                        "Yugster",
                        "Unbeatable",
                        "Volusion",
                        "Spree",
                        "SellerCloud",
                        "ThreeDCart",
                        "Shopify",
                        "ASPDotNetStoreFront",
                        "Custom"
                    ]
                },
                "Payments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CoreWebAdmin.Delta.DetailsEntity.Models.Order.PaymentsHistoryRecord"
                    }
                },
                "ProfitAndLoss": {
                    "$ref": "#/definitions/CoreWebAdmin.Delta.DetailsEntity.Models.Order.ProfitAndLossBaseDataDto"
                },
                "CustomColumns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.CustomColumns.CustomColumnBaseDto"
                    }
                },
                "GiftDetails": {
                    "$ref": "#/definitions/SellerCloud.Delta.Models.Details.Concrete.Order.ManageGifts.ManageGiftsDto"
                },
                "RequireSignatureConfirmation": {
                    "type": "boolean"
                }
            }
        },
        "CoreWebAdmin.Delta.DetailsEntity.Models.Order.OrderDetailsContent": {
            "type": "object",
            "properties": {
                "CompanyId": {
                    "format": "int32",
                    "type": "integer"
                },
                "ClientId": {
                    "format": "int32",
                    "type": "integer"
                },
                "SiteCode": {
                    "format": "int32",
                    "description": " 0 = US ,  1 = Canada ,  2 = UK ,  3 = Australia ,  4 = Austria ,  5 = Belgium_French ,  6 = France ,  7 = Germany ,  8 = Italy ,  9 = Belgium_Dutch ,  10 = Netherlands ,  11 = Spain ,  12 = Switzerland ,  13 = Taiwan ,  14 = eBayMotors ,  15 = HongKong ,  16 = Singapore ,  17 = India ,  18 = China ,  19 = Ireland ,  20 = Malaysia ,  21 = Philippines ,  22 = Poland ,  23 = Sweden ,  24 = CustomCode ,  25 = CanadaFrench ,  26 = Russia ",
                    "enum": [
                        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
                        21, 22, 23, 24, 25, 26
                    ],
                    "type": "integer",
                    "x-enumNames": [
                        "US",
                        "Canada",
                        "UK",
                        "Australia",
                        "Austria",
                        "Belgium_French",
                        "France",
                        "Germany",
                        "Italy",
                        "Belgium_Dutch",
                        "Netherlands",
                        "Spain",
                        "Switzerland",
                        "Taiwan",
                        "eBayMotors",
                        "HongKong",
                        "Singapore",
                        "India",
                        "China",
                        "Ireland",
                        "Malaysia",
                        "Philippines",
                        "Poland",
                        "Sweden",
                        "CustomCode",
                        "CanadaFrench",
                        "Russia"
                    ]
                },
                "OrderSource": {
                    "format": "int32",
                    "description": " 0 = Local_Store ,  1 = eBayOrder ,  2 = eBaySingleItem ,  3 = Yahoo ,  4 = Amazon ,  5 = PriceGrabber ,  6 = Website ,  7 = Buy ,  12 = NewEggMall ,  15 = Magento ,  16 = QuickBooks ,  17 = RMS ,  18 = Cart32 ,  19 = Sears ,  20 = FBA ,  21 = Wholesale ,  22 = Overstock ,  23 = NewEggdotcom ,  24 = Etsy ,  25 = Bonanza ,  26 = PriceFalls ,  27 = Wayfair ,  28 = UnbeatableSale ,  29 = VendorCentral ,  30 = Hayneedle ,  31 = SmartBargains ,  32 = uBid ,  33 = ATGStores ,  34 = StacksAndStacks ,  35 = Sharkstores ,  36 = BestBuy ,  37 = Kohls ,  38 = Staples ,  39 = OneStopPlus ,  40 = Meijer ,  41 = Sonsi ,  42 = Walmart ,  43 = HSN ,  44 = NewEgg_Business ,  45 = KMart ,  46 = Wish ,  47 = SPRichards ,  48 = FingerHut ,  49 = Groupon ,  50 = Walmart_Marketplace ,  51 = ShopHQ ,  52 = PriceMinister ,  53 = GS ,  54 = DrugStore ,  55 = MercadoLibre ,  56 = JET ,  57 = ElevenMain ,  58 = SearsVendor ,  59 = Choxi ,  60 = TradeMe ,  61 = Tanga ,  62 = Target ,  63 = GrouponMarketplace ,  64 = Reverb ,  65 = BedBathAndBeyond ,  66 = Dropship_Central ,  67 = DSW ,  68 = Houzz ,  69 = Gilt ,  70 = BestBuyDS ,  71 = TopHatter ,  72 = HomeDepot ,  73 = MassGenie ,  74 = Cdiscount ,  75 = GrouponGateway ,  76 = SBN ,  77 = GoogleExpress ,  78 = Target_Plus ,  79 = WFS ",
                    "enum": [
                        0, 1, 2, 3, 4, 5, 6, 7, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,
                        27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45,
                        46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64,
                        65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79
                    ],
                    "type": "integer",
                    "x-enumNames": [
                        "Local_Store",
                        "eBayOrder",
                        "eBaySingleItem",
                        "Yahoo",
                        "Amazon",
                        "PriceGrabber",
                        "Website",
                        "Buy",
                        "NewEggMall",
                        "Magento",
                        "QuickBooks",
                        "RMS",
                        "Cart32",
                        "Sears",
                        "FBA",
                        "Wholesale",
                        "Overstock",
                        "NewEggdotcom",
                        "Etsy",
                        "Bonanza",
                        "PriceFalls",
                        "Wayfair",
                        "UnbeatableSale",
                        "VendorCentral",
                        "Hayneedle",
                        "SmartBargains",
                        "uBid",
                        "ATGStores",
                        "StacksAndStacks",
                        "Sharkstores",
                        "BestBuy",
                        "Kohls",
                        "Staples",
                        "OneStopPlus",
                        "Meijer",
                        "Sonsi",
                        "Walmart",
                        "HSN",
                        "NewEgg_Business",
                        "KMart",
                        "Wish",
                        "SPRichards",
                        "FingerHut",
                        "Groupon",
                        "Walmart_Marketplace",
                        "ShopHQ",
                        "PriceMinister",
                        "GS",
                        "DrugStore",
                        "MercadoLibre",
                        "JET",
                        "ElevenMain",
                        "SearsVendor",
                        "Choxi",
                        "TradeMe",
                        "Tanga",
                        "Target",
                        "GrouponMarketplace",
                        "Reverb",
                        "BedBathAndBeyond",
                        "Dropship_Central",
                        "DSW",
                        "Houzz",
                        "Gilt",
                        "BestBuyDS",
                        "TopHatter",
                        "HomeDepot",
                        "MassGenie",
                        "Cdiscount",
                        "GrouponGateway",
                        "SBN",
                        "GoogleExpress",
                        "Target_Plus",
                        "WFS"
                    ]
                },
                "OrderSourceOrderId": {
                    "type": "string"
                },
                "OrderSourceOrderIdUrl": {
                    "type": "string"
                },
                "EbaySellingManagerSalesRecordNumber": {
                    "type": "string"
                },
                "EbayUserId": {
                    "type": "string"
                },
                "EbayUserUrl": {
                    "type": "string"
                },
                "CustomerEmail": {
                    "type": "string"
                },
                "CustomerID": {
                    "format": "int32",
                    "type": "integer"
                },
                "SalesRep1": {
                    "format": "int32",
                    "type": "integer"
                },
                "SalesRep2": {
                    "format": "int32",
                    "type": "integer"
                },
                "SalesRep3": {
                    "format": "int32",
                    "type": "integer"
                },
                "PromiseDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "DisplayPromiseDate": {
                    "type": "boolean"
                },
                "EstimatedOrderDeliveryDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "CurrencyCode": {
                    "format": "int32",
                    "description": " 0 = USD ,  1 = GBP ,  2 = JPY ,  3 = EUR ,  4 = CAD ,  5 = AUD ,  6 = MXN ,  7 = TWD ,  8 = CNY ,  9 = AFA ,  10 = ALL ,  11 = DZD ,  12 = ADP ,  13 = AOA ,  14 = ARS ,  15 = AMD ,  16 = AWG ,  17 = AZM ,  18 = BSD ,  19 = BHD ,  20 = BDT ,  21 = BBD ,  22 = BYR ,  23 = BZD ,  24 = BMD ,  25 = BTN ,  26 = INR ,  27 = BOV ,  28 = BOB ,  29 = BAM ,  30 = BWP ,  31 = BRL ,  32 = BND ,  33 = BGL ,  34 = BGN ,  35 = BIF ,  36 = KHR ,  37 = CVE ,  38 = KYD ,  39 = XAF ,  40 = CLF ,  41 = CLP ,  42 = COP ,  43 = KMF ,  44 = CDF ,  45 = CRC ,  46 = HRK ,  47 = CUP ,  48 = CYP ,  49 = CZK ,  50 = DKK ,  51 = DJF ,  52 = DOP ,  53 = TPE ,  54 = ECV ,  55 = ECS ,  56 = EGP ,  57 = SVC ,  58 = ERN ,  59 = EEK ,  60 = ETB ,  61 = FKP ,  62 = FJD ,  63 = GMD ,  64 = GEL ,  65 = GHC ,  66 = GIP ,  67 = GTQ ,  68 = GNF ,  69 = GWP ,  70 = GYD ,  71 = HTG ,  72 = HNL ,  73 = HKD ,  74 = HUF ,  75 = ISK ,  76 = IDR ,  77 = IRR ,  78 = IQD ,  79 = ILS ,  80 = JMD ,  81 = JOD ,  82 = KZT ,  83 = KES ,  84 = KPW ,  85 = KRW ,  86 = KWD ,  87 = KGS ,  88 = LAK ,  89 = LVL ,  90 = LBP ,  91 = LSL ,  92 = LRD ,  93 = LYD ,  94 = CHF ,  95 = LTL ,  96 = MOP ,  97 = MKD ,  98 = MGF ,  99 = MWK ,  100 = MYR ,  101 = MVR ,  102 = MTL ,  103 = MRO ,  104 = MUR ,  105 = MXV ,  106 = MDL ,  107 = MNT ,  108 = XCD ,  109 = MZM ,  110 = MMK ,  111 = ZAR ,  112 = NAD ,  113 = NPR ,  114 = ANG ,  115 = XPF ,  116 = NZD ,  117 = NIO ,  118 = NGN ,  119 = NOK ,  120 = OMR ,  121 = PKR ,  122 = PAB ,  123 = PGK ,  124 = PYG ,  125 = PEN ,  126 = PHP ,  127 = PLN ,  128 = QAR ,  129 = ROL ,  130 = RUB ,  131 = RUR ,  132 = RWF ,  133 = SHP ,  134 = WST ,  135 = STD ,  136 = SAR ,  137 = SCR ,  138 = SLL ,  139 = SGD ,  140 = SKK ,  141 = SIT ,  142 = SBD ,  143 = SOS ,  144 = LKR ,  145 = SDD ,  146 = SRG ,  147 = SZL ,  148 = SEK ,  149 = SYP ,  150 = TJS ,  151 = TZS ,  152 = THB ,  153 = XOF ,  154 = TOP ,  155 = TTD ,  156 = TND ,  157 = TRL ,  158 = TMM ,  159 = UGX ,  160 = UAH ,  161 = AED ,  162 = USS ,  163 = USN ,  164 = UYU ,  165 = UZS ,  166 = VUV ,  167 = VEB ,  168 = VND ,  169 = MAD ,  170 = YER ,  171 = YUM ,  172 = ZMK ,  173 = ZWD ,  174 = ATS ",
                    "enum": [
                        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
                        21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
                        40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,
                        59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
                        78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
                        97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112,
                        113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
                        128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
                        143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
                        158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
                        173, 174
                    ],
                    "type": "integer",
                    "x-enumNames": [
                        "USD",
                        "GBP",
                        "JPY",
                        "EUR",
                        "CAD",
                        "AUD",
                        "MXN",
                        "TWD",
                        "CNY",
                        "AFA",
                        "ALL",
                        "DZD",
                        "ADP",
                        "AOA",
                        "ARS",
                        "AMD",
                        "AWG",
                        "AZM",
                        "BSD",
                        "BHD",
                        "BDT",
                        "BBD",
                        "BYR",
                        "BZD",
                        "BMD",
                        "BTN",
                        "INR",
                        "BOV",
                        "BOB",
                        "BAM",
                        "BWP",
                        "BRL",
                        "BND",
                        "BGL",
                        "BGN",
                        "BIF",
                        "KHR",
                        "CVE",
                        "KYD",
                        "XAF",
                        "CLF",
                        "CLP",
                        "COP",
                        "KMF",
                        "CDF",
                        "CRC",
                        "HRK",
                        "CUP",
                        "CYP",
                        "CZK",
                        "DKK",
                        "DJF",
                        "DOP",
                        "TPE",
                        "ECV",
                        "ECS",
                        "EGP",
                        "SVC",
                        "ERN",
                        "EEK",
                        "ETB",
                        "FKP",
                        "FJD",
                        "GMD",
                        "GEL",
                        "GHC",
                        "GIP",
                        "GTQ",
                        "GNF",
                        "GWP",
                        "GYD",
                        "HTG",
                        "HNL",
                        "HKD",
                        "HUF",
                        "ISK",
                        "IDR",
                        "IRR",
                        "IQD",
                        "ILS",
                        "JMD",
                        "JOD",
                        "KZT",
                        "KES",
                        "KPW",
                        "KRW",
                        "KWD",
                        "KGS",
                        "LAK",
                        "LVL",
                        "LBP",
                        "LSL",
                        "LRD",
                        "LYD",
                        "CHF",
                        "LTL",
                        "MOP",
                        "MKD",
                        "MGF",
                        "MWK",
                        "MYR",
                        "MVR",
                        "MTL",
                        "MRO",
                        "MUR",
                        "MXV",
                        "MDL",
                        "MNT",
                        "XCD",
                        "MZM",
                        "MMK",
                        "ZAR",
                        "NAD",
                        "NPR",
                        "ANG",
                        "XPF",
                        "NZD",
                        "NIO",
                        "NGN",
                        "NOK",
                        "OMR",
                        "PKR",
                        "PAB",
                        "PGK",
                        "PYG",
                        "PEN",
                        "PHP",
                        "PLN",
                        "QAR",
                        "ROL",
                        "RUB",
                        "RUR",
                        "RWF",
                        "SHP",
                        "WST",
                        "STD",
                        "SAR",
                        "SCR",
                        "SLL",
                        "SGD",
                        "SKK",
                        "SIT",
                        "SBD",
                        "SOS",
                        "LKR",
                        "SDD",
                        "SRG",
                        "SZL",
                        "SEK",
                        "SYP",
                        "TJS",
                        "TZS",
                        "THB",
                        "XOF",
                        "TOP",
                        "TTD",
                        "TND",
                        "TRL",
                        "TMM",
                        "UGX",
                        "UAH",
                        "AED",
                        "USS",
                        "USN",
                        "UYU",
                        "UZS",
                        "VUV",
                        "VEB",
                        "VND",
                        "MAD",
                        "YER",
                        "YUM",
                        "ZMK",
                        "ZWD",
                        "ATS"
                    ]
                },
                "OrderDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "CreatedOn": {
                    "format": "date-time",
                    "type": "string"
                },
                "OrderSubType": {
                    "format": "int32",
                    "description": " 0 = None ,  1 = Sample ,  2 = Charity ,  3 = eBayNow ,  4 = eBayLocalPickup ,  5 = Same_Day_Delivery ,  6 = GS ,  7 = Prime ,  8 = FBA_Exchange ,  9 = Amazon_Business ,  10 = Amazon_Business_Prime ,  11 = Second_Day ,  12 = Wish_Express ,  13 = SBN ,  15 = Amazon_Global_Express ,  16 = InStorePickUp ",
                    "enum": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16],
                    "type": "integer",
                    "x-enumNames": [
                        "None",
                        "Sample",
                        "Charity",
                        "eBayNow",
                        "eBayLocalPickup",
                        "Same_Day_Delivery",
                        "GS",
                        "Prime",
                        "FBA_Exchange",
                        "Amazon_Business",
                        "Amazon_Business_Prime",
                        "Second_Day",
                        "Wish_Express",
                        "SBN",
                        "Amazon_Global_Express",
                        "InStorePickUp"
                    ]
                },
                "EbayOrdersSource3": {
                    "type": "string"
                },
                "EbayOrdersSource3Url": {
                    "type": "string"
                },
                "DisableOrderSourceOrderID": {
                    "type": "boolean"
                },
                "IsOrderLocked": {
                    "type": "boolean"
                },
                "LockedByUser": {
                    "type": "string"
                },
                "LockedTimeLeft": {
                    "format": "int32",
                    "type": "integer"
                },
                "IsModified": {
                    "type": "boolean"
                }
            }
        },
        "SellerCloud.Delta.Models.Details.Concrete.Order.OrderStatusesDto": {
            "type": "object",
            "properties": {
                "OrderStatus": {
                    "format": "int32",
                    "description": " 1 = ShoppingCart ,  2 = InProcess ,  3 = Completed ,  100 = ProblemOrder ,  200 = OnHold ,  300 = Quote ,  999 = Void ,  -1 = Canceled ",
                    "enum": [1, 2, 3, 100, 200, 300, 999, -1],
                    "type": "integer",
                    "x-enumNames": [
                        "ShoppingCart",
                        "InProcess",
                        "Completed",
                        "ProblemOrder",
                        "OnHold",
                        "Quote",
                        "Void",
                        "Canceled"
                    ]
                },
                "ShippingStatus": {
                    "format": "int32",
                    "description": " 0 = Unknown ,  1 = Unshipped ,  2 = PartiallyShipped ,  3 = FullyShipped ,  4 = ReadyForPickup ",
                    "enum": [0, 1, 2, 3, 4],
                    "type": "integer",
                    "x-enumNames": [
                        "Unknown",
                        "Unshipped",
                        "PartiallyShipped",
                        "FullyShipped",
                        "ReadyForPickup"
                    ]
                },
                "PaymentStatus": {
                    "format": "int32",
                    "description": " 10 = NoPayment ,  20 = Authorized ,  30 = Charged ,  40 = Uncleared ,  50 = PartiallyRefund ,  60 = FullRefund ,  70 = PartialPayment ,  80 = eBayPaid ,  99 = PaymentError ",
                    "enum": [10, 20, 30, 40, 50, 60, 70, 80, 99],
                    "type": "integer",
                    "x-enumNames": [
                        "NoPayment",
                        "Authorized",
                        "Charged",
                        "Uncleared",
                        "PartiallyRefund",
                        "FullRefund",
                        "PartialPayment",
                        "eBayPaid",
                        "PaymentError"
                    ]
                },
                "RushOrder": {
                    "type": "boolean"
                },
                "DropshipStatus": {
                    "format": "int32",
                    "description": " 0 = None ,  1 = Pending ,  2 = Requested ,  3 = Acknowledged ,  4 = Processed ,  5 = PartialProcessed ,  6 = Cancelled ,  7 = Invalid ",
                    "enum": [0, 1, 2, 3, 4, 5, 6, 7],
                    "type": "integer",
                    "x-enumNames": [
                        "None",
                        "Pending",
                        "Requested",
                        "Acknowledged",
                        "Processed",
                        "PartialProcessed",
                        "Cancelled",
                        "Invalid"
                    ]
                },
                "CustomerServiceStatus": {
                    "format": "int32",
                    "type": "integer"
                },
                "IsDelivered": {
                    "type": "boolean"
                },
                "BackorderStatus": {
                    "format": "int32",
                    "description": " 0 = NotBackorder ,  1 = Backorder ",
                    "enum": [0, 1],
                    "type": "integer",
                    "x-enumNames": ["NotBackorder", "Backorder"]
                },
                "IsInvoicePrinted": {
                    "type": "boolean"
                },
                "IsExported": {
                    "type": "boolean"
                },
                "InventoryDisabled": {
                    "type": "boolean"
                },
                "OkToProcess": {
                    "format": "int32",
                    "description": " 0 = No_Ok_To_Process ,  1 = Ok_To_Process ,  -1 = Waiting_To_Process ",
                    "enum": [0, 1, -1],
                    "type": "integer",
                    "x-enumNames": ["No_Ok_To_Process", "Ok_To_Process", "Waiting_To_Process"]
                },
                "OkToShip": {
                    "format": "int32",
                    "description": " 0 = Not_Ok_To_Ship ,  1 = Ok_To_Ship ,  -1 = Waiting_To_Ship ",
                    "enum": [0, 1, -1],
                    "type": "integer",
                    "x-enumNames": ["Not_Ok_To_Ship", "Ok_To_Ship", "Waiting_To_Ship"]
                },
                "QBExported": {
                    "type": "boolean"
                },
                "Confirmed": {
                    "type": "boolean"
                },
                "FeedbackReceived": {
                    "type": "boolean"
                },
                "ShippingVerified": {
                    "type": "boolean"
                },
                "ChannelNotifiedOfShipping": {
                    "type": "boolean"
                },
                "FinalSale": {
                    "type": "boolean"
                },
                "PickingStatus": {
                    "format": "int32",
                    "description": " 0 = None ,  1 = Partially_Picked ,  2 = Fully_Picked ,  3 = Over_Picked ",
                    "enum": [0, 1, 2, 3],
                    "type": "integer",
                    "x-enumNames": ["None", "Partially_Picked", "Fully_Picked", "Over_Picked"]
                },
                "InPicklist": {
                    "type": "string"
                },
                "IsInvoiced": {
                    "type": "string"
                },
                "IsInGroup": {
                    "type": "string"
                },
                "IsBlackListed": {
                    "type": "boolean"
                },
                "SkubloxStatus": {
                    "type": "string"
                },
                "AddressVerifiedStatus": {
                    "format": "int32",
                    "description": " 0 = NotVerified ,  1 = Failure ,  2 = User_Input_Required ,  3 = Override ,  4 = Validated ",
                    "enum": [0, 1, 2, 3, 4],
                    "type": "integer",
                    "x-enumNames": [
                        "NotVerified",
                        "Failure",
                        "User_Input_Required",
                        "Override",
                        "Validated"
                    ]
                }
            }
        },
        "CoreWebAdmin.Delta.DetailsEntity.Models.Order.OrderItemDto": {
            "required": ["ProductID", "DisplayName"],
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "description": "ID of the item",
                    "type": "integer"
                },
                "OrderID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ProductID": {
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string"
                },
                "_ProductIDInitial": {
                    "type": "string"
                },
                "ProductIDOriginal": {
                    "type": "string"
                },
                "ProductIDRequested": {
                    "type": "string"
                },
                "ItemProductIdExists": {
                    "type": "boolean"
                },
                "DisplayName": {
                    "maxLength": 255,
                    "minLength": 0,
                    "type": "string"
                },
                "DisplayDescription": {
                    "type": "string"
                },
                "ImageURL": {
                    "type": "string"
                },
                "Qty": {
                    "format": "int32",
                    "type": "integer"
                },
                "TaxExempt": {
                    "type": "boolean"
                },
                "SitePrice": {
                    "format": "double",
                    "type": "number"
                },
                "PricePerCase": {
                    "format": "double",
                    "type": "number"
                },
                "TotalCases": {
                    "format": "int32",
                    "type": "integer"
                },
                "QtyPerCase": {
                    "format": "int32",
                    "type": "integer"
                },
                "EBayItemID": {
                    "type": "string"
                },
                "EBayItemUrl": {
                    "type": "string"
                },
                "InventoryAvailableQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "WarehouseID": {
                    "format": "int32",
                    "type": "integer"
                },
                "BundleItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.DetailsEntity.Concrete.Order.OrderBundleItemDto"
                    }
                },
                "BackOrderQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "QtyReturned": {
                    "format": "int32",
                    "type": "integer"
                },
                "QtyPicked": {
                    "format": "int32",
                    "type": "integer"
                },
                "Notes": {
                    "type": "string"
                },
                "LineTotal": {
                    "format": "double",
                    "type": "number"
                },
                "DiscountValue": {
                    "format": "double",
                    "type": "number"
                },
                "DiscountType": {
                    "format": "int32",
                    "description": " 0 = FixedAmount ,  1 = Percentage ",
                    "enum": [0, 1],
                    "type": "integer",
                    "x-enumNames": ["FixedAmount", "Percentage"]
                },
                "CanBeDeleted": {
                    "type": "boolean"
                },
                "AdjustedSitePrice": {
                    "format": "double",
                    "type": "number"
                },
                "ShadowOf": {
                    "type": "string"
                },
                "LineTaxTotal": {
                    "format": "double",
                    "type": "number"
                },
                "ShippingCost": {
                    "format": "double",
                    "type": "number"
                },
                "ShippingTax": {
                    "format": "double",
                    "type": "number"
                },
                "RowStatus": {
                    "format": "int32",
                    "description": " 0 = Existing ,  1 = Delete ,  2 = Add ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["Existing", "Delete", "Add"]
                },
                "IsModified": {
                    "type": "boolean"
                }
            }
        },
        "SellerCloud.Delta.Models.Details.Concrete.Order.OrderTotalInfoContent": {
            "type": "object",
            "properties": {
                "SubTotal": {
                    "format": "double",
                    "type": "number"
                },
                "Discount": {
                    "format": "double",
                    "type": "number"
                },
                "PromoCode": {
                    "type": "string"
                },
                "ShippingDiscount": {
                    "format": "double",
                    "type": "number"
                },
                "Tax": {
                    "format": "double",
                    "type": "number"
                },
                "TaxRate": {
                    "format": "double",
                    "type": "number"
                },
                "CustomTaxRate": {
                    "format": "double",
                    "maximum": 100,
                    "minimum": 0,
                    "type": "number"
                },
                "Shipping": {
                    "format": "double",
                    "type": "number"
                },
                "Handling": {
                    "format": "double",
                    "type": "number"
                },
                "Insurance": {
                    "format": "double",
                    "type": "number"
                },
                "GiftWrap": {
                    "format": "double",
                    "type": "number"
                },
                "ShouldDisplayWrapFee": {
                    "type": "boolean"
                },
                "GrandTotal": {
                    "format": "double",
                    "type": "number"
                },
                "ForceUseFixedTaxAmount": {
                    "type": "boolean"
                },
                "IsModified": {
                    "type": "boolean"
                }
            }
        },
        "CoreWebAdmin.Delta.DetailsEntity.Models.Order.PaymentOptionsContent": {
            "type": "object",
            "properties": {
                "PaymentTerms": {
                    "type": "string"
                },
                "Total": {
                    "format": "double",
                    "type": "number"
                },
                "Received": {
                    "format": "double",
                    "type": "number"
                },
                "Uncleared": {
                    "format": "double",
                    "type": "number"
                },
                "Refunded": {
                    "format": "double",
                    "type": "number"
                },
                "RemainingDues": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "CoreWebAdmin.Delta.DetailsEntity.Models.Order.ShippingDetailsDto": {
            "type": "object",
            "properties": {
                "ShippingStatus": {
                    "format": "int32",
                    "description": " 0 = Unknown ,  1 = Unshipped ,  2 = PartiallyShipped ,  3 = FullyShipped ,  4 = ReadyForPickup ",
                    "enum": [0, 1, 2, 3, 4],
                    "type": "integer",
                    "x-enumNames": [
                        "Unknown",
                        "Unshipped",
                        "PartiallyShipped",
                        "FullyShipped",
                        "ReadyForPickup"
                    ]
                },
                "Carrier": {
                    "type": "string"
                },
                "Service": {
                    "type": "string"
                },
                "RushOrder": {
                    "type": "boolean"
                },
                "RequirePINToShip": {
                    "type": "boolean"
                },
                "OrderShippingPromiseDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "ShipDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "ShippingTotal": {
                    "format": "double",
                    "type": "number"
                },
                "ShippingDiscountsTotal": {
                    "format": "double",
                    "type": "number"
                },
                "CostOfShipping": {
                    "format": "double",
                    "type": "number"
                },
                "EstShipWeight": {
                    "$ref": "#/definitions/CoreWebAdmin.Delta.DetailsEntity.Models.Common.ShippingWeight"
                },
                "ShippedBy": {
                    "format": "int32",
                    "type": "integer"
                },
                "ShippedByUser": {
                    "type": "string"
                },
                "ShippingLocation": {
                    "format": "int32",
                    "type": "integer"
                },
                "ShippingStation": {
                    "format": "int32",
                    "type": "integer"
                },
                "LockShippingMethod": {
                    "type": "boolean"
                },
                "AllowShippingWithoutPaymentValue": {
                    "type": "boolean"
                },
                "AllowShippingWithoutPaymentVisible": {
                    "type": "boolean"
                },
                "OtherCarrier": {
                    "type": "string"
                },
                "OtherMethed": {
                    "type": "string"
                },
                "RequestedShippingBy": {
                    "type": "string"
                },
                "MaximumOrderItemsToDisplaySetting": {
                    "type": "boolean"
                },
                "OrderItemCount": {
                    "type": "string"
                },
                "IsModified": {
                    "type": "boolean"
                }
            }
        },
        "CoreWebAdmin.Delta.DetailsEntity.Models.Order.ProfitAndLossBaseDataDto": {
            "type": "object",
            "properties": {
                "ItemCost": {
                    "type": "string"
                },
                "ItemCostUsd": {
                    "type": "string"
                },
                "PostingFee": {
                    "type": "string"
                },
                "PostingFeeUsd": {
                    "type": "string"
                },
                "Comission": {
                    "type": "string"
                },
                "ComissionUsd": {
                    "type": "string"
                },
                "TransactionFee": {
                    "type": "string"
                },
                "TransactionFeeUsd": {
                    "type": "string"
                },
                "ShippingCost": {
                    "type": "string"
                },
                "ShippingCostUsd": {
                    "type": "string"
                },
                "ShippingCostTooltip": {
                    "type": "string"
                },
                "Tax": {
                    "type": "string"
                },
                "TaxUsd": {
                    "type": "string"
                },
                "Promotion": {
                    "type": "string"
                },
                "PromotionUsd": {
                    "type": "string"
                },
                "Rebates": {
                    "type": "string"
                },
                "RebatesUsd": {
                    "type": "string"
                },
                "OrderCost": {
                    "type": "string"
                },
                "OrderCostUsd": {
                    "type": "string"
                },
                "Payments": {
                    "type": "string"
                },
                "PaymentsVisible": {
                    "type": "boolean"
                },
                "PaymentsUsd": {
                    "type": "string"
                },
                "Adjustments": {
                    "type": "string"
                },
                "AdjustmentsUsd": {
                    "type": "string"
                },
                "DropShipFee": {
                    "type": "string"
                },
                "DropShipFeeUsd": {
                    "type": "string"
                },
                "ShippingClaim": {
                    "type": "string"
                },
                "ProfitLoss": {
                    "type": "string"
                },
                "ProfitLossUsd": {
                    "type": "string"
                },
                "ProfitLossForParentOrder": {
                    "type": "string"
                },
                "ProfitForParentOrderTooltip": {
                    "type": "string"
                },
                "QbeExported": {
                    "type": "string"
                },
                "CurrencyCode": {
                    "format": "int32",
                    "description": " 0 = USD ,  1 = GBP ,  2 = JPY ,  3 = EUR ,  4 = CAD ,  5 = AUD ,  6 = MXN ,  7 = TWD ,  8 = CNY ,  9 = AFA ,  10 = ALL ,  11 = DZD ,  12 = ADP ,  13 = AOA ,  14 = ARS ,  15 = AMD ,  16 = AWG ,  17 = AZM ,  18 = BSD ,  19 = BHD ,  20 = BDT ,  21 = BBD ,  22 = BYR ,  23 = BZD ,  24 = BMD ,  25 = BTN ,  26 = INR ,  27 = BOV ,  28 = BOB ,  29 = BAM ,  30 = BWP ,  31 = BRL ,  32 = BND ,  33 = BGL ,  34 = BGN ,  35 = BIF ,  36 = KHR ,  37 = CVE ,  38 = KYD ,  39 = XAF ,  40 = CLF ,  41 = CLP ,  42 = COP ,  43 = KMF ,  44 = CDF ,  45 = CRC ,  46 = HRK ,  47 = CUP ,  48 = CYP ,  49 = CZK ,  50 = DKK ,  51 = DJF ,  52 = DOP ,  53 = TPE ,  54 = ECV ,  55 = ECS ,  56 = EGP ,  57 = SVC ,  58 = ERN ,  59 = EEK ,  60 = ETB ,  61 = FKP ,  62 = FJD ,  63 = GMD ,  64 = GEL ,  65 = GHC ,  66 = GIP ,  67 = GTQ ,  68 = GNF ,  69 = GWP ,  70 = GYD ,  71 = HTG ,  72 = HNL ,  73 = HKD ,  74 = HUF ,  75 = ISK ,  76 = IDR ,  77 = IRR ,  78 = IQD ,  79 = ILS ,  80 = JMD ,  81 = JOD ,  82 = KZT ,  83 = KES ,  84 = KPW ,  85 = KRW ,  86 = KWD ,  87 = KGS ,  88 = LAK ,  89 = LVL ,  90 = LBP ,  91 = LSL ,  92 = LRD ,  93 = LYD ,  94 = CHF ,  95 = LTL ,  96 = MOP ,  97 = MKD ,  98 = MGF ,  99 = MWK ,  100 = MYR ,  101 = MVR ,  102 = MTL ,  103 = MRO ,  104 = MUR ,  105 = MXV ,  106 = MDL ,  107 = MNT ,  108 = XCD ,  109 = MZM ,  110 = MMK ,  111 = ZAR ,  112 = NAD ,  113 = NPR ,  114 = ANG ,  115 = XPF ,  116 = NZD ,  117 = NIO ,  118 = NGN ,  119 = NOK ,  120 = OMR ,  121 = PKR ,  122 = PAB ,  123 = PGK ,  124 = PYG ,  125 = PEN ,  126 = PHP ,  127 = PLN ,  128 = QAR ,  129 = ROL ,  130 = RUB ,  131 = RUR ,  132 = RWF ,  133 = SHP ,  134 = WST ,  135 = STD ,  136 = SAR ,  137 = SCR ,  138 = SLL ,  139 = SGD ,  140 = SKK ,  141 = SIT ,  142 = SBD ,  143 = SOS ,  144 = LKR ,  145 = SDD ,  146 = SRG ,  147 = SZL ,  148 = SEK ,  149 = SYP ,  150 = TJS ,  151 = TZS ,  152 = THB ,  153 = XOF ,  154 = TOP ,  155 = TTD ,  156 = TND ,  157 = TRL ,  158 = TMM ,  159 = UGX ,  160 = UAH ,  161 = AED ,  162 = USS ,  163 = USN ,  164 = UYU ,  165 = UZS ,  166 = VUV ,  167 = VEB ,  168 = VND ,  169 = MAD ,  170 = YER ,  171 = YUM ,  172 = ZMK ,  173 = ZWD ,  174 = ATS ",
                    "enum": [
                        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
                        21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
                        40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,
                        59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
                        78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
                        97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112,
                        113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
                        128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
                        143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
                        158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
                        173, 174
                    ],
                    "type": "integer",
                    "x-enumNames": [
                        "USD",
                        "GBP",
                        "JPY",
                        "EUR",
                        "CAD",
                        "AUD",
                        "MXN",
                        "TWD",
                        "CNY",
                        "AFA",
                        "ALL",
                        "DZD",
                        "ADP",
                        "AOA",
                        "ARS",
                        "AMD",
                        "AWG",
                        "AZM",
                        "BSD",
                        "BHD",
                        "BDT",
                        "BBD",
                        "BYR",
                        "BZD",
                        "BMD",
                        "BTN",
                        "INR",
                        "BOV",
                        "BOB",
                        "BAM",
                        "BWP",
                        "BRL",
                        "BND",
                        "BGL",
                        "BGN",
                        "BIF",
                        "KHR",
                        "CVE",
                        "KYD",
                        "XAF",
                        "CLF",
                        "CLP",
                        "COP",
                        "KMF",
                        "CDF",
                        "CRC",
                        "HRK",
                        "CUP",
                        "CYP",
                        "CZK",
                        "DKK",
                        "DJF",
                        "DOP",
                        "TPE",
                        "ECV",
                        "ECS",
                        "EGP",
                        "SVC",
                        "ERN",
                        "EEK",
                        "ETB",
                        "FKP",
                        "FJD",
                        "GMD",
                        "GEL",
                        "GHC",
                        "GIP",
                        "GTQ",
                        "GNF",
                        "GWP",
                        "GYD",
                        "HTG",
                        "HNL",
                        "HKD",
                        "HUF",
                        "ISK",
                        "IDR",
                        "IRR",
                        "IQD",
                        "ILS",
                        "JMD",
                        "JOD",
                        "KZT",
                        "KES",
                        "KPW",
                        "KRW",
                        "KWD",
                        "KGS",
                        "LAK",
                        "LVL",
                        "LBP",
                        "LSL",
                        "LRD",
                        "LYD",
                        "CHF",
                        "LTL",
                        "MOP",
                        "MKD",
                        "MGF",
                        "MWK",
                        "MYR",
                        "MVR",
                        "MTL",
                        "MRO",
                        "MUR",
                        "MXV",
                        "MDL",
                        "MNT",
                        "XCD",
                        "MZM",
                        "MMK",
                        "ZAR",
                        "NAD",
                        "NPR",
                        "ANG",
                        "XPF",
                        "NZD",
                        "NIO",
                        "NGN",
                        "NOK",
                        "OMR",
                        "PKR",
                        "PAB",
                        "PGK",
                        "PYG",
                        "PEN",
                        "PHP",
                        "PLN",
                        "QAR",
                        "ROL",
                        "RUB",
                        "RUR",
                        "RWF",
                        "SHP",
                        "WST",
                        "STD",
                        "SAR",
                        "SCR",
                        "SLL",
                        "SGD",
                        "SKK",
                        "SIT",
                        "SBD",
                        "SOS",
                        "LKR",
                        "SDD",
                        "SRG",
                        "SZL",
                        "SEK",
                        "SYP",
                        "TJS",
                        "TZS",
                        "THB",
                        "XOF",
                        "TOP",
                        "TTD",
                        "TND",
                        "TRL",
                        "TMM",
                        "UGX",
                        "UAH",
                        "AED",
                        "USS",
                        "USN",
                        "UYU",
                        "UZS",
                        "VUV",
                        "VEB",
                        "VND",
                        "MAD",
                        "YER",
                        "YUM",
                        "ZMK",
                        "ZWD",
                        "ATS"
                    ]
                }
            }
        },
        "SellerCloud.Delta.Models.CustomColumns.CustomColumnBaseDto": {
            "type": "object",
            "properties": {
                "ColumnName": {
                    "type": "string"
                },
                "DisplayName": {
                    "type": "string"
                },
                "Value": {
                    "type": "object"
                }
            }
        },
        "SellerCloud.Delta.Models.Details.Concrete.Order.ManageGifts.ManageGiftsDto": {
            "type": "object",
            "properties": {
                "IsGiftOrder": {
                    "type": "boolean"
                },
                "IsWholeSaleOrder": {
                    "type": "boolean"
                },
                "HasOrderItems": {
                    "type": "boolean"
                },
                "GiftDetails": {
                    "$ref": "#/definitions/SellerCloud.Delta.Models.Details.Concrete.Order.ManageGifts.GiftDetailsDto"
                }
            }
        },
        "SellerCloud.Delta.Models.DetailsEntity.Concrete.Order.OrderBundleItemDto": {
            "type": "object",
            "properties": {
                "ProductID": {
                    "type": "string"
                },
                "ImageURL": {
                    "type": "string"
                },
                "ProductName": {
                    "type": "string"
                },
                "QtyPerKit": {
                    "format": "int32",
                    "type": "integer"
                },
                "TotalQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "BackOrderQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "Picked": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.Details.Concrete.Order.ManageGifts.GiftDetailsDto": {
            "type": "object",
            "properties": {
                "UseGiftWrap": {
                    "type": "boolean"
                },
                "GiftWrapFee": {
                    "format": "double",
                    "type": "number"
                },
                "GiftMessage": {
                    "type": "string"
                },
                "GiftWrapType": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Order.UpdateOrderRequest": {
            "type": "object",
            "properties": {
                "CompanyId": {
                    "format": "int32",
                    "type": "integer"
                },
                "CustomerId": {
                    "format": "int32",
                    "type": "integer"
                },
                "OrderSource": {
                    "format": "int32",
                    "description": " 0 = Local_Store ,  1 = eBayOrder ,  2 = eBaySingleItem ,  3 = Yahoo ,  4 = Amazon ,  5 = PriceGrabber ,  6 = Website ,  7 = Buy ,  12 = NewEggMall ,  15 = Magento ,  16 = QuickBooks ,  17 = RMS ,  18 = Cart32 ,  19 = Sears ,  20 = FBA ,  21 = Wholesale ,  22 = Overstock ,  23 = NewEggdotcom ,  24 = Etsy ,  25 = Bonanza ,  26 = PriceFalls ,  27 = Wayfair ,  28 = UnbeatableSale ,  29 = VendorCentral ,  30 = Hayneedle ,  31 = SmartBargains ,  32 = uBid ,  33 = ATGStores ,  34 = StacksAndStacks ,  35 = Sharkstores ,  36 = BestBuy ,  37 = Kohls ,  38 = Staples ,  39 = OneStopPlus ,  40 = Meijer ,  41 = Sonsi ,  42 = Walmart ,  43 = HSN ,  44 = NewEgg_Business ,  45 = KMart ,  46 = Wish ,  47 = SPRichards ,  48 = FingerHut ,  49 = Groupon ,  50 = Walmart_Marketplace ,  51 = ShopHQ ,  52 = PriceMinister ,  53 = GS ,  54 = DrugStore ,  55 = MercadoLibre ,  56 = JET ,  57 = ElevenMain ,  58 = SearsVendor ,  59 = Choxi ,  60 = TradeMe ,  61 = Tanga ,  62 = Target ,  63 = GrouponMarketplace ,  64 = Reverb ,  65 = BedBathAndBeyond ,  66 = Dropship_Central ,  67 = DSW ,  68 = Houzz ,  69 = Gilt ,  70 = BestBuyDS ,  71 = TopHatter ,  72 = HomeDepot ,  73 = MassGenie ,  74 = Cdiscount ,  75 = GrouponGateway ,  76 = SBN ,  77 = GoogleExpress ,  78 = Target_Plus ,  79 = WFS ",
                    "enum": [
                        0, 1, 2, 3, 4, 5, 6, 7, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,
                        27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45,
                        46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64,
                        65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79
                    ],
                    "type": "integer",
                    "x-enumNames": [
                        "Local_Store",
                        "eBayOrder",
                        "eBaySingleItem",
                        "Yahoo",
                        "Amazon",
                        "PriceGrabber",
                        "Website",
                        "Buy",
                        "NewEggMall",
                        "Magento",
                        "QuickBooks",
                        "RMS",
                        "Cart32",
                        "Sears",
                        "FBA",
                        "Wholesale",
                        "Overstock",
                        "NewEggdotcom",
                        "Etsy",
                        "Bonanza",
                        "PriceFalls",
                        "Wayfair",
                        "UnbeatableSale",
                        "VendorCentral",
                        "Hayneedle",
                        "SmartBargains",
                        "uBid",
                        "ATGStores",
                        "StacksAndStacks",
                        "Sharkstores",
                        "BestBuy",
                        "Kohls",
                        "Staples",
                        "OneStopPlus",
                        "Meijer",
                        "Sonsi",
                        "Walmart",
                        "HSN",
                        "NewEgg_Business",
                        "KMart",
                        "Wish",
                        "SPRichards",
                        "FingerHut",
                        "Groupon",
                        "Walmart_Marketplace",
                        "ShopHQ",
                        "PriceMinister",
                        "GS",
                        "DrugStore",
                        "MercadoLibre",
                        "JET",
                        "ElevenMain",
                        "SearsVendor",
                        "Choxi",
                        "TradeMe",
                        "Tanga",
                        "Target",
                        "GrouponMarketplace",
                        "Reverb",
                        "BedBathAndBeyond",
                        "Dropship_Central",
                        "DSW",
                        "Houzz",
                        "Gilt",
                        "BestBuyDS",
                        "TopHatter",
                        "HomeDepot",
                        "MassGenie",
                        "Cdiscount",
                        "GrouponGateway",
                        "SBN",
                        "GoogleExpress",
                        "Target_Plus",
                        "WFS"
                    ]
                },
                "OrderSubType": {
                    "format": "int32",
                    "description": " 0 = None ,  1 = Sample ,  2 = Charity ,  3 = eBayNow ,  4 = eBayLocalPickup ,  5 = Same_Day_Delivery ,  6 = GS ,  7 = Prime ,  8 = FBA_Exchange ,  9 = Amazon_Business ,  10 = Amazon_Business_Prime ,  11 = Second_Day ,  12 = Wish_Express ,  13 = SBN ,  15 = Amazon_Global_Express ,  16 = InStorePickUp ",
                    "enum": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16],
                    "type": "integer",
                    "x-enumNames": [
                        "None",
                        "Sample",
                        "Charity",
                        "eBayNow",
                        "eBayLocalPickup",
                        "Same_Day_Delivery",
                        "GS",
                        "Prime",
                        "FBA_Exchange",
                        "Amazon_Business",
                        "Amazon_Business_Prime",
                        "Second_Day",
                        "Wish_Express",
                        "SBN",
                        "Amazon_Global_Express",
                        "InStorePickUp"
                    ]
                },
                "SalesRep1": {
                    "format": "int32",
                    "type": "integer"
                },
                "CurrencyCode": {
                    "format": "int32",
                    "description": " 0 = USD ,  1 = GBP ,  2 = JPY ,  3 = EUR ,  4 = CAD ,  5 = AUD ,  6 = MXN ,  7 = TWD ,  8 = CNY ,  9 = AFA ,  10 = ALL ,  11 = DZD ,  12 = ADP ,  13 = AOA ,  14 = ARS ,  15 = AMD ,  16 = AWG ,  17 = AZM ,  18 = BSD ,  19 = BHD ,  20 = BDT ,  21 = BBD ,  22 = BYR ,  23 = BZD ,  24 = BMD ,  25 = BTN ,  26 = INR ,  27 = BOV ,  28 = BOB ,  29 = BAM ,  30 = BWP ,  31 = BRL ,  32 = BND ,  33 = BGL ,  34 = BGN ,  35 = BIF ,  36 = KHR ,  37 = CVE ,  38 = KYD ,  39 = XAF ,  40 = CLF ,  41 = CLP ,  42 = COP ,  43 = KMF ,  44 = CDF ,  45 = CRC ,  46 = HRK ,  47 = CUP ,  48 = CYP ,  49 = CZK ,  50 = DKK ,  51 = DJF ,  52 = DOP ,  53 = TPE ,  54 = ECV ,  55 = ECS ,  56 = EGP ,  57 = SVC ,  58 = ERN ,  59 = EEK ,  60 = ETB ,  61 = FKP ,  62 = FJD ,  63 = GMD ,  64 = GEL ,  65 = GHC ,  66 = GIP ,  67 = GTQ ,  68 = GNF ,  69 = GWP ,  70 = GYD ,  71 = HTG ,  72 = HNL ,  73 = HKD ,  74 = HUF ,  75 = ISK ,  76 = IDR ,  77 = IRR ,  78 = IQD ,  79 = ILS ,  80 = JMD ,  81 = JOD ,  82 = KZT ,  83 = KES ,  84 = KPW ,  85 = KRW ,  86 = KWD ,  87 = KGS ,  88 = LAK ,  89 = LVL ,  90 = LBP ,  91 = LSL ,  92 = LRD ,  93 = LYD ,  94 = CHF ,  95 = LTL ,  96 = MOP ,  97 = MKD ,  98 = MGF ,  99 = MWK ,  100 = MYR ,  101 = MVR ,  102 = MTL ,  103 = MRO ,  104 = MUR ,  105 = MXV ,  106 = MDL ,  107 = MNT ,  108 = XCD ,  109 = MZM ,  110 = MMK ,  111 = ZAR ,  112 = NAD ,  113 = NPR ,  114 = ANG ,  115 = XPF ,  116 = NZD ,  117 = NIO ,  118 = NGN ,  119 = NOK ,  120 = OMR ,  121 = PKR ,  122 = PAB ,  123 = PGK ,  124 = PYG ,  125 = PEN ,  126 = PHP ,  127 = PLN ,  128 = QAR ,  129 = ROL ,  130 = RUB ,  131 = RUR ,  132 = RWF ,  133 = SHP ,  134 = WST ,  135 = STD ,  136 = SAR ,  137 = SCR ,  138 = SLL ,  139 = SGD ,  140 = SKK ,  141 = SIT ,  142 = SBD ,  143 = SOS ,  144 = LKR ,  145 = SDD ,  146 = SRG ,  147 = SZL ,  148 = SEK ,  149 = SYP ,  150 = TJS ,  151 = TZS ,  152 = THB ,  153 = XOF ,  154 = TOP ,  155 = TTD ,  156 = TND ,  157 = TRL ,  158 = TMM ,  159 = UGX ,  160 = UAH ,  161 = AED ,  162 = USS ,  163 = USN ,  164 = UYU ,  165 = UZS ,  166 = VUV ,  167 = VEB ,  168 = VND ,  169 = MAD ,  170 = YER ,  171 = YUM ,  172 = ZMK ,  173 = ZWD ,  174 = ATS ",
                    "enum": [
                        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
                        21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
                        40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,
                        59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
                        78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
                        97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112,
                        113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
                        128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
                        143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
                        158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
                        173, 174
                    ],
                    "type": "integer",
                    "x-enumNames": [
                        "USD",
                        "GBP",
                        "JPY",
                        "EUR",
                        "CAD",
                        "AUD",
                        "MXN",
                        "TWD",
                        "CNY",
                        "AFA",
                        "ALL",
                        "DZD",
                        "ADP",
                        "AOA",
                        "ARS",
                        "AMD",
                        "AWG",
                        "AZM",
                        "BSD",
                        "BHD",
                        "BDT",
                        "BBD",
                        "BYR",
                        "BZD",
                        "BMD",
                        "BTN",
                        "INR",
                        "BOV",
                        "BOB",
                        "BAM",
                        "BWP",
                        "BRL",
                        "BND",
                        "BGL",
                        "BGN",
                        "BIF",
                        "KHR",
                        "CVE",
                        "KYD",
                        "XAF",
                        "CLF",
                        "CLP",
                        "COP",
                        "KMF",
                        "CDF",
                        "CRC",
                        "HRK",
                        "CUP",
                        "CYP",
                        "CZK",
                        "DKK",
                        "DJF",
                        "DOP",
                        "TPE",
                        "ECV",
                        "ECS",
                        "EGP",
                        "SVC",
                        "ERN",
                        "EEK",
                        "ETB",
                        "FKP",
                        "FJD",
                        "GMD",
                        "GEL",
                        "GHC",
                        "GIP",
                        "GTQ",
                        "GNF",
                        "GWP",
                        "GYD",
                        "HTG",
                        "HNL",
                        "HKD",
                        "HUF",
                        "ISK",
                        "IDR",
                        "IRR",
                        "IQD",
                        "ILS",
                        "JMD",
                        "JOD",
                        "KZT",
                        "KES",
                        "KPW",
                        "KRW",
                        "KWD",
                        "KGS",
                        "LAK",
                        "LVL",
                        "LBP",
                        "LSL",
                        "LRD",
                        "LYD",
                        "CHF",
                        "LTL",
                        "MOP",
                        "MKD",
                        "MGF",
                        "MWK",
                        "MYR",
                        "MVR",
                        "MTL",
                        "MRO",
                        "MUR",
                        "MXV",
                        "MDL",
                        "MNT",
                        "XCD",
                        "MZM",
                        "MMK",
                        "ZAR",
                        "NAD",
                        "NPR",
                        "ANG",
                        "XPF",
                        "NZD",
                        "NIO",
                        "NGN",
                        "NOK",
                        "OMR",
                        "PKR",
                        "PAB",
                        "PGK",
                        "PYG",
                        "PEN",
                        "PHP",
                        "PLN",
                        "QAR",
                        "ROL",
                        "RUB",
                        "RUR",
                        "RWF",
                        "SHP",
                        "WST",
                        "STD",
                        "SAR",
                        "SCR",
                        "SLL",
                        "SGD",
                        "SKK",
                        "SIT",
                        "SBD",
                        "SOS",
                        "LKR",
                        "SDD",
                        "SRG",
                        "SZL",
                        "SEK",
                        "SYP",
                        "TJS",
                        "TZS",
                        "THB",
                        "XOF",
                        "TOP",
                        "TTD",
                        "TND",
                        "TRL",
                        "TMM",
                        "UGX",
                        "UAH",
                        "AED",
                        "USS",
                        "USN",
                        "UYU",
                        "UZS",
                        "VUV",
                        "VEB",
                        "VND",
                        "MAD",
                        "YER",
                        "YUM",
                        "ZMK",
                        "ZWD",
                        "ATS"
                    ]
                },
                "DisableInventoryCount": {
                    "type": "boolean"
                },
                "ShippingAddress": {
                    "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Common.AddressWithSeparateAddrLinesDto"
                },
                "BillingAddress": {
                    "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Common.AddressWithSeparateAddrLinesDto"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Common.AddressWithSeparateAddrLinesDto": {
            "type": "object",
            "properties": {
                "FirstName": {
                    "type": "string"
                },
                "LastName": {
                    "type": "string"
                },
                "MiddleName": {
                    "type": "string"
                },
                "ZipCode": {
                    "type": "string"
                },
                "City": {
                    "type": "string"
                },
                "Country": {
                    "type": "string"
                },
                "Business": {
                    "type": "string"
                },
                "AddressLine1": {
                    "type": "string"
                },
                "AddressLine2": {
                    "type": "string"
                },
                "Fax": {
                    "type": "string"
                },
                "Region": {
                    "type": "string"
                },
                "State": {
                    "type": "string"
                },
                "Phone": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Order.OrderFilters": {
            "type": "object",
            "properties": {
                "OrderIDs": {
                    "description": "List of IDs of different orders",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "CompanyID": {
                    "description": "List of IDs of different companies",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "CompanyGroupID": {
                    "description": "List of company groups",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "OrderStatus": {
                    "description": "Status of order 1 = ShoppingCart ,  2 = InProcess ,  3 = Completed ,  100 = ProblemOrder ,  200 = OnHold ,  300 = Quote ,  999 = Void ,  -1 = Canceled ",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "description": " 1 = ShoppingCart ,  2 = InProcess ,  3 = Completed ,  100 = ProblemOrder ,  200 = OnHold ,  300 = Quote ,  999 = Void ,  -1 = Canceled ",
                        "enum": [1, 2, 3, 100, 200, 300, 999, -1],
                        "type": "integer"
                    },
                    "x-enumNames": [
                        "ShoppingCart",
                        "InProcess",
                        "Completed",
                        "ProblemOrder",
                        "OnHold",
                        "Quote",
                        "Void",
                        "Canceled"
                    ]
                },
                "DateRange": {
                    "format": "int32",
                    "description": "Date range 1 = Today ,  2 = ThisWeek ,  3 = LastWeek ,  4 = Last31Days ,  5 = Last60Days ,  6 = Last120Days ,  7 = ThisCalendarYear ,  8 = PreviousCalendarYear ,  9 = AllDates ,  10 = Last7Days ,  11 = Last3Days ,  12 = Last24Hours ,  17 = OlderThan1BusinessDay ,  18 = OlderThan2BusinessDay ,  19 = OlderThan3BusinessDay ,  20 = Yesterday ,  21 = Last90DAys ,  22 = LastMonth ,  23 = Last12Months ,  24 = OlderThan24Hours ,  25 = Tomorrow ,  26 = Next3Days ,  27 = Next7Days ,  28 = MonthToDate ,  101 = Last14Days ",
                    "enum": [
                        1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25,
                        26, 27, 28, 101
                    ],
                    "type": "integer",
                    "x-enumNames": [
                        "Today",
                        "ThisWeek",
                        "LastWeek",
                        "Last31Days",
                        "Last60Days",
                        "Last120Days",
                        "ThisCalendarYear",
                        "PreviousCalendarYear",
                        "AllDates",
                        "Last7Days",
                        "Last3Days",
                        "Last24Hours",
                        "OlderThan1BusinessDay",
                        "OlderThan2BusinessDay",
                        "OlderThan3BusinessDay",
                        "Yesterday",
                        "Last90DAys",
                        "LastMonth",
                        "Last12Months",
                        "OlderThan24Hours",
                        "Tomorrow",
                        "Next3Days",
                        "Next7Days",
                        "MonthToDate",
                        "Last14Days"
                    ]
                },
                "ShipDateRange": {
                    "format": "int32",
                    "description": "Shipping range status 1 = Today ,  2 = ThisWeek ,  3 = LastWeek ,  4 = Last31Days ,  5 = Last60Days ,  6 = Last120Days ,  7 = ThisCalendarYear ,  8 = PreviousCalendarYear ,  9 = AllDates ,  10 = Last7Days ,  11 = Last3Days ,  12 = Last24Hours ,  17 = OlderThan1BusinessDay ,  18 = OlderThan2BusinessDay ,  19 = OlderThan3BusinessDay ,  20 = Yesterday ,  21 = Last90DAys ,  22 = LastMonth ,  23 = Last12Months ,  24 = OlderThan24Hours ,  25 = Tomorrow ,  26 = Next3Days ,  27 = Next7Days ,  28 = MonthToDate ,  101 = Last14Days ",
                    "enum": [
                        1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25,
                        26, 27, 28, 101
                    ],
                    "type": "integer",
                    "x-enumNames": [
                        "Today",
                        "ThisWeek",
                        "LastWeek",
                        "Last31Days",
                        "Last60Days",
                        "Last120Days",
                        "ThisCalendarYear",
                        "PreviousCalendarYear",
                        "AllDates",
                        "Last7Days",
                        "Last3Days",
                        "Last24Hours",
                        "OlderThan1BusinessDay",
                        "OlderThan2BusinessDay",
                        "OlderThan3BusinessDay",
                        "Yesterday",
                        "Last90DAys",
                        "LastMonth",
                        "Last12Months",
                        "OlderThan24Hours",
                        "Tomorrow",
                        "Next3Days",
                        "Next7Days",
                        "MonthToDate",
                        "Last14Days"
                    ]
                },
                "UpdatedFromDateRange": {
                    "format": "int32",
                    "description": "Updated From range status 1 = Today ,  2 = ThisWeek ,  3 = LastWeek ,  4 = Last31Days ,  5 = Last60Days ,  6 = Last120Days ,  7 = ThisCalendarYear ,  8 = PreviousCalendarYear ,  9 = AllDates ,  10 = Last7Days ,  11 = Last3Days ,  12 = Last24Hours ,  17 = OlderThan1BusinessDay ,  18 = OlderThan2BusinessDay ,  19 = OlderThan3BusinessDay ,  20 = Yesterday ,  21 = Last90DAys ,  22 = LastMonth ,  23 = Last12Months ,  24 = OlderThan24Hours ,  25 = Tomorrow ,  26 = Next3Days ,  27 = Next7Days ,  28 = MonthToDate ,  101 = Last14Days ",
                    "enum": [
                        1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25,
                        26, 27, 28, 101
                    ],
                    "type": "integer",
                    "x-enumNames": [
                        "Today",
                        "ThisWeek",
                        "LastWeek",
                        "Last31Days",
                        "Last60Days",
                        "Last120Days",
                        "ThisCalendarYear",
                        "PreviousCalendarYear",
                        "AllDates",
                        "Last7Days",
                        "Last3Days",
                        "Last24Hours",
                        "OlderThan1BusinessDay",
                        "OlderThan2BusinessDay",
                        "OlderThan3BusinessDay",
                        "Yesterday",
                        "Last90DAys",
                        "LastMonth",
                        "Last12Months",
                        "OlderThan24Hours",
                        "Tomorrow",
                        "Next3Days",
                        "Next7Days",
                        "MonthToDate",
                        "Last14Days"
                    ]
                },
                "CreatedOnDateRange": {
                    "format": "int32",
                    "description": "Created On range status 1 = Today ,  2 = ThisWeek ,  3 = LastWeek ,  4 = Last31Days ,  5 = Last60Days ,  6 = Last120Days ,  7 = ThisCalendarYear ,  8 = PreviousCalendarYear ,  9 = AllDates ,  10 = Last7Days ,  11 = Last3Days ,  12 = Last24Hours ,  17 = OlderThan1BusinessDay ,  18 = OlderThan2BusinessDay ,  19 = OlderThan3BusinessDay ,  20 = Yesterday ,  21 = Last90DAys ,  22 = LastMonth ,  23 = Last12Months ,  24 = OlderThan24Hours ,  25 = Tomorrow ,  26 = Next3Days ,  27 = Next7Days ,  28 = MonthToDate ,  101 = Last14Days ",
                    "enum": [
                        1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25,
                        26, 27, 28, 101
                    ],
                    "type": "integer",
                    "x-enumNames": [
                        "Today",
                        "ThisWeek",
                        "LastWeek",
                        "Last31Days",
                        "Last60Days",
                        "Last120Days",
                        "ThisCalendarYear",
                        "PreviousCalendarYear",
                        "AllDates",
                        "Last7Days",
                        "Last3Days",
                        "Last24Hours",
                        "OlderThan1BusinessDay",
                        "OlderThan2BusinessDay",
                        "OlderThan3BusinessDay",
                        "Yesterday",
                        "Last90DAys",
                        "LastMonth",
                        "Last12Months",
                        "OlderThan24Hours",
                        "Tomorrow",
                        "Next3Days",
                        "Next7Days",
                        "MonthToDate",
                        "Last14Days"
                    ]
                },
                "ShippingStatus": {
                    "format": "int32",
                    "description": "Shipping order status 0 = Unknown ,  1 = Unshipped ,  2 = PartiallyShipped ,  3 = FullyShipped ,  4 = ReadyForPickup ",
                    "enum": [0, 1, 2, 3, 4],
                    "type": "integer",
                    "x-enumNames": [
                        "Unknown",
                        "Unshipped",
                        "PartiallyShipped",
                        "FullyShipped",
                        "ReadyForPickup"
                    ]
                },
                "TrackingNumber": {
                    "description": "Tracking number",
                    "type": "string"
                },
                "SerialNumber": {
                    "description": "Serial number",
                    "type": "string"
                },
                "PaymentDateRange": {
                    "format": "int32",
                    "description": "Payment range status 1 = Today ,  2 = ThisWeek ,  3 = LastWeek ,  4 = Last31Days ,  5 = Last60Days ,  6 = Last120Days ,  7 = ThisCalendarYear ,  8 = PreviousCalendarYear ,  9 = AllDates ,  10 = Last7Days ,  11 = Last3Days ,  12 = Last24Hours ,  17 = OlderThan1BusinessDay ,  18 = OlderThan2BusinessDay ,  19 = OlderThan3BusinessDay ,  20 = Yesterday ,  21 = Last90DAys ,  22 = LastMonth ,  23 = Last12Months ,  24 = OlderThan24Hours ,  25 = Tomorrow ,  26 = Next3Days ,  27 = Next7Days ,  28 = MonthToDate ,  101 = Last14Days ",
                    "enum": [
                        1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25,
                        26, 27, 28, 101
                    ],
                    "type": "integer",
                    "x-enumNames": [
                        "Today",
                        "ThisWeek",
                        "LastWeek",
                        "Last31Days",
                        "Last60Days",
                        "Last120Days",
                        "ThisCalendarYear",
                        "PreviousCalendarYear",
                        "AllDates",
                        "Last7Days",
                        "Last3Days",
                        "Last24Hours",
                        "OlderThan1BusinessDay",
                        "OlderThan2BusinessDay",
                        "OlderThan3BusinessDay",
                        "Yesterday",
                        "Last90DAys",
                        "LastMonth",
                        "Last12Months",
                        "OlderThan24Hours",
                        "Tomorrow",
                        "Next3Days",
                        "Next7Days",
                        "MonthToDate",
                        "Last14Days"
                    ]
                },
                "SKU": {
                    "description": "ID of product",
                    "type": "string"
                },
                "ASIN": {
                    "description": "ASIN",
                    "type": "string"
                },
                "CreatedOnFrom": {
                    "format": "date-time",
                    "description": "Start date-time of creation: mm/dd/yyyy hh:mm",
                    "type": "string"
                },
                "CreatedOnTo": {
                    "format": "date-time",
                    "description": "Last date-time of creation: mm/dd/yyyy hh:mm",
                    "type": "string"
                },
                "LastUpdatedFrom": {
                    "format": "date-time",
                    "description": "Start date-time of updating: mm/dd/yyyy hh:mm",
                    "type": "string"
                },
                "LastUpdatedTo": {
                    "format": "date-time",
                    "description": "Last date-time of updating: mm/dd/yyyy hh:mm",
                    "type": "string"
                },
                "Channel": {
                    "format": "int32",
                    "description": "Order source id 0 = Local_Store ,  1 = eBayOrder ,  2 = eBaySingleItem ,  3 = Yahoo ,  4 = Amazon ,  5 = PriceGrabber ,  6 = Website ,  7 = Buy ,  12 = NewEggMall ,  15 = Magento ,  16 = QuickBooks ,  17 = RMS ,  18 = Cart32 ,  19 = Sears ,  20 = FBA ,  21 = Wholesale ,  22 = Overstock ,  23 = NewEggdotcom ,  24 = Etsy ,  25 = Bonanza ,  26 = PriceFalls ,  27 = Wayfair ,  28 = UnbeatableSale ,  29 = VendorCentral ,  30 = Hayneedle ,  31 = SmartBargains ,  32 = uBid ,  33 = ATGStores ,  34 = StacksAndStacks ,  35 = Sharkstores ,  36 = BestBuy ,  37 = Kohls ,  38 = Staples ,  39 = OneStopPlus ,  40 = Meijer ,  41 = Sonsi ,  42 = Walmart ,  43 = HSN ,  44 = NewEgg_Business ,  45 = KMart ,  46 = Wish ,  47 = SPRichards ,  48 = FingerHut ,  49 = Groupon ,  50 = Walmart_Marketplace ,  51 = ShopHQ ,  52 = PriceMinister ,  53 = GS ,  54 = DrugStore ,  55 = MercadoLibre ,  56 = JET ,  57 = ElevenMain ,  58 = SearsVendor ,  59 = Choxi ,  60 = TradeMe ,  61 = Tanga ,  62 = Target ,  63 = GrouponMarketplace ,  64 = Reverb ,  65 = BedBathAndBeyond ,  66 = Dropship_Central ,  67 = DSW ,  68 = Houzz ,  69 = Gilt ,  70 = BestBuyDS ,  71 = TopHatter ,  72 = HomeDepot ,  73 = MassGenie ,  74 = Cdiscount ,  75 = GrouponGateway ,  76 = SBN ,  77 = GoogleExpress ,  78 = Target_Plus ,  79 = WFS ",
                    "enum": [
                        0, 1, 2, 3, 4, 5, 6, 7, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,
                        27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45,
                        46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64,
                        65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79
                    ],
                    "type": "integer",
                    "x-enumNames": [
                        "Local_Store",
                        "eBayOrder",
                        "eBaySingleItem",
                        "Yahoo",
                        "Amazon",
                        "PriceGrabber",
                        "Website",
                        "Buy",
                        "NewEggMall",
                        "Magento",
                        "QuickBooks",
                        "RMS",
                        "Cart32",
                        "Sears",
                        "FBA",
                        "Wholesale",
                        "Overstock",
                        "NewEggdotcom",
                        "Etsy",
                        "Bonanza",
                        "PriceFalls",
                        "Wayfair",
                        "UnbeatableSale",
                        "VendorCentral",
                        "Hayneedle",
                        "SmartBargains",
                        "uBid",
                        "ATGStores",
                        "StacksAndStacks",
                        "Sharkstores",
                        "BestBuy",
                        "Kohls",
                        "Staples",
                        "OneStopPlus",
                        "Meijer",
                        "Sonsi",
                        "Walmart",
                        "HSN",
                        "NewEgg_Business",
                        "KMart",
                        "Wish",
                        "SPRichards",
                        "FingerHut",
                        "Groupon",
                        "Walmart_Marketplace",
                        "ShopHQ",
                        "PriceMinister",
                        "GS",
                        "DrugStore",
                        "MercadoLibre",
                        "JET",
                        "ElevenMain",
                        "SearsVendor",
                        "Choxi",
                        "TradeMe",
                        "Tanga",
                        "Target",
                        "GrouponMarketplace",
                        "Reverb",
                        "BedBathAndBeyond",
                        "Dropship_Central",
                        "DSW",
                        "Houzz",
                        "Gilt",
                        "BestBuyDS",
                        "TopHatter",
                        "HomeDepot",
                        "MassGenie",
                        "Cdiscount",
                        "GrouponGateway",
                        "SBN",
                        "GoogleExpress",
                        "Target_Plus",
                        "WFS"
                    ]
                },
                "OrderSubType": {
                    "format": "int32",
                    "description": "Subtype of order 0 = None ,  1 = Sample ,  2 = Charity ,  3 = eBayNow ,  4 = eBayLocalPickup ,  5 = Same_Day_Delivery ,  6 = GS ,  7 = Prime ,  8 = FBA_Exchange ,  9 = Amazon_Business ,  10 = Amazon_Business_Prime ,  11 = Second_Day ,  12 = Wish_Express ,  13 = SBN ,  15 = Amazon_Global_Express ,  16 = InStorePickUp ",
                    "enum": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16],
                    "type": "integer",
                    "x-enumNames": [
                        "None",
                        "Sample",
                        "Charity",
                        "eBayNow",
                        "eBayLocalPickup",
                        "Same_Day_Delivery",
                        "GS",
                        "Prime",
                        "FBA_Exchange",
                        "Amazon_Business",
                        "Amazon_Business_Prime",
                        "Second_Day",
                        "Wish_Express",
                        "SBN",
                        "Amazon_Global_Express",
                        "InStorePickUp"
                    ]
                },
                "OrderSourceOrderIDList": {
                    "description": "Order source order ID",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "QBExported": {
                    "format": "int32",
                    "description": "Quick Book exported status 0 = No ,  1 = Yes ,  -1 = All ",
                    "enum": [0, 1, -1],
                    "type": "integer",
                    "x-enumNames": ["No", "Yes", "All"]
                },
                "PaymentStatus": {
                    "format": "int32",
                    "description": "Payment status of order 10 = NoPayment ,  11 = NoPaymentOrPartialPayment ,  20 = Authorized ,  30 = Charged ,  40 = Uncleared ,  50 = PartialRefund ,  60 = FullRefund ,  61 = PartialOrFullRefund ,  70 = PartiallyPaid ,  71 = ChargedOrPartialRefund ,  80 = EbayPaid ,  81 = EbayPaidOrPartialPayment ,  99 = PaymentError ,  711 = ChargedOrPartialPaid ,  713 = ChargedOrAuthorized ,  -1 = ALL ",
                    "enum": [10, 11, 20, 30, 40, 50, 60, 61, 70, 71, 80, 81, 99, 711, 713, -1],
                    "type": "integer",
                    "x-enumNames": [
                        "NoPayment",
                        "NoPaymentOrPartialPayment",
                        "Authorized",
                        "Charged",
                        "Uncleared",
                        "PartialRefund",
                        "FullRefund",
                        "PartialOrFullRefund",
                        "PartiallyPaid",
                        "ChargedOrPartialRefund",
                        "EbayPaid",
                        "EbayPaidOrPartialPayment",
                        "PaymentError",
                        "ChargedOrPartialPaid",
                        "ChargedOrAuthorized",
                        "ALL"
                    ]
                },
                "DropShipStatus": {
                    "format": "int32",
                    "description": "Dropship status of order 0 = None ,  1 = Pending ,  2 = Requested ,  3 = Acknowledged ,  4 = Processed ,  5 = PartialProcessed ,  6 = Cancelled ,  7 = Invalid ",
                    "enum": [0, 1, 2, 3, 4, 5, 6, 7],
                    "type": "integer",
                    "x-enumNames": [
                        "None",
                        "Pending",
                        "Requested",
                        "Acknowledged",
                        "Processed",
                        "PartialProcessed",
                        "Cancelled",
                        "Invalid"
                    ]
                },
                "WarehouseID": {
                    "description": "List of IDs of different warehouses",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "UserID": {
                    "format": "int32",
                    "description": "Customer ID",
                    "type": "integer"
                },
                "ShipFromDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "ShipToDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "OrderFromDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "OrderToDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "OrderBy": {
                    "format": "int32",
                    "description": " 0 = OrderID ,  1 = OrderDate ,  2 = OrderStatus ,  3 = ShipDate ,  4 = ShippingStatus ",
                    "enum": [0, 1, 2, 3, 4],
                    "type": "integer",
                    "x-enumNames": [
                        "OrderID",
                        "OrderDate",
                        "OrderStatus",
                        "ShipDate",
                        "ShippingStatus"
                    ]
                },
                "IsAscending": {
                    "type": "boolean"
                },
                "Keyword": {
                    "type": "string"
                },
                "PicklistID": {
                    "description": "Picklist ID",
                    "type": "string"
                },
                "ReplacementOrder": {
                    "format": "int32",
                    "description": "Replacement order status 0 = No ,  1 = Yes ,  -1 = All ",
                    "enum": [0, 1, -1],
                    "type": "integer",
                    "x-enumNames": ["No", "Yes", "All"]
                },
                "PageNumber": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "OrderBaseModel": {
            "required": ["CustomerDetails", "OrderDetails", "ShippingAddress", "BillingAddress"],
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "CustomerDetails": {
                    "$ref": "#/definitions/SellerCloud.Delta.WebApi.Models.Order.Create.OrderInfo.CustomerDetailsModel",
                    "description": "Customer specific data"
                },
                "OrderDetails": {
                    "$ref": "#/definitions/SellerCloud.Delta.WebApi.Models.Order.Create.OrderInfo.OrderDetailsModel",
                    "description": "Sales order specific metadata"
                },
                "GiftDetails": {
                    "$ref": "#/definitions/SellerCloud.Delta.WebApi.Models.Order.Create.OrderInfo.GiftDetailsModel"
                },
                "Products": {
                    "description": "Order products metadata",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.WebApi.Models.Order.Create.Products.CreateOrderItemModel"
                    }
                },
                "ShippingAddress": {
                    "$ref": "#/definitions/SellerCloud.Delta.Models.Entity.Order.Create.Payment.OrderAddressDto",
                    "description": "Order's shipping address"
                },
                "BillingAddress": {
                    "$ref": "#/definitions/SellerCloud.Delta.Models.Entity.Order.Create.Payment.OrderAddressDto",
                    "description": "Order's billing address"
                },
                "ShippingMethodDetails": {
                    "$ref": "#/definitions/SellerCloud.Delta.WebApi.Models.Order.Create.Shipping.ShippingMethodModel",
                    "description": "Shipping Method Details"
                },
                "Notes": {
                    "description": "Order notes",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.Notes.OrderNoteDto"
                    }
                }
            }
        },
        "SellerCloud.Delta.WebApi.Models.Order.Create.OrderInfo.CustomerDetailsModel": {
            "required": ["Email", "FirstName", "LastName"],
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "Email": {
                    "type": "string"
                },
                "FirstName": {
                    "type": "string"
                },
                "LastName": {
                    "type": "string"
                },
                "Business": {
                    "type": "string"
                },
                "IsWholesale": {
                    "type": "boolean"
                }
            }
        },
        "SellerCloud.Delta.WebApi.Models.Order.Create.OrderInfo.OrderDetailsModel": {
            "required": ["CompanyID"],
            "type": "object",
            "properties": {
                "CompanyID": {
                    "format": "int32",
                    "type": "integer"
                },
                "MarketingSource": {
                    "format": "int32",
                    "type": "integer"
                },
                "SalesRepresentative": {
                    "format": "int32",
                    "type": "integer"
                },
                "TaxExempt": {
                    "type": "boolean"
                },
                "GiftOrder": {
                    "type": "boolean"
                },
                "Channel": {
                    "format": "int32",
                    "description": " 0 = Local_Store ,  1 = eBayOrder ,  2 = eBaySingleItem ,  3 = Yahoo ,  4 = Amazon ,  5 = PriceGrabber ,  6 = Website ,  7 = Buy ,  12 = NewEggMall ,  15 = Magento ,  16 = QuickBooks ,  17 = RMS ,  18 = Cart32 ,  19 = Sears ,  20 = FBA ,  21 = Wholesale ,  22 = Overstock ,  23 = NewEggdotcom ,  24 = Etsy ,  25 = Bonanza ,  26 = PriceFalls ,  27 = Wayfair ,  28 = UnbeatableSale ,  29 = VendorCentral ,  30 = Hayneedle ,  31 = SmartBargains ,  32 = uBid ,  33 = ATGStores ,  34 = StacksAndStacks ,  35 = Sharkstores ,  36 = BestBuy ,  37 = Kohls ,  38 = Staples ,  39 = OneStopPlus ,  40 = Meijer ,  41 = Sonsi ,  42 = Walmart ,  43 = HSN ,  44 = NewEgg_Business ,  45 = KMart ,  46 = Wish ,  47 = SPRichards ,  48 = FingerHut ,  49 = Groupon ,  50 = Walmart_Marketplace ,  51 = ShopHQ ,  52 = PriceMinister ,  53 = GS ,  54 = DrugStore ,  55 = MercadoLibre ,  56 = JET ,  57 = ElevenMain ,  58 = SearsVendor ,  59 = Choxi ,  60 = TradeMe ,  61 = Tanga ,  62 = Target ,  63 = GrouponMarketplace ,  64 = Reverb ,  65 = BedBathAndBeyond ,  66 = Dropship_Central ,  67 = DSW ,  68 = Houzz ,  69 = Gilt ,  70 = BestBuyDS ,  71 = TopHatter ,  72 = HomeDepot ,  73 = MassGenie ,  74 = Cdiscount ,  75 = GrouponGateway ,  76 = SBN ,  77 = GoogleExpress ,  78 = Target_Plus ,  79 = WFS ",
                    "enum": [
                        0, 1, 2, 3, 4, 5, 6, 7, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,
                        27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45,
                        46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64,
                        65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79
                    ],
                    "type": "integer",
                    "x-enumNames": [
                        "Local_Store",
                        "eBayOrder",
                        "eBaySingleItem",
                        "Yahoo",
                        "Amazon",
                        "PriceGrabber",
                        "Website",
                        "Buy",
                        "NewEggMall",
                        "Magento",
                        "QuickBooks",
                        "RMS",
                        "Cart32",
                        "Sears",
                        "FBA",
                        "Wholesale",
                        "Overstock",
                        "NewEggdotcom",
                        "Etsy",
                        "Bonanza",
                        "PriceFalls",
                        "Wayfair",
                        "UnbeatableSale",
                        "VendorCentral",
                        "Hayneedle",
                        "SmartBargains",
                        "uBid",
                        "ATGStores",
                        "StacksAndStacks",
                        "Sharkstores",
                        "BestBuy",
                        "Kohls",
                        "Staples",
                        "OneStopPlus",
                        "Meijer",
                        "Sonsi",
                        "Walmart",
                        "HSN",
                        "NewEgg_Business",
                        "KMart",
                        "Wish",
                        "SPRichards",
                        "FingerHut",
                        "Groupon",
                        "Walmart_Marketplace",
                        "ShopHQ",
                        "PriceMinister",
                        "GS",
                        "DrugStore",
                        "MercadoLibre",
                        "JET",
                        "ElevenMain",
                        "SearsVendor",
                        "Choxi",
                        "TradeMe",
                        "Tanga",
                        "Target",
                        "GrouponMarketplace",
                        "Reverb",
                        "BedBathAndBeyond",
                        "Dropship_Central",
                        "DSW",
                        "Houzz",
                        "Gilt",
                        "BestBuyDS",
                        "TopHatter",
                        "HomeDepot",
                        "MassGenie",
                        "Cdiscount",
                        "GrouponGateway",
                        "SBN",
                        "GoogleExpress",
                        "Target_Plus",
                        "WFS"
                    ]
                },
                "OrderSourceOrderID": {
                    "type": "string"
                },
                "DisableInventoryCount": {
                    "type": "boolean"
                },
                "OrderDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "EbaySellingManagerSalesRecordNumber": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.WebApi.Models.Order.Create.OrderInfo.GiftDetailsModel": {
            "type": "object",
            "properties": {
                "UseGiftWrap": {
                    "type": "boolean"
                },
                "GiftMessage": {
                    "type": "string"
                },
                "GiftWrap": {
                    "format": "double",
                    "type": "number"
                },
                "GiftWrapType": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.WebApi.Models.Order.Create.Products.CreateOrderItemModel": {
            "type": "object",
            "properties": {
                "ProductID": {
                    "type": "string"
                },
                "ReferenceID": {
                    "type": "string"
                },
                "ProductName": {
                    "type": "string"
                },
                "SitePrice": {
                    "format": "double",
                    "type": "number"
                },
                "DiscountValue": {
                    "format": "double",
                    "type": "number"
                },
                "DiscountType": {
                    "format": "int32",
                    "description": " 0 = FixedAmount ,  1 = Percentage ",
                    "enum": [0, 1],
                    "type": "integer",
                    "x-enumNames": ["FixedAmount", "Percentage"]
                },
                "Qty": {
                    "format": "int32",
                    "type": "integer"
                },
                "LineTaxTotal": {
                    "format": "float",
                    "type": "number"
                },
                "FinalValueFee": {
                    "format": "double",
                    "type": "number"
                },
                "Notes": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.Entity.Order.Create.Payment.OrderAddressDto": {
            "type": "object",
            "properties": {
                "Business": {
                    "type": "string"
                },
                "FirstName": {
                    "type": "string"
                },
                "MiddleName": {
                    "type": "string"
                },
                "LastName": {
                    "type": "string"
                },
                "Country": {
                    "type": "string"
                },
                "City": {
                    "type": "string"
                },
                "State": {
                    "type": "string"
                },
                "Region": {
                    "type": "string"
                },
                "ZipCode": {
                    "type": "string"
                },
                "Address": {
                    "type": "string"
                },
                "Address2": {
                    "type": "string"
                },
                "Phone": {
                    "type": "string"
                },
                "Fax": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.WebApi.Models.Order.Create.Shipping.ShippingMethodModel": {
            "type": "object",
            "properties": {
                "Carrier": {
                    "type": "string"
                },
                "ShippingMethod": {
                    "type": "string"
                },
                "Weight": {
                    "$ref": "#/definitions/CoreWebAdmin.Delta.DetailsEntity.Models.Common.ShippingWeight"
                },
                "Dimension": {
                    "$ref": "#/definitions/CoreWebAdmin.Delta.DetailsEntity.Models.Common.Dimensions[System.Decimal]"
                },
                "HandlingFee": {
                    "format": "double",
                    "type": "number"
                },
                "ShippingFee": {
                    "format": "double",
                    "type": "number"
                },
                "InsuranceFee": {
                    "format": "double",
                    "type": "number"
                },
                "LockShippingMethod": {
                    "type": "boolean"
                },
                "RushOrder": {
                    "type": "boolean"
                },
                "RequirePinToShip": {
                    "type": "boolean"
                },
                "OtherCarrier": {
                    "type": "string"
                },
                "OtherMethod": {
                    "type": "string"
                },
                "PromiseDate": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Order.Payments.ReceiveManualPaymentDto": {
            "required": ["PaymentMethod"],
            "type": "object",
            "properties": {
                "Amount": {
                    "format": "double",
                    "type": "number"
                },
                "Notes": {
                    "type": "string"
                },
                "PaymentMethod": {
                    "format": "int32",
                    "description": " 2 = PayPal ,  4 = Cash ,  5 = GiftCertificate ,  6 = Other ,  7 = Telephone ,  8 = Email ,  10 = PurchaseOrder ,  19 = Wire ",
                    "enum": [2, 4, 5, 6, 7, 8, 10, 19],
                    "type": "integer",
                    "x-enumNames": [
                        "PayPal",
                        "Cash",
                        "GiftCertificate",
                        "Other",
                        "Telephone",
                        "Email",
                        "PurchaseOrder",
                        "Wire"
                    ]
                },
                "ReferenceNumber": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Order.Payments.ReceiveCheckDto": {
            "required": ["CheckNumber"],
            "type": "object",
            "properties": {
                "Amount": {
                    "format": "double",
                    "type": "number"
                },
                "Notes": {
                    "type": "string"
                },
                "CheckNumber": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Picklist.GeneratePicklistRequest": {
            "required": ["Title", "WarehouseId", "Orders"],
            "type": "object",
            "properties": {
                "Title": {
                    "type": "string"
                },
                "WarehouseId": {
                    "format": "int32",
                    "type": "integer"
                },
                "Orders": {
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Common.CreateEntityWithQueuedJobResponse": {
            "type": "object",
            "properties": {
                "QueuedJobId": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Common.PaginationResultsDto[SellerCloud.Delta.Models.Details.Concrete.PickList.PickListDetailsProductDto]": {
            "type": "object",
            "properties": {
                "Results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.Details.Concrete.PickList.PickListDetailsProductDto"
                    }
                },
                "TotalResults": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.Details.Concrete.PickList.PickListDetailsProductDto": {
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int64",
                    "type": "integer"
                },
                "ProductID": {
                    "type": "string"
                },
                "ProductName": {
                    "type": "string"
                },
                "Qty": {
                    "format": "int32",
                    "type": "integer"
                },
                "QtyPicked": {
                    "format": "int32",
                    "type": "integer"
                },
                "QtySorted": {
                    "format": "int32",
                    "type": "integer"
                },
                "QtyShipped": {
                    "format": "int32",
                    "type": "integer"
                },
                "Location": {
                    "type": "string"
                },
                "Package": {
                    "type": "string"
                },
                "InventoryAvailableQty": {
                    "format": "int32",
                    "type": "integer"
                },
                "ReplacementCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "ReplacementSKU": {
                    "type": "string"
                },
                "ReplacementLOC": {
                    "type": "string"
                },
                "UPC": {
                    "type": "string"
                },
                "Purchaser": {
                    "type": "string"
                },
                "ProductWeight": {
                    "format": "double",
                    "type": "number"
                },
                "OrderIdList": {
                    "type": "string"
                }
            }
        },
        "BVSoftware.BVC.Core.Catalog.ProductConditionInHouse": {
            "type": "object",
            "properties": {
                "ConditionNote": {
                    "type": "string"
                },
                "NewEggDotComConditionID": {
                    "format": "int32",
                    "description": " 0 = New ,  1 = Refurbished ,  2 = UsedLikeNew ,  3 = UsedVeryGood ,  4 = UsedGood ,  5 = UsedAcceptable ,  -1 = Unknown ",
                    "enum": [0, 1, 2, 3, 4, 5, -1],
                    "type": "integer",
                    "x-enumNames": [
                        "New",
                        "Refurbished",
                        "UsedLikeNew",
                        "UsedVeryGood",
                        "UsedGood",
                        "UsedAcceptable",
                        "Unknown"
                    ]
                },
                "SearsCondition": {
                    "format": "int32",
                    "description": " 0 = New ,  1 = Refurbished_Manufacturer_Authorized ,  3 = Used_Like_New ,  4 = Used_Very_Good ,  5 = Used_Good ,  6 = Used_Acceptable ,  7 = Used_Poor ,  101 = Refurbished_Seller ",
                    "enum": [0, 1, 3, 4, 5, 6, 7, 101],
                    "type": "integer",
                    "x-enumNames": [
                        "New",
                        "Refurbished_Manufacturer_Authorized",
                        "Used_Like_New",
                        "Used_Very_Good",
                        "Used_Good",
                        "Used_Acceptable",
                        "Used_Poor",
                        "Refurbished_Seller"
                    ]
                },
                "BuyDotComConditionID": {
                    "format": "int32",
                    "description": " 0 = Default ,  1 = Brand_New ,  2 = Used_Like_New ,  3 = Used_Very_Good ,  4 = Used_Good ,  5 = Used_Acceptable ,  10 = Refurbished ,  11 = Open_Box ",
                    "enum": [0, 1, 2, 3, 4, 5, 10, 11],
                    "type": "integer",
                    "x-enumNames": [
                        "Default",
                        "Brand_New",
                        "Used_Like_New",
                        "Used_Very_Good",
                        "Used_Good",
                        "Used_Acceptable",
                        "Refurbished",
                        "Open_Box"
                    ]
                },
                "eBayConditionID": {
                    "format": "int32",
                    "description": " 0 = Unknown ,  1000 = New ,  1500 = New_Other ,  1750 = New_With_Defects ,  2000 = Manufacturer_Refurbished ,  2010 = Excellent_Refurbished ,  2020 = Very_Good_Refurbished ,  2030 = Good_Refurbished ,  2500 = Seller_Refurbished ,  2750 = Like_New ,  3000 = Used ,  4000 = Very_Good ,  5000 = Good ,  6000 = Acceptable ,  7000 = For_Parts_Not_Working ",
                    "enum": [
                        0, 1000, 1500, 1750, 2000, 2010, 2020, 2030, 2500, 2750, 3000, 4000, 5000,
                        6000, 7000
                    ],
                    "type": "integer",
                    "x-enumNames": [
                        "Unknown",
                        "New",
                        "New_Other",
                        "New_With_Defects",
                        "Manufacturer_Refurbished",
                        "Excellent_Refurbished",
                        "Very_Good_Refurbished",
                        "Good_Refurbished",
                        "Seller_Refurbished",
                        "Like_New",
                        "Used",
                        "Very_Good",
                        "Good",
                        "Acceptable",
                        "For_Parts_Not_Working"
                    ]
                },
                "ClientID": {
                    "format": "int32",
                    "type": "integer"
                },
                "AmazonConditionID": {
                    "format": "int32",
                    "description": " 0 = Unknown ,  1 = Used_Like_New ,  2 = Used_Very_Good ,  3 = Used_Good ,  4 = Used_Acceptable ,  5 = Collectible_Like_New ,  6 = Collectible_Very_Good ,  7 = Collectible_Good ,  8 = Collectible_Acceptable ,  10 = Refurbished ,  11 = New ",
                    "enum": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11],
                    "type": "integer",
                    "x-enumNames": [
                        "Unknown",
                        "Used_Like_New",
                        "Used_Very_Good",
                        "Used_Good",
                        "Used_Acceptable",
                        "Collectible_Like_New",
                        "Collectible_Very_Good",
                        "Collectible_Good",
                        "Collectible_Acceptable",
                        "Refurbished",
                        "New"
                    ]
                },
                "SortOrder": {
                    "format": "int32",
                    "type": "integer"
                },
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ConditionName": {
                    "type": "string"
                },
                "ReverbCondition": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.WebApi.Models.Product.AddProductImageRequest": {
            "type": "object",
            "properties": {
                "ProductID": {
                    "type": "string"
                },
                "Content": {
                    "type": "string"
                },
                "FileName": {
                    "type": "string"
                },
                "Caption": {
                    "type": "string"
                },
                "Properties": {
                    "$ref": "#/definitions/SellerCloud.Delta.WebApi.Models.Product.ProductImageProperties"
                }
            }
        },
        "SellerCloud.Delta.WebApi.Models.Product.ProductImageProperties": {
            "type": "object",
            "properties": {
                "IsDefault": {
                    "type": "boolean"
                },
                "IsMainDescriptionImage": {
                    "type": "boolean"
                },
                "IsOtherImage": {
                    "type": "boolean"
                },
                "IsSupplementImage": {
                    "type": "boolean"
                },
                "IsSwatchImage": {
                    "type": "boolean"
                },
                "SupplementImageOrder": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Product.GetProductImage": {
            "type": "object",
            "properties": {
                "ImageID": {
                    "format": "int32",
                    "type": "integer"
                },
                "Url": {
                    "type": "string"
                },
                "IsDefault": {
                    "type": "boolean"
                },
                "IsMainDescriptionImage": {
                    "type": "boolean"
                },
                "OriginalImageName": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Product.GetProductsImagesRequest": {
            "type": "object",
            "properties": {
                "ProductsIDs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Product.ProductImages": {
            "type": "object",
            "properties": {
                "ProductID": {
                    "type": "string"
                },
                "Images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Product.GetProductImage"
                    }
                }
            }
        },
        "SellerCloud.Delta.WebApi.Models.Product.AddSingleProductModel": {
            "required": ["ProductName", "ProductSKU", "ProductTypeName"],
            "type": "object",
            "properties": {
                "CompanyId": {
                    "format": "int32",
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer"
                },
                "ProductName": {
                    "type": "string"
                },
                "ProductSKU": {
                    "type": "string"
                },
                "ProductTypeName": {
                    "type": "string"
                },
                "PurchaserId": {
                    "format": "int32",
                    "type": "integer"
                },
                "SiteCost": {
                    "format": "double",
                    "type": "number"
                },
                "DefaultPrice": {
                    "format": "double",
                    "type": "number"
                },
                "ManufacturerId": {
                    "format": "int32",
                    "type": "integer"
                },
                "AutoAssignUPC": {
                    "type": "boolean"
                },
                "UPC": {
                    "type": "string"
                },
                "ProductNotes": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Product.UpdateCustomColumnsRequest": {
            "required": ["ProductID"],
            "type": "object",
            "properties": {
                "ProductID": {
                    "type": "string"
                },
                "CustomColumns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Base.UpdateCustomColumn"
                    }
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.PurchaseOrder.PoItemsDto": {
            "type": "object",
            "properties": {
                "PoCaseQtyEnabled": {
                    "type": "boolean"
                },
                "Items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.PurchaseOrder.PoItemDto"
                    }
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.PurchaseOrder.PoItemDto": {
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ProductID": {
                    "type": "string"
                },
                "ProductName": {
                    "type": "string"
                },
                "QtyUnitsOrdered": {
                    "format": "int32",
                    "type": "integer"
                },
                "UnitPrice": {
                    "format": "double",
                    "type": "number"
                },
                "QtyCasesOrdered": {
                    "format": "int32",
                    "type": "integer"
                },
                "QtyUnitsPerCase": {
                    "format": "int32",
                    "type": "integer"
                },
                "CasePrice": {
                    "format": "double",
                    "type": "number"
                },
                "DiscountType": {
                    "format": "int32",
                    "description": " 0 = FixedAmount ,  1 = Percentage ",
                    "enum": [0, 1],
                    "type": "integer",
                    "x-enumNames": ["FixedAmount", "Percentage"]
                },
                "DiscountValue": {
                    "format": "double",
                    "type": "number"
                },
                "ExpectedDeliveryDate": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.PurchaseOrder.PoItemsUpdateDto": {
            "required": ["Items"],
            "type": "object",
            "properties": {
                "Items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.PurchaseOrder.PoItemUpdateDto"
                    }
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.PurchaseOrder.PoItemUpdateDto": {
            "required": ["ID"],
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "QtyUnitsOrdered": {
                    "format": "int32",
                    "type": "integer"
                },
                "UnitPrice": {
                    "format": "double",
                    "type": "number"
                },
                "QtyCasesOrdered": {
                    "format": "int32",
                    "type": "integer"
                },
                "QtyUnitsPerCase": {
                    "format": "int32",
                    "type": "integer"
                },
                "CasePrice": {
                    "format": "double",
                    "type": "number"
                },
                "ExpectedDeliveryDate": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.PurchaseOrder.CreatePoItemDto": {
            "required": ["ProductID"],
            "type": "object",
            "properties": {
                "ProductID": {
                    "type": "string"
                },
                "QtyUnitsOrdered": {
                    "format": "int32",
                    "type": "integer"
                },
                "UnitPrice": {
                    "format": "double",
                    "type": "number"
                },
                "QtyCasesOrdered": {
                    "format": "int32",
                    "type": "integer"
                },
                "QtyUnitsPerCase": {
                    "format": "int32",
                    "type": "integer"
                },
                "CasePrice": {
                    "format": "double",
                    "type": "number"
                },
                "DiscountType": {
                    "format": "int32",
                    "description": " 0 = FixedAmount ,  1 = Percentage ",
                    "enum": [0, 1],
                    "type": "integer",
                    "x-enumNames": ["FixedAmount", "Percentage"]
                },
                "DiscountValue": {
                    "format": "double",
                    "type": "number"
                },
                "WarehouseID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ItemNotes": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.PurchaseOrder.ReceivePoRequest": {
            "required": ["Items"],
            "type": "object",
            "properties": {
                "ReceiveInvoiceNumber": {
                    "type": "string"
                },
                "VendorOrderId": {
                    "type": "string"
                },
                "ShippingCost": {
                    "format": "double",
                    "type": "number"
                },
                "Items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.PurchaseOrder.ReceivePoItem"
                    }
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.PurchaseOrder.ReceivePoItem": {
            "required": ["ID"],
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "QtyToReceive": {
                    "format": "int32",
                    "type": "integer"
                },
                "CaseQtyToReceive": {
                    "format": "int32",
                    "type": "integer"
                },
                "WarehouseId": {
                    "format": "int32",
                    "type": "integer"
                },
                "WarehouseBinId": {
                    "format": "int32",
                    "type": "integer"
                },
                "UnitPrice": {
                    "format": "double",
                    "type": "number"
                },
                "DiscountValue": {
                    "format": "double",
                    "type": "number"
                },
                "DiscountType": {
                    "format": "int32",
                    "description": " 0 = FixedAmount ,  1 = Percentage ",
                    "enum": [0, 1],
                    "type": "integer",
                    "x-enumNames": ["FixedAmount", "Percentage"]
                },
                "LocationNotes": {
                    "type": "string"
                },
                "ListPrice": {
                    "format": "double",
                    "type": "number"
                },
                "UPC": {
                    "type": "string"
                },
                "WeightLbs": {
                    "format": "double",
                    "type": "number"
                },
                "WeightOz": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "SellerCloud.Delta.WebApi.Models.PurchaseOrder.UpdatePurchaseOrderQBExportStatusRequest": {
            "type": "object",
            "properties": {
                "PurchaseIDs": {
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "Exported": {
                    "type": "boolean"
                }
            }
        },
        "SellerCloud.Delta.WebApi.Models.ClientApi.Purchase.PoSerialsRestViewModel": {
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ProductID": {
                    "type": "string"
                },
                "Price": {
                    "format": "double",
                    "type": "number"
                },
                "Serials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.WebApi.Models.ClientApi.Purchase.PoSerialItemRestViewModel"
                    }
                }
            }
        },
        "SellerCloud.Delta.WebApi.Models.ClientApi.Purchase.PoSerialItemRestViewModel": {
            "type": "object",
            "properties": {
                "SerialNumber": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.PurchaseOrder.CreatePoRequestDto": {
            "required": ["CompanyID", "VendorID", "POType", "CaseQtyMode", "Products"],
            "type": "object",
            "properties": {
                "CompanyID": {
                    "format": "int32",
                    "type": "integer"
                },
                "VendorID": {
                    "format": "int32",
                    "type": "integer"
                },
                "POType": {
                    "format": "int32",
                    "description": " 0 = PurchaseOrder ,  1 = CreditMemo ,  2 = VendorOffer ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["PurchaseOrder", "CreditMemo", "VendorOffer"]
                },
                "CaseQtyMode": {
                    "type": "boolean"
                },
                "DefaultWarehouseID": {
                    "format": "int32",
                    "type": "integer"
                },
                "Description": {
                    "type": "string"
                },
                "VendorNote": {
                    "type": "string"
                },
                "PaymentTermID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ExpectedDeliveryDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "Products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.PurchaseOrder.CreatePoItemDto"
                    }
                },
                "BillingAddress": {
                    "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Common.AddressWithSeparateAddrLinesDto"
                },
                "ShippingAddress": {
                    "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Common.AddressWithSeparateAddrLinesDto"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Common.CreateEntityResponse[System.Int32]": {
            "type": "object",
            "properties": {
                "Id": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.PurchaseOrder.PurchaseOrderFilters": {
            "type": "object",
            "properties": {
                "POIds": {
                    "description": "List of IDs of different purchase orders",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "CompanyIDList": {
                    "description": "List of IDs of different companies",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "POStatuses": {
                    "description": "List of purchase order statuses 0 = Saved ,  1 = Ordered ,  2 = Pending ,  3 = Received ,  4 = Cancelled ,  5 = Completed ,  -1 = Select ",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "description": " 0 = Saved ,  1 = Ordered ,  2 = Pending ,  3 = Received ,  4 = Cancelled ,  5 = Completed ,  -1 = Select ",
                        "enum": [0, 1, 2, 3, 4, 5, -1],
                        "type": "integer"
                    },
                    "x-enumNames": [
                        "Saved",
                        "Ordered",
                        "Pending",
                        "Received",
                        "Cancelled",
                        "Completed",
                        "Select"
                    ]
                },
                "ReceiveWarehouseID": {
                    "description": "List of receiving warehouses",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "ShippingStatuses": {
                    "description": "List of shipping statuses 0 = None ,  1 = PartiallyShipped ,  2 = FullyShipped ",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "description": " 0 = None ,  1 = PartiallyShipped ,  2 = FullyShipped ",
                        "enum": [0, 1, 2],
                        "type": "integer"
                    },
                    "x-enumNames": ["None", "PartiallyShipped", "FullyShipped"]
                },
                "ReceivedStatuses": {
                    "description": "List of received statuses 0 = None ,  1 = PartiallyReceived ,  2 = FullyReceived ",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "description": " 0 = None ,  1 = PartiallyReceived ,  2 = FullyReceived ",
                        "enum": [0, 1, 2],
                        "type": "integer"
                    },
                    "x-enumNames": ["None", "PartiallyReceived", "FullyReceived"]
                },
                "CreateDateFrom": {
                    "format": "date-time",
                    "description": "Create date from",
                    "type": "string"
                },
                "CreateDateTo": {
                    "format": "date-time",
                    "description": "Create date to",
                    "type": "string"
                },
                "PaymentStatus": {
                    "description": "List of payment statuses.\r\nFilter should be utilized if client setting \"Enable vendor invoices workflow\" is disabled. 10 = NoPayment ,  20 = Authorized ,  30 = Charged ,  40 = Uncleared ,  50 = PartiallyRefund ,  60 = FullRefund ,  70 = PartialPayment ,  80 = eBayPaid ,  99 = PaymentError ",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "description": " 10 = NoPayment ,  20 = Authorized ,  30 = Charged ,  40 = Uncleared ,  50 = PartiallyRefund ,  60 = FullRefund ,  70 = PartialPayment ,  80 = eBayPaid ,  99 = PaymentError ",
                        "enum": [10, 20, 30, 40, 50, 60, 70, 80, 99],
                        "type": "integer"
                    },
                    "x-enumNames": [
                        "NoPayment",
                        "Authorized",
                        "Charged",
                        "Uncleared",
                        "PartiallyRefund",
                        "FullRefund",
                        "PartialPayment",
                        "eBayPaid",
                        "PaymentError"
                    ]
                },
                "InventoryCountEnabled": {
                    "format": "int32",
                    "description": "Is Inventory Count Enabled\r\n\r\n0: No\r\n1: Yes",
                    "type": "integer"
                },
                "VendorInvoiced": {
                    "format": "int32",
                    "description": "Is Vendor Invoiced\r\nThis filter should only be utilized if client setting \"Enable vendor invoices workflow\" is enabled. 0 = NotInvoiced ,  1 = Invoiced ,  2 = PartiallyInvoiced ,  -1 = All ",
                    "enum": [0, 1, 2, -1],
                    "type": "integer",
                    "x-enumNames": ["NotInvoiced", "Invoiced", "PartiallyInvoiced", "All"]
                },
                "Approved": {
                    "format": "int32",
                    "description": "Is Approved\r\n\r\n0: No\r\n1: Yes",
                    "type": "integer"
                },
                "ReceiveDateFrom": {
                    "format": "date-time",
                    "description": "Receive date from",
                    "type": "string"
                },
                "ReceiveDateTo": {
                    "format": "date-time",
                    "description": "Receive date to",
                    "type": "string"
                },
                "UpdatedDateFrom": {
                    "format": "date-time",
                    "description": "Updated date from",
                    "type": "string"
                },
                "UpdatedDateTo": {
                    "format": "date-time",
                    "description": "Updated date to",
                    "type": "string"
                },
                "Keyword": {
                    "type": "string"
                },
                "QBExported": {
                    "format": "int32",
                    "description": "Quick Book exported status 0 = No ,  1 = Yes ,  -1 = All ",
                    "enum": [0, 1, -1],
                    "type": "integer",
                    "x-enumNames": ["No", "Yes", "All"]
                },
                "PageNumber": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Base.GetAllResponse[SellerCloud.Delta.Models.ClientAPI.PurchaseOrder.PoMultipleDataDto]": {
            "type": "object",
            "properties": {
                "Items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.PurchaseOrder.PoMultipleDataDto"
                    }
                },
                "TotalResults": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.PurchaseOrder.PoMultipleDataDto": {
            "type": "object",
            "properties": {
                "EmailSentCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "DisableInventoryCount": {
                    "type": "boolean"
                },
                "POType": {
                    "format": "int32",
                    "type": "integer"
                },
                "CancelledPOID": {
                    "format": "int32",
                    "type": "integer"
                },
                "TotalBalance": {
                    "format": "double",
                    "type": "number"
                },
                "TotalBalanceNotReceivedGood": {
                    "format": "double",
                    "type": "number"
                },
                "VendorID": {
                    "format": "int32",
                    "type": "integer"
                },
                "PurchaseTitle": {
                    "type": "string"
                },
                "CreatedOn": {
                    "format": "date-time",
                    "type": "string"
                },
                "CreatedBy": {
                    "format": "int32",
                    "type": "integer"
                },
                "OrderTotal": {
                    "format": "double",
                    "type": "number"
                },
                "TaxTotal": {
                    "format": "double",
                    "type": "number"
                },
                "ShippingTotal": {
                    "format": "double",
                    "type": "number"
                },
                "GrandTotal": {
                    "format": "double",
                    "type": "number"
                },
                "DateOrdered": {
                    "format": "date-time",
                    "type": "string"
                },
                "LastRevisedOn": {
                    "format": "date-time",
                    "type": "string"
                },
                "RevisedBy": {
                    "format": "int32",
                    "type": "integer"
                },
                "PurchaseOrderStatus": {
                    "format": "int32",
                    "type": "integer"
                },
                "PaymentStatus": {
                    "format": "int32",
                    "type": "integer"
                },
                "ExtraCharges": {
                    "format": "double",
                    "type": "number"
                },
                "TotalRefunded": {
                    "format": "double",
                    "type": "number"
                },
                "PurchaseOrdersShippingStatus": {
                    "format": "int32",
                    "type": "integer"
                },
                "TrackingNumber": {
                    "type": "string"
                },
                "TrackingNumbers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.PurchaseOrder.PoTrackingNumberDto"
                    }
                },
                "ShippedOn": {
                    "format": "date-time",
                    "type": "string"
                },
                "CourierService": {
                    "type": "string"
                },
                "PurchaseOrdersPriority": {
                    "format": "int32",
                    "type": "integer"
                },
                "ReceivingStatus": {
                    "format": "int32",
                    "type": "integer"
                },
                "CompanyID": {
                    "format": "int32",
                    "type": "integer"
                },
                "PurchaseOrdersApproved": {
                    "type": "boolean"
                },
                "DropShipOrderNumber": {
                    "format": "int32",
                    "type": "integer"
                },
                "VendorInvoiceNumber": {
                    "type": "string"
                },
                "VendorInvoiceFileName": {
                    "type": "string"
                },
                "VendorInvoiceFileNameOriginal": {
                    "type": "string"
                },
                "Invoices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.PurchaseOrder.InvoiceDto"
                    }
                },
                "Memo": {
                    "type": "string"
                },
                "ExpectedDeliveryDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "DiscountTotal": {
                    "format": "double",
                    "type": "number"
                },
                "bExported": {
                    "type": "boolean"
                },
                "DisplayName": {
                    "type": "string"
                },
                "CM": {
                    "format": "int32",
                    "type": "integer"
                },
                "NotesCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "PaidOn": {
                    "format": "date-time",
                    "type": "string"
                },
                "UnitCounts": {
                    "format": "int32",
                    "type": "integer"
                },
                "PurchaseOrderCreditMemo": {
                    "type": "boolean"
                },
                "WarehouseID": {
                    "format": "int32",
                    "type": "integer"
                },
                "Items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.Manage.Concrete.PurchaseOrderItemDto"
                    }
                },
                "RequestedShippingCarrier": {
                    "type": "string"
                },
                "RequestedShippingService": {
                    "type": "string"
                },
                "ShipToAddress": {
                    "$ref": "#/definitions/BVSoftware.BVC.Core.Contacts.Address"
                },
                "ID": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.PurchaseOrder.PoTrackingNumberDto": {
            "type": "object",
            "properties": {
                "ShippedOn": {
                    "format": "date-time",
                    "type": "string"
                },
                "ShippingCarrier": {
                    "type": "string"
                },
                "TrackingNumber": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.PurchaseOrder.InvoiceDto": {
            "type": "object",
            "properties": {
                "InvoiceNumber": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.Manage.Concrete.PurchaseOrderItemDto": {
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "SKU": {
                    "type": "string"
                },
                "VendorSKU": {
                    "type": "string"
                },
                "ProductName": {
                    "type": "string"
                },
                "QtyOrdered": {
                    "format": "int32",
                    "type": "integer"
                },
                "QtyReceived": {
                    "format": "int32",
                    "type": "integer"
                },
                "UnitPrice": {
                    "format": "double",
                    "type": "number"
                },
                "AdjustedPrice": {
                    "format": "double",
                    "type": "number"
                },
                "LineTotal": {
                    "format": "double",
                    "type": "number"
                },
                "ExpectedDeliveryDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "ItemNotes": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.Details.Concrete.PurchaseOrders.PoDetailsDto": {
            "type": "object",
            "properties": {
                "Purchase": {
                    "$ref": "#/definitions/SellerCloud.Delta.Models.Details.Concrete.PurchaseOrders.PoContent"
                },
                "RelatedPurchaseOrders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.Details.Concrete.PurchaseOrders.PoSplitRelatedItemDto"
                    }
                },
                "VendorAndInvoice": {
                    "$ref": "#/definitions/SellerCloud.Delta.Models.Details.Concrete.PurchaseOrders.PoVendorAndInvoiceContent"
                },
                "Changes": {
                    "$ref": "#/definitions/SellerCloud.Delta.Models.Details.Concrete.PurchaseOrders.PoChangesDto"
                },
                "RelatedItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.Details.Concrete.PurchaseOrders.PoRelatedItemDto"
                    }
                },
                "TotalInfo": {
                    "$ref": "#/definitions/SellerCloud.Delta.Models.Details.Concrete.PurchaseOrders.PoTotalInfoContent"
                },
                "CustomColumns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.CustomColumns.CustomColumnValueDto"
                    }
                },
                "Metadata": {
                    "$ref": "#/definitions/SellerCloud.Delta.Models.Details.Concrete.PurchaseOrders.PurchaseOrderMetadata"
                },
                "Statuses": {
                    "$ref": "#/definitions/SellerCloud.Delta.Models.Details.Concrete.PurchaseOrders.PurchaseOrderStatusesDto"
                },
                "ShowProductImageForItems": {
                    "type": "boolean"
                },
                "EnablePoPrSellQuantity": {
                    "type": "boolean"
                },
                "NotesCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "IsModified": {
                    "type": "boolean"
                }
            }
        },
        "SellerCloud.Delta.Models.Details.Concrete.PurchaseOrders.PoContent": {
            "type": "object",
            "properties": {
                "POId": {
                    "format": "int32",
                    "type": "integer"
                },
                "CompanyId": {
                    "format": "int32",
                    "type": "integer"
                },
                "VendorId": {
                    "format": "int32",
                    "type": "integer"
                },
                "OrderedOn": {
                    "format": "date-time",
                    "type": "string"
                },
                "RequestedOn": {
                    "format": "date-time",
                    "type": "string"
                },
                "OrderType": {
                    "format": "int32",
                    "description": " 0 = Default ,  1 = Regular ,  2 = DropShip ,  3 = WrapAndLabel ",
                    "enum": [0, 1, 2, 3],
                    "type": "integer",
                    "x-enumNames": ["Default", "Regular", "DropShip", "WrapAndLabel"]
                },
                "OrderTypeEnable": {
                    "type": "boolean"
                },
                "POType": {
                    "format": "int32",
                    "description": " 0 = PurchaseOrder ,  1 = CreditMemo ,  2 = VendorOffer ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["PurchaseOrder", "CreditMemo", "VendorOffer"]
                },
                "Description": {
                    "type": "string"
                },
                "DefaultWarehouseID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ExpectedDelivery": {
                    "format": "date-time",
                    "type": "string"
                },
                "RequireExpectedDeliveryDate": {
                    "type": "boolean"
                },
                "CancelByDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "CreditMemoID": {
                    "format": "int32",
                    "type": "integer"
                },
                "CurrencyCode": {
                    "format": "int32",
                    "description": " 0 = USD ,  1 = GBP ,  2 = JPY ,  3 = EUR ,  4 = CAD ,  5 = AUD ,  6 = MXN ,  7 = TWD ,  8 = CNY ,  9 = AFA ,  10 = ALL ,  11 = DZD ,  12 = ADP ,  13 = AOA ,  14 = ARS ,  15 = AMD ,  16 = AWG ,  17 = AZM ,  18 = BSD ,  19 = BHD ,  20 = BDT ,  21 = BBD ,  22 = BYR ,  23 = BZD ,  24 = BMD ,  25 = BTN ,  26 = INR ,  27 = BOV ,  28 = BOB ,  29 = BAM ,  30 = BWP ,  31 = BRL ,  32 = BND ,  33 = BGL ,  34 = BGN ,  35 = BIF ,  36 = KHR ,  37 = CVE ,  38 = KYD ,  39 = XAF ,  40 = CLF ,  41 = CLP ,  42 = COP ,  43 = KMF ,  44 = CDF ,  45 = CRC ,  46 = HRK ,  47 = CUP ,  48 = CYP ,  49 = CZK ,  50 = DKK ,  51 = DJF ,  52 = DOP ,  53 = TPE ,  54 = ECV ,  55 = ECS ,  56 = EGP ,  57 = SVC ,  58 = ERN ,  59 = EEK ,  60 = ETB ,  61 = FKP ,  62 = FJD ,  63 = GMD ,  64 = GEL ,  65 = GHC ,  66 = GIP ,  67 = GTQ ,  68 = GNF ,  69 = GWP ,  70 = GYD ,  71 = HTG ,  72 = HNL ,  73 = HKD ,  74 = HUF ,  75 = ISK ,  76 = IDR ,  77 = IRR ,  78 = IQD ,  79 = ILS ,  80 = JMD ,  81 = JOD ,  82 = KZT ,  83 = KES ,  84 = KPW ,  85 = KRW ,  86 = KWD ,  87 = KGS ,  88 = LAK ,  89 = LVL ,  90 = LBP ,  91 = LSL ,  92 = LRD ,  93 = LYD ,  94 = CHF ,  95 = LTL ,  96 = MOP ,  97 = MKD ,  98 = MGF ,  99 = MWK ,  100 = MYR ,  101 = MVR ,  102 = MTL ,  103 = MRO ,  104 = MUR ,  105 = MXV ,  106 = MDL ,  107 = MNT ,  108 = XCD ,  109 = MZM ,  110 = MMK ,  111 = ZAR ,  112 = NAD ,  113 = NPR ,  114 = ANG ,  115 = XPF ,  116 = NZD ,  117 = NIO ,  118 = NGN ,  119 = NOK ,  120 = OMR ,  121 = PKR ,  122 = PAB ,  123 = PGK ,  124 = PYG ,  125 = PEN ,  126 = PHP ,  127 = PLN ,  128 = QAR ,  129 = ROL ,  130 = RUB ,  131 = RUR ,  132 = RWF ,  133 = SHP ,  134 = WST ,  135 = STD ,  136 = SAR ,  137 = SCR ,  138 = SLL ,  139 = SGD ,  140 = SKK ,  141 = SIT ,  142 = SBD ,  143 = SOS ,  144 = LKR ,  145 = SDD ,  146 = SRG ,  147 = SZL ,  148 = SEK ,  149 = SYP ,  150 = TJS ,  151 = TZS ,  152 = THB ,  153 = XOF ,  154 = TOP ,  155 = TTD ,  156 = TND ,  157 = TRL ,  158 = TMM ,  159 = UGX ,  160 = UAH ,  161 = AED ,  162 = USS ,  163 = USN ,  164 = UYU ,  165 = UZS ,  166 = VUV ,  167 = VEB ,  168 = VND ,  169 = MAD ,  170 = YER ,  171 = YUM ,  172 = ZMK ,  173 = ZWD ,  174 = ATS ",
                    "enum": [
                        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
                        21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
                        40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,
                        59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
                        78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
                        97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112,
                        113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
                        128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
                        143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
                        158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
                        173, 174
                    ],
                    "type": "integer",
                    "x-enumNames": [
                        "USD",
                        "GBP",
                        "JPY",
                        "EUR",
                        "CAD",
                        "AUD",
                        "MXN",
                        "TWD",
                        "CNY",
                        "AFA",
                        "ALL",
                        "DZD",
                        "ADP",
                        "AOA",
                        "ARS",
                        "AMD",
                        "AWG",
                        "AZM",
                        "BSD",
                        "BHD",
                        "BDT",
                        "BBD",
                        "BYR",
                        "BZD",
                        "BMD",
                        "BTN",
                        "INR",
                        "BOV",
                        "BOB",
                        "BAM",
                        "BWP",
                        "BRL",
                        "BND",
                        "BGL",
                        "BGN",
                        "BIF",
                        "KHR",
                        "CVE",
                        "KYD",
                        "XAF",
                        "CLF",
                        "CLP",
                        "COP",
                        "KMF",
                        "CDF",
                        "CRC",
                        "HRK",
                        "CUP",
                        "CYP",
                        "CZK",
                        "DKK",
                        "DJF",
                        "DOP",
                        "TPE",
                        "ECV",
                        "ECS",
                        "EGP",
                        "SVC",
                        "ERN",
                        "EEK",
                        "ETB",
                        "FKP",
                        "FJD",
                        "GMD",
                        "GEL",
                        "GHC",
                        "GIP",
                        "GTQ",
                        "GNF",
                        "GWP",
                        "GYD",
                        "HTG",
                        "HNL",
                        "HKD",
                        "HUF",
                        "ISK",
                        "IDR",
                        "IRR",
                        "IQD",
                        "ILS",
                        "JMD",
                        "JOD",
                        "KZT",
                        "KES",
                        "KPW",
                        "KRW",
                        "KWD",
                        "KGS",
                        "LAK",
                        "LVL",
                        "LBP",
                        "LSL",
                        "LRD",
                        "LYD",
                        "CHF",
                        "LTL",
                        "MOP",
                        "MKD",
                        "MGF",
                        "MWK",
                        "MYR",
                        "MVR",
                        "MTL",
                        "MRO",
                        "MUR",
                        "MXV",
                        "MDL",
                        "MNT",
                        "XCD",
                        "MZM",
                        "MMK",
                        "ZAR",
                        "NAD",
                        "NPR",
                        "ANG",
                        "XPF",
                        "NZD",
                        "NIO",
                        "NGN",
                        "NOK",
                        "OMR",
                        "PKR",
                        "PAB",
                        "PGK",
                        "PYG",
                        "PEN",
                        "PHP",
                        "PLN",
                        "QAR",
                        "ROL",
                        "RUB",
                        "RUR",
                        "RWF",
                        "SHP",
                        "WST",
                        "STD",
                        "SAR",
                        "SCR",
                        "SLL",
                        "SGD",
                        "SKK",
                        "SIT",
                        "SBD",
                        "SOS",
                        "LKR",
                        "SDD",
                        "SRG",
                        "SZL",
                        "SEK",
                        "SYP",
                        "TJS",
                        "TZS",
                        "THB",
                        "XOF",
                        "TOP",
                        "TTD",
                        "TND",
                        "TRL",
                        "TMM",
                        "UGX",
                        "UAH",
                        "AED",
                        "USS",
                        "USN",
                        "UYU",
                        "UZS",
                        "VUV",
                        "VEB",
                        "VND",
                        "MAD",
                        "YER",
                        "YUM",
                        "ZMK",
                        "ZWD",
                        "ATS"
                    ]
                },
                "CurrencyRateToUSD": {
                    "format": "double",
                    "type": "number"
                },
                "CurrencyRateFromUSD": {
                    "format": "double",
                    "type": "number"
                },
                "ReceivingStatus": {
                    "format": "int32",
                    "description": " 0 = None ,  1 = PartiallyReceived ,  2 = FullyReceived ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["None", "PartiallyReceived", "FullyReceived"]
                },
                "RelatedFbaId": {
                    "format": "int32",
                    "type": "integer"
                },
                "Instructions": {
                    "type": "string"
                },
                "IsQBExported": {
                    "type": "boolean"
                },
                "IsWarehouseBinsEnabled": {
                    "type": "boolean"
                },
                "IsModified": {
                    "type": "boolean"
                }
            }
        },
        "SellerCloud.Delta.Models.Details.Concrete.PurchaseOrders.PoSplitRelatedItemDto": {
            "type": "object",
            "properties": {
                "RelatedPoID": {
                    "format": "int32",
                    "type": "integer"
                },
                "RelationshipType": {
                    "format": "int32",
                    "description": " 0 = Unknown ,  1 = SplitFrom ,  2 = SplitTo ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["Unknown", "SplitFrom", "SplitTo"]
                },
                "CreatedOn": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.Details.Concrete.PurchaseOrders.PoVendorAndInvoiceContent": {
            "type": "object",
            "properties": {
                "PaymentTermID": {
                    "format": "int32",
                    "type": "integer"
                },
                "InvoiceNumber": {
                    "type": "string"
                },
                "InvoiceDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "VendorInvoice": {
                    "$ref": "#/definitions/SellerCloud.Delta.Models.Details.Concrete.PurchaseOrders.PoVendorInvoiceInfo"
                },
                "Memo": {
                    "type": "string"
                },
                "InvoiceLineCount": {
                    "type": "string"
                },
                "InvoiceLink": {
                    "type": "string"
                },
                "EnableVendorInvoicesWorkflow": {
                    "type": "boolean"
                },
                "EnableMultipleinvoicesforpurchaseorders": {
                    "type": "boolean"
                },
                "PaymentStatus": {
                    "format": "int32",
                    "description": " 10 = NoPayment ,  20 = Authorized ,  30 = Charged ,  40 = Uncleared ,  50 = PartiallyRefund ,  60 = FullRefund ,  70 = PartialPayment ,  80 = eBayPaid ,  99 = PaymentError ",
                    "enum": [10, 20, 30, 40, 50, 60, 70, 80, 99],
                    "type": "integer",
                    "x-enumNames": [
                        "NoPayment",
                        "Authorized",
                        "Charged",
                        "Uncleared",
                        "PartiallyRefund",
                        "FullRefund",
                        "PartialPayment",
                        "eBayPaid",
                        "PaymentError"
                    ]
                },
                "Balance": {
                    "format": "double",
                    "type": "number"
                },
                "TotalPaid": {
                    "format": "double",
                    "type": "number"
                },
                "TotalRefunded": {
                    "format": "double",
                    "type": "number"
                },
                "OverRecived": {
                    "format": "double",
                    "type": "number"
                },
                "IsModified": {
                    "type": "boolean"
                }
            }
        },
        "SellerCloud.Delta.Models.Details.Concrete.PurchaseOrders.PoChangesDto": {
            "type": "object",
            "properties": {
                "CreatedBy": {
                    "type": "string"
                },
                "CreatedByEmployeeId": {
                    "format": "int32",
                    "type": "integer"
                },
                "CreatedOn": {
                    "format": "date-time",
                    "type": "string"
                },
                "UpdatedBy": {
                    "type": "string"
                },
                "UpdatedByEmployeeId": {
                    "format": "int32",
                    "type": "integer"
                },
                "UpdatedOn": {
                    "format": "date-time",
                    "type": "string"
                },
                "ApprovedBy": {
                    "type": "string"
                },
                "ApprovedByEmployeeId": {
                    "format": "int32",
                    "type": "integer"
                },
                "ApprovedOn": {
                    "format": "date-time",
                    "type": "string"
                },
                "ReceivedBy": {
                    "type": "string"
                },
                "ReceivedByEmployeeId": {
                    "format": "int32",
                    "type": "integer"
                },
                "ReceivedOn": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.Details.Concrete.PurchaseOrders.PoRelatedItemDto": {
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "RecordType": {
                    "type": "string"
                },
                "Url": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.Details.Concrete.PurchaseOrders.PoTotalInfoContent": {
            "type": "object",
            "properties": {
                "DiscountTotal": {
                    "format": "double",
                    "type": "number"
                },
                "DiscountTotalFixed": {
                    "type": "boolean"
                },
                "MultiDiscountTotal": {
                    "format": "double",
                    "type": "number"
                },
                "EnableMultiDiscountForPurchaseOrder": {
                    "type": "boolean"
                },
                "SubTotal": {
                    "format": "double",
                    "type": "number"
                },
                "FreeShipping": {
                    "type": "boolean"
                },
                "ShippingTotal": {
                    "format": "double",
                    "type": "number"
                },
                "EnableShippingTotal": {
                    "type": "boolean"
                },
                "DropShipFeeTotal": {
                    "format": "double",
                    "type": "number"
                },
                "ShippingTotalThirdParty": {
                    "format": "double",
                    "type": "number"
                },
                "EnableShippingTotalThirdParty": {
                    "type": "boolean"
                },
                "CustomsTotal": {
                    "format": "double",
                    "type": "number"
                },
                "TaxTotal": {
                    "format": "double",
                    "type": "number"
                },
                "OtherTotal": {
                    "format": "double",
                    "type": "number"
                },
                "SmallOrderFee": {
                    "format": "double",
                    "type": "number"
                },
                "CreditCardFee": {
                    "format": "double",
                    "type": "number"
                },
                "GrandTotal": {
                    "format": "double",
                    "type": "number"
                },
                "UnreceivedTotal": {
                    "format": "double",
                    "type": "number"
                },
                "EnableFreeShippingForPurchaseOrders": {
                    "type": "boolean"
                },
                "EditFreeShippingForPurchaseOrders": {
                    "type": "boolean"
                },
                "EditShippingTotal": {
                    "type": "boolean"
                },
                "EnableOrderDropShipFee": {
                    "type": "boolean"
                },
                "PurchaseOrdersEnableCustomsTotalField": {
                    "type": "boolean"
                },
                "SmallOrderFeeVisible": {
                    "type": "boolean"
                },
                "EnableCreditCardFeeOnPurchaseOrders": {
                    "type": "boolean"
                },
                "HidePrices": {
                    "type": "boolean"
                },
                "DoNotIncludeThirdPartyShippingInPOGrandTotal": {
                    "type": "boolean"
                },
                "UseFixedDiscountTotal": {
                    "type": "boolean"
                },
                "UseDiscountTotal": {
                    "type": "boolean"
                },
                "EnableVendorInvoicesWorkflow": {
                    "type": "boolean"
                },
                "IsFullyRecivedandshipped": {
                    "type": "boolean"
                },
                "IsModified": {
                    "type": "boolean"
                }
            }
        },
        "SellerCloud.Delta.Models.Details.Concrete.PurchaseOrders.PurchaseOrderMetadata": {
            "type": "object",
            "properties": {
                "PurchaseOrderCurrencyDigitsCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "EnableCaseQty": {
                    "type": "boolean"
                },
                "EnabledMultipleDiscounts": {
                    "type": "boolean"
                },
                "FixedTotalDiscount": {
                    "type": "boolean"
                },
                "EnablePerCaseQtyModeSetting": {
                    "type": "boolean"
                },
                "EnableVendorInvoicesWorkflow": {
                    "type": "boolean"
                },
                "AllowToIgnoreInventoryInPurchaseOrder": {
                    "type": "boolean"
                },
                "EnableShippingContainers": {
                    "type": "boolean"
                },
                "EnablePOFBAAllocationQty": {
                    "type": "boolean"
                },
                "EnableNotesForPurchaseItems": {
                    "type": "boolean"
                },
                "EnableLocalNotesForPurchaseItems": {
                    "type": "boolean"
                },
                "EnableCurrencySymbolForPO": {
                    "type": "boolean"
                },
                "ShowASINAndUPCInPoItems": {
                    "type": "boolean"
                },
                "ShowQtyOnHandInPoItems": {
                    "type": "boolean"
                },
                "EnableExpectedDeliveryForPurchaseItems": {
                    "type": "boolean"
                }
            }
        },
        "SellerCloud.Delta.Models.Details.Concrete.PurchaseOrders.PurchaseOrderStatusesDto": {
            "type": "object",
            "properties": {
                "Status": {
                    "format": "int32",
                    "description": " 0 = Saved ,  1 = Ordered ,  2 = Pending ,  3 = Received ,  4 = Cancelled ,  5 = Completed ,  -1 = Select ",
                    "enum": [0, 1, 2, 3, 4, 5, -1],
                    "type": "integer",
                    "x-enumNames": [
                        "Saved",
                        "Ordered",
                        "Pending",
                        "Received",
                        "Cancelled",
                        "Completed",
                        "Select"
                    ]
                },
                "IsApproved": {
                    "type": "boolean"
                },
                "Priority": {
                    "format": "int32",
                    "description": " 0 = Normal ,  1 = High ,  2 = Low ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["Normal", "High", "Low"]
                },
                "ShippingStatus": {
                    "format": "int32",
                    "description": " 0 = None ,  1 = PartiallyShipped ,  2 = FullyShipped ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["None", "PartiallyShipped", "FullyShipped"]
                },
                "ReceivingStatus": {
                    "format": "int32",
                    "description": " 0 = None ,  1 = PartiallyReceived ,  2 = FullyReceived ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["None", "PartiallyReceived", "FullyReceived"]
                },
                "PaymentStatus": {
                    "format": "int32",
                    "description": " 10 = NoPayment ,  20 = Authorized ,  30 = Charged ,  40 = Uncleared ,  50 = PartiallyRefund ,  60 = FullRefund ,  70 = PartialPayment ,  80 = eBayPaid ,  99 = PaymentError ",
                    "enum": [10, 20, 30, 40, 50, 60, 70, 80, 99],
                    "type": "integer",
                    "x-enumNames": [
                        "NoPayment",
                        "Authorized",
                        "Charged",
                        "Uncleared",
                        "PartiallyRefund",
                        "FullRefund",
                        "PartialPayment",
                        "eBayPaid",
                        "PaymentError"
                    ]
                },
                "InvoicedStatus": {
                    "type": "string"
                },
                "InventoryCount": {
                    "type": "string"
                },
                "EmailSent": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.Details.Concrete.PurchaseOrders.PoVendorInvoiceInfo": {
            "type": "object",
            "properties": {
                "FileName": {
                    "type": "string"
                },
                "NewFileToken": {
                    "type": "string"
                },
                "DeleteFile": {
                    "type": "boolean"
                }
            }
        },
        "SellerCloud.Delta.Client.Api.Models.Request.PurchasingImport.PurchasingImportFileRequest[SellerCloud.Delta.Client.Api.Models.Request.PurchasingImport.ImportPurchaseOrdersDto]": {
            "required": ["Metadata", "FileContents"],
            "type": "object",
            "properties": {
                "Metadata": {
                    "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Request.PurchasingImport.ImportPurchaseOrdersDto"
                },
                "FileContents": {
                    "type": "string"
                },
                "Format": {
                    "format": "int32",
                    "description": " 0 = TAB_Delimited ,  1 = CSV ,  2 = Excel ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["TAB_Delimited", "CSV", "Excel"]
                }
            }
        },
        "SellerCloud.Delta.Client.Api.Models.Request.PurchasingImport.ImportPurchaseOrdersDto": {
            "type": "object",
            "properties": {
                "CompanyId": {
                    "format": "int32",
                    "type": "integer"
                },
                "PluginID": {
                    "type": "string"
                },
                "PluginName": {
                    "type": "string"
                },
                "CreateNewPoNumbers": {
                    "type": "boolean"
                },
                "CreateAsCreditMemo": {
                    "type": "boolean"
                }
            }
        },
        "SellerCloud.Delta.Client.Api.Models.Request.PurchasingImport.PurchasingImportFileRequest[SellerCloud.Delta.Client.Api.Models.Request.PurchasingImport.ImportVendorPricesDto]": {
            "required": ["Metadata", "FileContents"],
            "type": "object",
            "properties": {
                "Metadata": {
                    "$ref": "#/definitions/SellerCloud.Delta.Client.Api.Models.Request.PurchasingImport.ImportVendorPricesDto"
                },
                "FileContents": {
                    "type": "string"
                },
                "Format": {
                    "format": "int32",
                    "description": " 0 = TAB_Delimited ,  1 = CSV ,  2 = Excel ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["TAB_Delimited", "CSV", "Excel"]
                }
            }
        },
        "SellerCloud.Delta.Client.Api.Models.Request.PurchasingImport.ImportVendorPricesDto": {
            "type": "object",
            "properties": {
                "CompanyId": {
                    "format": "int32",
                    "type": "integer"
                },
                "ProfileID": {
                    "format": "int32",
                    "type": "integer"
                },
                "JobScheduleTime": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "CoreWebAdmin.Delta.DetailsEntity.Models.QueuedJob.QueuedJobDto": {
            "type": "object",
            "properties": {
                "Basic": {
                    "$ref": "#/definitions/SellerCloud.Delta.Models.DetailsEntity.Concrete.QueuedJob.QueuedJobBasic"
                },
                "OutputFile": {
                    "type": "string"
                },
                "InputFile": {
                    "type": "string"
                },
                "TotalItemsInPhase": {
                    "format": "int32",
                    "type": "integer"
                },
                "TotalProcessedInPhase": {
                    "format": "int32",
                    "type": "integer"
                },
                "TotalPhases": {
                    "format": "int32",
                    "type": "integer"
                },
                "CurrentPhase": {
                    "format": "int32",
                    "type": "integer"
                },
                "TotalRecords": {
                    "format": "int32",
                    "type": "integer"
                },
                "TotalProcessed": {
                    "format": "int32",
                    "type": "integer"
                },
                "TotalSucceeded": {
                    "format": "int32",
                    "type": "integer"
                },
                "TotalFailure": {
                    "format": "int32",
                    "type": "integer"
                },
                "Parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BVSoftware.BVC.Core.Content.QueuedJobParameter"
                    }
                },
                "PickListID": {
                    "format": "int32",
                    "type": "integer"
                },
                "UploadFileRecordId": {
                    "format": "int32",
                    "type": "integer"
                },
                "IsModified": {
                    "type": "boolean"
                }
            }
        },
        "SellerCloud.Delta.Models.DetailsEntity.Concrete.QueuedJob.QueuedJobBasic": {
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "CompanyID": {
                    "format": "int32",
                    "type": "integer"
                },
                "CompanyName": {
                    "type": "string"
                },
                "ItemIDsList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ItemIDsListString": {
                    "type": "string"
                },
                "SubmittedOn": {
                    "format": "date-time",
                    "type": "string"
                },
                "SubmittedBy": {
                    "format": "int32",
                    "type": "integer"
                },
                "JobType": {
                    "format": "int32",
                    "description": " 1 = Product_Bulk_Update ,  2 = Product_Custom_Export ,  3 = Product_Export_For_Channel ,  4 = Product_Revise_On_eBay ,  5 = Order_Export ,  6 = Product_Bulk_Edit ,  7 = Product_Bulk_Edit_EBay ,  8 = Product_Bulk_Edit_BuyDotCom ,  9 = eBayCategoryRefresh ,  10 = ImportProducts_Amazon ,  11 = ImportProducts_eBay ,  12 = ImportProducts_Magento ,  13 = ImportProducts_Yahoo ,  14 = Import_Vendor_Products ,  15 = Import_Product_Shadows ,  16 = eBay_Listings_Download ,  17 = eBay_Listings_Create_Update_Products ,  18 = Import_Product_Kits ,  19 = Get_Product_Info_From_Amazon ,  20 = Orders_Import_Tracking ,  21 = Product_Group_Series_Generate ,  22 = Orders_Import ,  23 = Import_Product_Alias ,  24 = Product_FindBuyDotComSKU ,  25 = Export_Customers ,  26 = Order_Delete ,  27 = Straight_Warehouse_Inventory ,  28 = ImportProducts_OverStock ,  29 = Report_FBA_Inventory ,  30 = Amazon_Reports_Task ,  31 = CWA_Report ,  32 = Create_Country_Specific_Shadow ,  33 = Product_Bulk_Update_Rollback ,  34 = Orders_FindPayment_For_EBayPaid ,  35 = Orders_FindPayment_For_PendingPayments ,  36 = Import_Product_Replacements ,  37 = Import_Product_Accessories ,  38 = Revise_EBay_Listings ,  39 = Report_Amazon_Active_Listings ,  40 = ImportProducts_Sears ,  41 = Create_Products_From_Amazon_Active_Listing ,  42 = ImportProducts_BuyDotCom ,  43 = Export_CM_Feed ,  44 = Warehouse_Inventory_Import ,  45 = Warehouse_Inventory_Calculate ,  46 = Import_Product_Group ,  47 = Report_Amazon_Pending_Orders ,  48 = Export_Product_Sales_Statistics ,  49 = Acknowledge_Old_Amazon_Orders ,  50 = Synchronize_Vendors ,  51 = LMSProcessOrders ,  52 = Toggle_Inventory_To_Warehouse_Mode ,  53 = Toggle_Inventory_To_NonWarehouse_Mode ,  54 = Import_Amazon_Orders ,  55 = BuyDotCom_SKU_List ,  56 = Orders_Import_OverStock ,  57 = Sync_eBay_Active_Listings ,  58 = Export_Ebay_Category_Suggestions ,  59 = Launch_On_eBay ,  60 = Post_On_Ebay ,  61 = eBay_End_Listings ,  62 = Inventory_Calculate ,  63 = Export_Product_Enabled_For_Channel ,  64 = Orders_Import_ShippingCost ,  65 = Pick_List_Generate ,  66 = Update_Shipping_Template_For_Products ,  67 = Purchase_Manifest_Create_PO ,  68 = Product_Export_General ,  69 = Product_Inventory_By_Warehouse_Export ,  70 = Purchase_Manifest_Update_Item_Cost ,  71 = ARCUST_Import_Customers ,  72 = ARCUST_Import_Orders ,  73 = Convert_Orders_To_WholeSale_Fulfillment ,  74 = Order_Refresh_From_Ebay_Paypal ,  75 = Update_Inventory_From_Ebay_Listings ,  76 = Product_Titles_Import ,  77 = Import_BuyDotCom_Listing_Report ,  78 = Merge_Shadow_Inventory_Into_Default_Warehouse ,  79 = eBay_Query_Title ,  80 = Web_Page_Access_Import ,  81 = PickList_Print_Invoices ,  82 = Import_OverStock_Settlement_Report ,  83 = Import_Sears_Settlement_Report ,  84 = Import_NewEgg_Settlement_Report ,  85 = Import_Purchase_Orders ,  86 = Import_Product_Specifics ,  87 = Revise_Listing_Part_On_Ebay ,  88 = Export_Inventory_By_Warehouse ,  89 = Export_Inventory_By_Warehouse_Per_Parent_SKU ,  90 = Import_BestBuy_Settlement_Report ,  91 = Export_Product_Sales_Statistics_Amazon ,  92 = Inventory_Snap_Shot ,  93 = Inventory_Snap_Shot_Restore ,  94 = Launch_On_Magento ,  95 = Receive_Whole_PO ,  96 = Launch_On_Amazon ,  97 = Inventory_Calculate_For_KitParents ,  98 = CM_Feed_Generate_For_Company ,  99 = Customers_Import ,  100 = Order_Send_Emails ,  101 = Update_Shipping_On_Amazon ,  102 = Import_Amazon_Settlement_Report ,  103 = Automation_via_FTP_Import_Orders ,  104 = Automation_via_FTP_Export_Invnetory ,  105 = Automation_via_FTP_Export_Tracking ,  106 = Magento_Execute_Cron ,  107 = Find_BuyDotCom_SKU_For_Task ,  108 = Import_Product_From_Amazon_Template ,  109 = Orders_ReApplySettlement_data ,  110 = Orders_Import_ShippingCost_DHL ,  111 = Orders_Evaluate_Payment_Status ,  112 = Products_Delete ,  113 = Orders_Import_For_Task ,  114 = ImportProducts_Wayfair ,  115 = Orders_Import_ShippingCost_UPS ,  116 = Merge_Shadow_Inventory_Into_Warehouse ,  117 = Import_Product_Info_Via_Plugin ,  118 = Product_Export_for_Task ,  119 = Import_Product_From_ChannelFeedTemplate ,  120 = OrderAction_ProcessRefunds ,  121 = Calcualte_Inventory_For_PO ,  122 = Calcualte_Inventory_For_FBA_Shipment ,  123 = Revise_Prices_On_Channel ,  124 = OrderAction_ProcessCancellation ,  125 = Orders_Replace_SKU_Bulk ,  126 = Print_Product_Label ,  127 = Load_Product_Default_Values ,  128 = Get_ASIN_From_UPC ,  129 = Warehouse_Inventory_Adjustments ,  130 = Export_Amazon_Search_Results ,  131 = Import_Product_Rebates ,  132 = Dismiss_Amazon_Listing_Audit ,  133 = Purchase_Orders_Export ,  134 = Orders_Import_From_3DCart ,  135 = Import_EBay_Orders ,  136 = Products_Import_For_Task ,  137 = Orders_Import_Tracking_For_Task ,  138 = Import_Product_Image_Info ,  139 = Export_Missing_Channel_Info ,  140 = OneSD_ImportInventory ,  141 = OneSD_ImportKits ,  142 = OneSD_ImportProducts ,  143 = OrderAction_ProcessBackOrder ,  144 = ProductImportEBayAuctions ,  145 = OrderAction_ProcessCancellationBySplitting ,  146 = Export_Product_Sell_Through_Report ,  147 = Export_Product_Inventory_age_report ,  148 = Launch_On_Sears ,  149 = DropShip_SendEmails ,  150 = FBA_Shipment_Reserve ,  151 = OrderAction_Create_Replacement_Order ,  152 = OrderAction_Create_Related_Order ,  153 = OrderAction_Cancel_And_Duplicate_Innotrac_Order ,  154 = Magento_Update_Prices ,  155 = Order_Export_Innotrac ,  156 = PO_Send_EMails ,  157 = Orders_Cancel_Innotrac ,  158 = Find_ASIN ,  159 = Notify_Order_Source_For_Shipping ,  160 = OrderAction_Cancel_1SD_Order ,  161 = OrderAction_Cancel_1SD_OrderItem ,  162 = OrderAction_SetInProcess ,  163 = FBA_Shipment_ResetPreview ,  164 = Orders_Set_InProcess ,  165 = Bonanza_Import_Categories ,  166 = Orders_Create_NewEggDotCom_API ,  167 = Launch_On_Bonanza ,  168 = Launch_On_NewEggDotcom ,  169 = Orders_Import_Website_via_Plugin ,  170 = Import_Sears_Attributes ,  171 = Upload_Product_Images_to_Hosting ,  172 = Orders_Cancel_1SD ,  173 = Orders_Bulk_Charge_Orders ,  174 = Upload_Product_Images_to_Magento ,  175 = OrderAction_SetRushOrder ,  176 = Calcuate_AverageCost_For_PO_Item_Receive ,  177 = Generate_Predicted_Purchase_Data ,  178 = Find_FNSKU ,  179 = Export_Product_Groups ,  180 = Find_EBay_ProductID ,  181 = Product_Notes_Import ,  182 = Orders_Change_ShipType ,  183 = WarehouseBin_SetQtyBulk ,  184 = Task_Run_Select_Query ,  185 = Orders_QueryShipmentStatus_Innotrac ,  186 = OrderAction_Process ,  187 = Innotrac_ShipNotification ,  188 = Export_Employees ,  189 = Import_Sears_Settlement_Report_via_API ,  190 = Launch_On_Website ,  191 = Product_UnUsed_UPC_Import ,  192 = Export_Kits ,  193 = Purchase_Manifest_Create_SKU_BasedOn_UPC ,  194 = Merge_Orders ,  195 = Bonanza_Update_Prices ,  196 = Bonanza_Update_Inventory ,  197 = Import_Product_Magento_Attribute ,  198 = Export_ebay_Product_Specific_Template ,  199 = Launch_On_OverStock ,  200 = Get_OverStock_Product_Info ,  201 = DisAssemble_N_Matrix ,  202 = Import_N_Matrix ,  203 = Launch_On_PriceFall ,  204 = PriceFall_Update_Inventory ,  205 = PriceFall_Update_Prices ,  206 = HKG_ImportInventory ,  207 = HKG_ImportKits ,  208 = HKG_ImportProducts ,  209 = Website_Update_Prices ,  210 = Import_Magento_Orders ,  211 = Enable_Disable_Products_For_Channel ,  212 = Launch_On_Channel ,  213 = Update_Inventory_On_Channel ,  214 = Update_Prices_On_Channel ,  215 = eBay_End_Listings_via_ProductID ,  216 = Relist_EBay_Items ,  217 = Export_Listed_On_Channel ,  218 = OneStopPlus_DownloadInventory_Products ,  219 = Export_Relations_On_Magento ,  220 = Orders_Generate_Profit_and_Loss ,  221 = Export_Ebay_Listing_Failure_For_Task ,  222 = Print_Product_Label_For_Orders ,  223 = PO_Delete ,  224 = Product_Create_Shadows_Per_Company ,  225 = Product_Export_Unfillable_For_Task ,  226 = Product_AverageCost_Prime ,  227 = Profit_and_Loss_Calculated_Export ,  228 = Profit_and_Loss_Calculated_Import ,  229 = Transaction_Profit_and_Loss_Calculated_Export ,  230 = Transaction_Profit_and_Loss_Calculated_Import ,  231 = Product_Warehouse_Inventory_Transfer_Request ,  232 = Order_Refresh_From_Magento ,  233 = Orders_Mark_Shipped ,  234 = Predictive_Purchase_Task_Create_PO ,  235 = Update_Inventory_Via_WS ,  236 = Amazon_Get_My_Price ,  237 = Update_Images_On_Amazon ,  238 = Inventory_Upload_Pre_Data ,  239 = Product_SplittedSKU_Import ,  240 = Disassemble_Kits ,  241 = PO_Export_for_Task ,  242 = Product_Convert_Currencies ,  243 = Product_Unshadow ,  244 = Do_Hazmat_Preview_For_Task ,  245 = PickList_Export_to_PDF_KitParent_Only ,  246 = Import_NewEggDotcom_Attributes ,  247 = Import_N_Matrix_Images ,  248 = Orders_DropShip_EnterTracking ,  249 = Import_N_Matrix_From_Amazon ,  250 = Import_BestBuy_Commission_Report ,  251 = Import_WalmartMarketplace_Commission_Report ,  252 = Import_BuyDotCom_Commission_Report ,  253 = Purchase_Order_Open_Reminder ,  254 = Find_ASIN_From_UPC_List ,  255 = Export_NewEggDotCom_Specifics ,  256 = Query_Amazon_Document_Response ,  257 = JET_Category_Download ,  258 = Export_BuyDotCom_Specifics ,  259 = Import_BuyDotCom_Attributes ,  260 = Export_All_Customers ,  261 = Inventory_Calculate_QtySold_History ,  262 = Warehouse_Inventory_Export ,  263 = Calcuate_Inventory_For_All_SKUs ,  264 = Initialize_Bin ,  265 = Transfer_Between_SKUs_Bulk ,  266 = POContainer_Receive ,  267 = UnReceive_PO ,  268 = Product_Revise_Prices_on_All_Channels ,  269 = Export_Sears_Attributes ,  270 = Generate_FBA_Business_Report ,  271 = Export_Product_Images ,  272 = Import_Product_Manual_Reserves ,  273 = Create_Shadows_For_Products ,  274 = Products_Import_Inventory_For_Task ,  275 = Import_Mapped_Orders ,  276 = Import_Mapped_Tracking ,  277 = Import_Mapped_Inventory ,  278 = Import_ProductWarehouse_Bin_Info ,  279 = Import_FBA_Shipment ,  280 = Export_FBA_Shipment ,  281 = Add_Records_For_Unshipped_Bins ,  282 = Replace_Kit_Products ,  283 = Import_Bonanza_Traits ,  284 = Export_RMA ,  285 = Orders_Create_NewEggBiz_API ,  286 = RMA_Export_for_Task ,  287 = Import_RMA ,  288 = Revise_Listing_Part_On_Ebay_via_ItemID ,  289 = Merge_SKU ,  290 = Product_Import_Magento_Tier_Pricing ,  291 = RMA_Import_for_Task ,  292 = AdjustWarehouseBins ,  293 = ReCalculateBackOrders_forOrders ,  294 = Import_Magento_Products ,  295 = Import_NewEggBiz_Attributes ,  296 = Amazon_Attribute_to_Product_Specific ,  297 = Order_Refresh_From_Paypal ,  298 = Orders_ReCalc_Order_Cost ,  299 = Import_FBA_Shipment_From_File ,  300 = Import_Product_Clones ,  301 = Import_JET_Attributes ,  302 = Merge_Customers ,  303 = Import_ZipCode_Data ,  304 = Export_Magento_Attributes ,  305 = Export_JET_Attributes ,  306 = Create_SettlementData_PandL ,  307 = Import_Amazon_Report ,  308 = Get_Amazon_BuyBox_Price ,  309 = Warehouse_Delete ,  310 = Export_Product_Manual_Reserves ,  311 = Archive_Products_On_JET ,  312 = Export_Shopify_Metadata ,  313 = Website_Update_Listing_Part_via_Plugin ,  314 = Import_N_Matrix_Simple ,  315 = Import_Product_Manufacturer ,  316 = Etsy_category_refresh ,  317 = Import_eBay_Settlement_Report ,  318 = Export_Product_Replacement_SKUs ,  319 = Shopify_Download_Listings ,  320 = Reverb_Download_ActiveListings ,  321 = Import_ProductWarehouse_Bin_Adjustments ,  322 = Import_WalmartMarketplace_Attributes ,  323 = Find_Sales_Rank ,  324 = Import_Product_average_Cost_Adjustments ,  325 = Zero_Out_Inventory ,  326 = Export_WalmartMarketplace_Attributes ,  327 = Import_WalmartMarketplace_Attributes_Variation ,  328 = Break_Kits ,  329 = Export_Shopify_Tags ,  330 = Update_ProductTypeDefaults_On_Products ,  331 = FBA_Shipment_Delete ,  332 = Import_Product_Documents ,  333 = Export_N_Matrix ,  334 = Update_GroupOn_Cost_On_Orders ,  335 = LightspeedPOS_Get_ItemIDs ,  336 = LightspeedPOS_Create_ItemCount ,  337 = ChannelInvoiceSettlement ,  338 = MassGenieCategoriesUpdate ,  339 = Orders_SetVoid ,  340 = Retire_On_WalmartMarketplace ,  341 = Update_Walmart_Marketplace_ShippingTemplate_On_Products ,  342 = Upload_Shipping_Exception_On_JET ,  343 = ReverbCategoriesUpdate ,  344 = TangaCategoriesUpdate ,  345 = NewEgg_Shipment_ResetPreview ,  346 = UnShip_Orders ,  347 = HouzzCategoriesUpdate ,  348 = HouzzCategoryAttributesUpdate ,  349 = FBA_Reconciliation_Export_For_Task ,  350 = Calculate_PredictivePurchasing_InStockDays_V2 ,  351 = Import_Amazon_Attributes ,  352 = NewEggDotCom_Shipment_Reserve ,  353 = Calculate_Package_Size ,  354 = Orders_Receive_Magento_Payments ,  355 = Orders_Acknowledge_to_Channel ,  366 = Export_Amazon_Attributes ,  367 = Orders_ReApply_CoOp_Fee ,  368 = PO_Create_from_ShippingContainers ,  369 = Disconnect_Inventory_From_Channel ,  370 = Update_Product_Weight_On_Related_Orders ,  371 = Products_Clone ,  372 = Products_Copy ,  373 = Products_ChangeSKU ,  374 = Product_Update_UPC_For_Channel ,  375 = Import_Vendor_Products_For_Task ,  376 = Product_Export_UPC_For_Channel ,  377 = NewEggDotCom_Update_Product_Volume_Discount ,  378 = Walmart_Update_Lag_Time ,  379 = BuyDotCom_Import_Catagories ,  380 = WalmartMarketplace_Create_Product_From_Listing ,  381 = Import_Purchase_Orders_Items ,  382 = Export_Orders_Dropship ,  383 = Import_NewEggDotcom_Int_Prices ,  384 = Import_Groupon_Chargeback ,  385 = Product_Titles_Export ,  386 = Product_Export_Kit_Assemblies ,  387 = Orders_Taxjar_Submit_Taxes ,  388 = Orders_Taxjar_Post_Taxes ,  389 = Export_Channel_Category_Suggestions ,  390 = WalmartMarketplace_Get_Product_Info ,  391 = Product_Shadow_Export ,  392 = Shipping_Containers_Export ,  393 = Import_Product_ITF14 ,  394 = Import_CustomColumns ,  395 = Remove_Business_Prices_On_Amazon ,  396 = Export_Etsy_Attributes ,  397 = Import_Etsy_Attributes ,  398 = FBA_Shipment_QueryStatus ,  399 = Predictive_Restocking_Task_Create_PO ,  400 = Orders_Query_Shipping_Delivery_Status ,  401 = Orders_Import_ShippingCost_For_Task ,  402 = InventoryArrival_For_Task ,  403 = ShadowPersistencyChanged ,  404 = Product_DeleteBrokenImages ,  405 = Export_Houzz_Attributes ,  406 = Import_Houzz_Attributes ,  407 = Product_Update_ManufacturerSKU_For_Channel ,  408 = Wayfair_RegisterMutation ,  409 = Import_Warehouse_Inventory_ForProfile ,  410 = Save_Variation_Products ,  411 = Sears_UpdateLeadTimeForProduct ,  412 = Orders_Import_ShippingCost_UPSMI ,  413 = Import_Walmart_Marketplace_Settlement ,  414 = Export_VendorCentral_Shipment ,  415 = Prepare_Client_Wide_Data ,  416 = Import_JET_Settlement ,  417 = Prepare_NMatrix_Simple ,  418 = TargetPlus_DownloadApprovedItemTypes_With_Taxonomy ,  419 = Product_SetActive_InActive ,  420 = Import_VendorCentral_Shipment ,  421 = POContainer_UpdateShippingStatus ,  422 = Update_Images_On_Channel ,  433 = PartiallyReceivedShipments_ClearInTransitInventory ,  434 = Import_Product_Fitment ,  435 = Wish_EnrollProductInReturnsProgram ,  436 = Orders_Reapply_FBA_Returns ,  437 = Disconnect_Shipping_Confirmation_From_Order_Source ,  438 = Orders_Import_ShippingCost_FedEx ,  439 = Warehouse_Transfer_Requests_Delete ,  440 = Warehouse_Bin_Movememnt_Export ,  441 = Fix_Walmart_Marketplace_Attributes ,  442 = Export_Product_Accessories ,  443 = Houzz_UpdateProduct ,  444 = Import_AssembleKits ,  445 = Import_WarehouseTransferRequestReceive ,  446 = Import_Order_PnL_Adjustments ,  447 = Export_Product_Warehouse_Images ,  448 = Orders_GroupActions ,  449 = Orders_ImportVendorCentralCheckAvailability ,  450 = Import_Product_Image_Info_ChannelSpecific ,  451 = Lock_ShippingMethod_InBulk ,  452 = Import_Product_WarehouseImage ,  453 = Import_WarehouseTransferRequest ,  454 = CleanOut_FBA_Movements ,  455 = Orders_Import_Partial_Info ,  456 = Export_Order_PnL_Adjustments ,  457 = Export_Order_SettlementDetails ,  458 = Export_SKUUPCAliasReconciliationReport ,  459 = Amazon_AdReport_RequestSave ,  460 = Import_Shipping_Preference_For_Qty ,  461 = Resize_Product_Images ,  462 = Export_WalmartMarketplace_WFS_Attributes ,  463 = Import_WalmartMarketplace_WFS_Attributes ,  464 = WFS_ShipmentInbound_Delete ,  465 = Product_Warehouse_Inventory_Transfer_Request_RemoveIntransit ,  466 = Revise_Listing_Part_On_Magento ,  467 = Export_WFS_Shipment ,  468 = Re_Apply_CreditCard_Fee ,  469 = WFS_Shipment_Reserve ,  470 = Calcualte_Inventory_For_WFS_Shipment ,  471 = Switch_Fulfilled_By ,  472 = Export_Shipping_Preference_For_Qty ,  473 = Import_Inventory_ForProfile ,  474 = eBay_Refresh_Attributes ,  475 = Fix_PO_Qty_Before_Receive ,  476 = WalmartMarketplace_Bulk_Convert_V3_Attributes_To_V4 ,  477 = Commit_Cycle_Count ,  478 = Customers_Import_Documents ,  479 = Wish_RemoveProduct ,  480 = Import_Order_Transparency_Codes ,  481 = FBA_InboundShipmentUpdateDisconnect ,  482 = KitAssemblyWorkOrders_Export_for_Task ,  483 = Import_WFS_Shipment_From_File ,  484 = Associate_PredefinedShippingTemplate_On_WalmartMarketplace ,  485 = Import_WFS_Shipment ,  486 = VendorInvoice_Import_for_Task ,  487 = NewEggDotCom_Export_ItemLookup ,  488 = VendorInvoice_Export_for_Task ,  489 = Import_NewEgg_Shipment ,  490 = eBay_Export_Parts_Compatibility ,  491 = WalmartMarketplace_ConnectToPriceUpdate ,  492 = Orders_ImportSerial ,  493 = Export_N_Matrix_Images ,  494 = Bulk_Upload_SKU_eBayMarketingCampaign ,  495 = Wish_DownloadBrand ,  496 = Export_ProductLotNumberActivity ,  497 = Export_VendorSKU ,  498 = Orders_UpdateQBExported ,  499 = Amazon_Query_FBA_ShippingStatus ,  500 = Orders_UpdateShippingRequireThirdParty ,  501 = ProductWarehouseBin_AddAjustment ,  502 = WholesaleAgenda_Import ,  503 = Rebuild_AverageCost_For_All_Products ,  504 = VendorInvoice_Delete ,  505 = PartiallyReceivedWFSShipments_ClearInTransitInventory ,  506 = Houzz_Update_Lead_Time ,  507 = WarehouseInventoryTransfer_ClearInTransitInventory ,  508 = Product_Import_BigCommerce_Tier_Pricing ,  509 = Predictive_WFS_Restocking_Task_Create_PO ,  510 = Disconnect_Price_From_Channel ,  511 = Brand_Import ,  512 = Export_Shipping_Containers_With_Items_for_Task ,  513 = Import_Website_Attributes ,  514 = Export_Product_Alias_for_Task ,  515 = Import_Product_Alias_for_Task ,  516 = Export_Warehouse_Inventory_Transfer_Requests_for_Task ,  517 = Export_Listed_On_Channel_for_Task ,  518 = Export_Customer_for_Task ,  519 = Import_Shopify_MetaField ,  520 = Export_Product_LastInventorySent ,  521 = WarehouseBin_PrintBarcode ,  522 = WalmartMarketplace_CompetitivePricingOptInOrOptOut ,  523 = WFS_ShipmentInbound_QueryStatus ,  524 = Orders_ApplyRebates ,  525 = Dynamic_Code_Execution ,  526 = AdHoc_Plugin_Execution ,  527 = Products_Enable_For_WFS ",
                    "enum": [
                        1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
                        22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,
                        41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,
                        60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,
                        79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97,
                        98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112,
                        113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
                        128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
                        143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
                        158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
                        173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
                        188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
                        203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
                        218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232,
                        233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247,
                        248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262,
                        263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277,
                        278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292,
                        293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307,
                        308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322,
                        323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337,
                        338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352,
                        353, 354, 355, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377,
                        378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392,
                        393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407,
                        408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
                        433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
                        448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462,
                        463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
                        478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
                        493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
                        508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
                        523, 524, 525, 526, 527
                    ],
                    "type": "integer",
                    "x-enumNames": [
                        "Product_Bulk_Update",
                        "Product_Custom_Export",
                        "Product_Export_For_Channel",
                        "Product_Revise_On_eBay",
                        "Order_Export",
                        "Product_Bulk_Edit",
                        "Product_Bulk_Edit_EBay",
                        "Product_Bulk_Edit_BuyDotCom",
                        "eBayCategoryRefresh",
                        "ImportProducts_Amazon",
                        "ImportProducts_eBay",
                        "ImportProducts_Magento",
                        "ImportProducts_Yahoo",
                        "Import_Vendor_Products",
                        "Import_Product_Shadows",
                        "eBay_Listings_Download",
                        "eBay_Listings_Create_Update_Products",
                        "Import_Product_Kits",
                        "Get_Product_Info_From_Amazon",
                        "Orders_Import_Tracking",
                        "Product_Group_Series_Generate",
                        "Orders_Import",
                        "Import_Product_Alias",
                        "Product_FindBuyDotComSKU",
                        "Export_Customers",
                        "Order_Delete",
                        "Straight_Warehouse_Inventory",
                        "ImportProducts_OverStock",
                        "Report_FBA_Inventory",
                        "Amazon_Reports_Task",
                        "CWA_Report",
                        "Create_Country_Specific_Shadow",
                        "Product_Bulk_Update_Rollback",
                        "Orders_FindPayment_For_EBayPaid",
                        "Orders_FindPayment_For_PendingPayments",
                        "Import_Product_Replacements",
                        "Import_Product_Accessories",
                        "Revise_EBay_Listings",
                        "Report_Amazon_Active_Listings",
                        "ImportProducts_Sears",
                        "Create_Products_From_Amazon_Active_Listing",
                        "ImportProducts_BuyDotCom",
                        "Export_CM_Feed",
                        "Warehouse_Inventory_Import",
                        "Warehouse_Inventory_Calculate",
                        "Import_Product_Group",
                        "Report_Amazon_Pending_Orders",
                        "Export_Product_Sales_Statistics",
                        "Acknowledge_Old_Amazon_Orders",
                        "Synchronize_Vendors",
                        "LMSProcessOrders",
                        "Toggle_Inventory_To_Warehouse_Mode",
                        "Toggle_Inventory_To_NonWarehouse_Mode",
                        "Import_Amazon_Orders",
                        "BuyDotCom_SKU_List",
                        "Orders_Import_OverStock",
                        "Sync_eBay_Active_Listings",
                        "Export_Ebay_Category_Suggestions",
                        "Launch_On_eBay",
                        "Post_On_Ebay",
                        "eBay_End_Listings",
                        "Inventory_Calculate",
                        "Export_Product_Enabled_For_Channel",
                        "Orders_Import_ShippingCost",
                        "Pick_List_Generate",
                        "Update_Shipping_Template_For_Products",
                        "Purchase_Manifest_Create_PO",
                        "Product_Export_General",
                        "Product_Inventory_By_Warehouse_Export",
                        "Purchase_Manifest_Update_Item_Cost",
                        "ARCUST_Import_Customers",
                        "ARCUST_Import_Orders",
                        "Convert_Orders_To_WholeSale_Fulfillment",
                        "Order_Refresh_From_Ebay_Paypal",
                        "Update_Inventory_From_Ebay_Listings",
                        "Product_Titles_Import",
                        "Import_BuyDotCom_Listing_Report",
                        "Merge_Shadow_Inventory_Into_Default_Warehouse",
                        "eBay_Query_Title",
                        "Web_Page_Access_Import",
                        "PickList_Print_Invoices",
                        "Import_OverStock_Settlement_Report",
                        "Import_Sears_Settlement_Report",
                        "Import_NewEgg_Settlement_Report",
                        "Import_Purchase_Orders",
                        "Import_Product_Specifics",
                        "Revise_Listing_Part_On_Ebay",
                        "Export_Inventory_By_Warehouse",
                        "Export_Inventory_By_Warehouse_Per_Parent_SKU",
                        "Import_BestBuy_Settlement_Report",
                        "Export_Product_Sales_Statistics_Amazon",
                        "Inventory_Snap_Shot",
                        "Inventory_Snap_Shot_Restore",
                        "Launch_On_Magento",
                        "Receive_Whole_PO",
                        "Launch_On_Amazon",
                        "Inventory_Calculate_For_KitParents",
                        "CM_Feed_Generate_For_Company",
                        "Customers_Import",
                        "Order_Send_Emails",
                        "Update_Shipping_On_Amazon",
                        "Import_Amazon_Settlement_Report",
                        "Automation_via_FTP_Import_Orders",
                        "Automation_via_FTP_Export_Invnetory",
                        "Automation_via_FTP_Export_Tracking",
                        "Magento_Execute_Cron",
                        "Find_BuyDotCom_SKU_For_Task",
                        "Import_Product_From_Amazon_Template",
                        "Orders_ReApplySettlement_data",
                        "Orders_Import_ShippingCost_DHL",
                        "Orders_Evaluate_Payment_Status",
                        "Products_Delete",
                        "Orders_Import_For_Task",
                        "ImportProducts_Wayfair",
                        "Orders_Import_ShippingCost_UPS",
                        "Merge_Shadow_Inventory_Into_Warehouse",
                        "Import_Product_Info_Via_Plugin",
                        "Product_Export_for_Task",
                        "Import_Product_From_ChannelFeedTemplate",
                        "OrderAction_ProcessRefunds",
                        "Calcualte_Inventory_For_PO",
                        "Calcualte_Inventory_For_FBA_Shipment",
                        "Revise_Prices_On_Channel",
                        "OrderAction_ProcessCancellation",
                        "Orders_Replace_SKU_Bulk",
                        "Print_Product_Label",
                        "Load_Product_Default_Values",
                        "Get_ASIN_From_UPC",
                        "Warehouse_Inventory_Adjustments",
                        "Export_Amazon_Search_Results",
                        "Import_Product_Rebates",
                        "Dismiss_Amazon_Listing_Audit",
                        "Purchase_Orders_Export",
                        "Orders_Import_From_3DCart",
                        "Import_EBay_Orders",
                        "Products_Import_For_Task",
                        "Orders_Import_Tracking_For_Task",
                        "Import_Product_Image_Info",
                        "Export_Missing_Channel_Info",
                        "OneSD_ImportInventory",
                        "OneSD_ImportKits",
                        "OneSD_ImportProducts",
                        "OrderAction_ProcessBackOrder",
                        "ProductImportEBayAuctions",
                        "OrderAction_ProcessCancellationBySplitting",
                        "Export_Product_Sell_Through_Report",
                        "Export_Product_Inventory_age_report",
                        "Launch_On_Sears",
                        "DropShip_SendEmails",
                        "FBA_Shipment_Reserve",
                        "OrderAction_Create_Replacement_Order",
                        "OrderAction_Create_Related_Order",
                        "OrderAction_Cancel_And_Duplicate_Innotrac_Order",
                        "Magento_Update_Prices",
                        "Order_Export_Innotrac",
                        "PO_Send_EMails",
                        "Orders_Cancel_Innotrac",
                        "Find_ASIN",
                        "Notify_Order_Source_For_Shipping",
                        "OrderAction_Cancel_1SD_Order",
                        "OrderAction_Cancel_1SD_OrderItem",
                        "OrderAction_SetInProcess",
                        "FBA_Shipment_ResetPreview",
                        "Orders_Set_InProcess",
                        "Bonanza_Import_Categories",
                        "Orders_Create_NewEggDotCom_API",
                        "Launch_On_Bonanza",
                        "Launch_On_NewEggDotcom",
                        "Orders_Import_Website_via_Plugin",
                        "Import_Sears_Attributes",
                        "Upload_Product_Images_to_Hosting",
                        "Orders_Cancel_1SD",
                        "Orders_Bulk_Charge_Orders",
                        "Upload_Product_Images_to_Magento",
                        "OrderAction_SetRushOrder",
                        "Calcuate_AverageCost_For_PO_Item_Receive",
                        "Generate_Predicted_Purchase_Data",
                        "Find_FNSKU",
                        "Export_Product_Groups",
                        "Find_EBay_ProductID",
                        "Product_Notes_Import",
                        "Orders_Change_ShipType",
                        "WarehouseBin_SetQtyBulk",
                        "Task_Run_Select_Query",
                        "Orders_QueryShipmentStatus_Innotrac",
                        "OrderAction_Process",
                        "Innotrac_ShipNotification",
                        "Export_Employees",
                        "Import_Sears_Settlement_Report_via_API",
                        "Launch_On_Website",
                        "Product_UnUsed_UPC_Import",
                        "Export_Kits",
                        "Purchase_Manifest_Create_SKU_BasedOn_UPC",
                        "Merge_Orders",
                        "Bonanza_Update_Prices",
                        "Bonanza_Update_Inventory",
                        "Import_Product_Magento_Attribute",
                        "Export_ebay_Product_Specific_Template",
                        "Launch_On_OverStock",
                        "Get_OverStock_Product_Info",
                        "DisAssemble_N_Matrix",
                        "Import_N_Matrix",
                        "Launch_On_PriceFall",
                        "PriceFall_Update_Inventory",
                        "PriceFall_Update_Prices",
                        "HKG_ImportInventory",
                        "HKG_ImportKits",
                        "HKG_ImportProducts",
                        "Website_Update_Prices",
                        "Import_Magento_Orders",
                        "Enable_Disable_Products_For_Channel",
                        "Launch_On_Channel",
                        "Update_Inventory_On_Channel",
                        "Update_Prices_On_Channel",
                        "eBay_End_Listings_via_ProductID",
                        "Relist_EBay_Items",
                        "Export_Listed_On_Channel",
                        "OneStopPlus_DownloadInventory_Products",
                        "Export_Relations_On_Magento",
                        "Orders_Generate_Profit_and_Loss",
                        "Export_Ebay_Listing_Failure_For_Task",
                        "Print_Product_Label_For_Orders",
                        "PO_Delete",
                        "Product_Create_Shadows_Per_Company",
                        "Product_Export_Unfillable_For_Task",
                        "Product_AverageCost_Prime",
                        "Profit_and_Loss_Calculated_Export",
                        "Profit_and_Loss_Calculated_Import",
                        "Transaction_Profit_and_Loss_Calculated_Export",
                        "Transaction_Profit_and_Loss_Calculated_Import",
                        "Product_Warehouse_Inventory_Transfer_Request",
                        "Order_Refresh_From_Magento",
                        "Orders_Mark_Shipped",
                        "Predictive_Purchase_Task_Create_PO",
                        "Update_Inventory_Via_WS",
                        "Amazon_Get_My_Price",
                        "Update_Images_On_Amazon",
                        "Inventory_Upload_Pre_Data",
                        "Product_SplittedSKU_Import",
                        "Disassemble_Kits",
                        "PO_Export_for_Task",
                        "Product_Convert_Currencies",
                        "Product_Unshadow",
                        "Do_Hazmat_Preview_For_Task",
                        "PickList_Export_to_PDF_KitParent_Only",
                        "Import_NewEggDotcom_Attributes",
                        "Import_N_Matrix_Images",
                        "Orders_DropShip_EnterTracking",
                        "Import_N_Matrix_From_Amazon",
                        "Import_BestBuy_Commission_Report",
                        "Import_WalmartMarketplace_Commission_Report",
                        "Import_BuyDotCom_Commission_Report",
                        "Purchase_Order_Open_Reminder",
                        "Find_ASIN_From_UPC_List",
                        "Export_NewEggDotCom_Specifics",
                        "Query_Amazon_Document_Response",
                        "JET_Category_Download",
                        "Export_BuyDotCom_Specifics",
                        "Import_BuyDotCom_Attributes",
                        "Export_All_Customers",
                        "Inventory_Calculate_QtySold_History",
                        "Warehouse_Inventory_Export",
                        "Calcuate_Inventory_For_All_SKUs",
                        "Initialize_Bin",
                        "Transfer_Between_SKUs_Bulk",
                        "POContainer_Receive",
                        "UnReceive_PO",
                        "Product_Revise_Prices_on_All_Channels",
                        "Export_Sears_Attributes",
                        "Generate_FBA_Business_Report",
                        "Export_Product_Images",
                        "Import_Product_Manual_Reserves",
                        "Create_Shadows_For_Products",
                        "Products_Import_Inventory_For_Task",
                        "Import_Mapped_Orders",
                        "Import_Mapped_Tracking",
                        "Import_Mapped_Inventory",
                        "Import_ProductWarehouse_Bin_Info",
                        "Import_FBA_Shipment",
                        "Export_FBA_Shipment",
                        "Add_Records_For_Unshipped_Bins",
                        "Replace_Kit_Products",
                        "Import_Bonanza_Traits",
                        "Export_RMA",
                        "Orders_Create_NewEggBiz_API",
                        "RMA_Export_for_Task",
                        "Import_RMA",
                        "Revise_Listing_Part_On_Ebay_via_ItemID",
                        "Merge_SKU",
                        "Product_Import_Magento_Tier_Pricing",
                        "RMA_Import_for_Task",
                        "AdjustWarehouseBins",
                        "ReCalculateBackOrders_forOrders",
                        "Import_Magento_Products",
                        "Import_NewEggBiz_Attributes",
                        "Amazon_Attribute_to_Product_Specific",
                        "Order_Refresh_From_Paypal",
                        "Orders_ReCalc_Order_Cost",
                        "Import_FBA_Shipment_From_File",
                        "Import_Product_Clones",
                        "Import_JET_Attributes",
                        "Merge_Customers",
                        "Import_ZipCode_Data",
                        "Export_Magento_Attributes",
                        "Export_JET_Attributes",
                        "Create_SettlementData_PandL",
                        "Import_Amazon_Report",
                        "Get_Amazon_BuyBox_Price",
                        "Warehouse_Delete",
                        "Export_Product_Manual_Reserves",
                        "Archive_Products_On_JET",
                        "Export_Shopify_Metadata",
                        "Website_Update_Listing_Part_via_Plugin",
                        "Import_N_Matrix_Simple",
                        "Import_Product_Manufacturer",
                        "Etsy_category_refresh",
                        "Import_eBay_Settlement_Report",
                        "Export_Product_Replacement_SKUs",
                        "Shopify_Download_Listings",
                        "Reverb_Download_ActiveListings",
                        "Import_ProductWarehouse_Bin_Adjustments",
                        "Import_WalmartMarketplace_Attributes",
                        "Find_Sales_Rank",
                        "Import_Product_average_Cost_Adjustments",
                        "Zero_Out_Inventory",
                        "Export_WalmartMarketplace_Attributes",
                        "Import_WalmartMarketplace_Attributes_Variation",
                        "Break_Kits",
                        "Export_Shopify_Tags",
                        "Update_ProductTypeDefaults_On_Products",
                        "FBA_Shipment_Delete",
                        "Import_Product_Documents",
                        "Export_N_Matrix",
                        "Update_GroupOn_Cost_On_Orders",
                        "LightspeedPOS_Get_ItemIDs",
                        "LightspeedPOS_Create_ItemCount",
                        "ChannelInvoiceSettlement",
                        "MassGenieCategoriesUpdate",
                        "Orders_SetVoid",
                        "Retire_On_WalmartMarketplace",
                        "Update_Walmart_Marketplace_ShippingTemplate_On_Products",
                        "Upload_Shipping_Exception_On_JET",
                        "ReverbCategoriesUpdate",
                        "TangaCategoriesUpdate",
                        "NewEgg_Shipment_ResetPreview",
                        "UnShip_Orders",
                        "HouzzCategoriesUpdate",
                        "HouzzCategoryAttributesUpdate",
                        "FBA_Reconciliation_Export_For_Task",
                        "Calculate_PredictivePurchasing_InStockDays_V2",
                        "Import_Amazon_Attributes",
                        "NewEggDotCom_Shipment_Reserve",
                        "Calculate_Package_Size",
                        "Orders_Receive_Magento_Payments",
                        "Orders_Acknowledge_to_Channel",
                        "Export_Amazon_Attributes",
                        "Orders_ReApply_CoOp_Fee",
                        "PO_Create_from_ShippingContainers",
                        "Disconnect_Inventory_From_Channel",
                        "Update_Product_Weight_On_Related_Orders",
                        "Products_Clone",
                        "Products_Copy",
                        "Products_ChangeSKU",
                        "Product_Update_UPC_For_Channel",
                        "Import_Vendor_Products_For_Task",
                        "Product_Export_UPC_For_Channel",
                        "NewEggDotCom_Update_Product_Volume_Discount",
                        "Walmart_Update_Lag_Time",
                        "BuyDotCom_Import_Catagories",
                        "WalmartMarketplace_Create_Product_From_Listing",
                        "Import_Purchase_Orders_Items",
                        "Export_Orders_Dropship",
                        "Import_NewEggDotcom_Int_Prices",
                        "Import_Groupon_Chargeback",
                        "Product_Titles_Export",
                        "Product_Export_Kit_Assemblies",
                        "Orders_Taxjar_Submit_Taxes",
                        "Orders_Taxjar_Post_Taxes",
                        "Export_Channel_Category_Suggestions",
                        "WalmartMarketplace_Get_Product_Info",
                        "Product_Shadow_Export",
                        "Shipping_Containers_Export",
                        "Import_Product_ITF14",
                        "Import_CustomColumns",
                        "Remove_Business_Prices_On_Amazon",
                        "Export_Etsy_Attributes",
                        "Import_Etsy_Attributes",
                        "FBA_Shipment_QueryStatus",
                        "Predictive_Restocking_Task_Create_PO",
                        "Orders_Query_Shipping_Delivery_Status",
                        "Orders_Import_ShippingCost_For_Task",
                        "InventoryArrival_For_Task",
                        "ShadowPersistencyChanged",
                        "Product_DeleteBrokenImages",
                        "Export_Houzz_Attributes",
                        "Import_Houzz_Attributes",
                        "Product_Update_ManufacturerSKU_For_Channel",
                        "Wayfair_RegisterMutation",
                        "Import_Warehouse_Inventory_ForProfile",
                        "Save_Variation_Products",
                        "Sears_UpdateLeadTimeForProduct",
                        "Orders_Import_ShippingCost_UPSMI",
                        "Import_Walmart_Marketplace_Settlement",
                        "Export_VendorCentral_Shipment",
                        "Prepare_Client_Wide_Data",
                        "Import_JET_Settlement",
                        "Prepare_NMatrix_Simple",
                        "TargetPlus_DownloadApprovedItemTypes_With_Taxonomy",
                        "Product_SetActive_InActive",
                        "Import_VendorCentral_Shipment",
                        "POContainer_UpdateShippingStatus",
                        "Update_Images_On_Channel",
                        "PartiallyReceivedShipments_ClearInTransitInventory",
                        "Import_Product_Fitment",
                        "Wish_EnrollProductInReturnsProgram",
                        "Orders_Reapply_FBA_Returns",
                        "Disconnect_Shipping_Confirmation_From_Order_Source",
                        "Orders_Import_ShippingCost_FedEx",
                        "Warehouse_Transfer_Requests_Delete",
                        "Warehouse_Bin_Movememnt_Export",
                        "Fix_Walmart_Marketplace_Attributes",
                        "Export_Product_Accessories",
                        "Houzz_UpdateProduct",
                        "Import_AssembleKits",
                        "Import_WarehouseTransferRequestReceive",
                        "Import_Order_PnL_Adjustments",
                        "Export_Product_Warehouse_Images",
                        "Orders_GroupActions",
                        "Orders_ImportVendorCentralCheckAvailability",
                        "Import_Product_Image_Info_ChannelSpecific",
                        "Lock_ShippingMethod_InBulk",
                        "Import_Product_WarehouseImage",
                        "Import_WarehouseTransferRequest",
                        "CleanOut_FBA_Movements",
                        "Orders_Import_Partial_Info",
                        "Export_Order_PnL_Adjustments",
                        "Export_Order_SettlementDetails",
                        "Export_SKUUPCAliasReconciliationReport",
                        "Amazon_AdReport_RequestSave",
                        "Import_Shipping_Preference_For_Qty",
                        "Resize_Product_Images",
                        "Export_WalmartMarketplace_WFS_Attributes",
                        "Import_WalmartMarketplace_WFS_Attributes",
                        "WFS_ShipmentInbound_Delete",
                        "Product_Warehouse_Inventory_Transfer_Request_RemoveIntransit",
                        "Revise_Listing_Part_On_Magento",
                        "Export_WFS_Shipment",
                        "Re_Apply_CreditCard_Fee",
                        "WFS_Shipment_Reserve",
                        "Calcualte_Inventory_For_WFS_Shipment",
                        "Switch_Fulfilled_By",
                        "Export_Shipping_Preference_For_Qty",
                        "Import_Inventory_ForProfile",
                        "eBay_Refresh_Attributes",
                        "Fix_PO_Qty_Before_Receive",
                        "WalmartMarketplace_Bulk_Convert_V3_Attributes_To_V4",
                        "Commit_Cycle_Count",
                        "Customers_Import_Documents",
                        "Wish_RemoveProduct",
                        "Import_Order_Transparency_Codes",
                        "FBA_InboundShipmentUpdateDisconnect",
                        "KitAssemblyWorkOrders_Export_for_Task",
                        "Import_WFS_Shipment_From_File",
                        "Associate_PredefinedShippingTemplate_On_WalmartMarketplace",
                        "Import_WFS_Shipment",
                        "VendorInvoice_Import_for_Task",
                        "NewEggDotCom_Export_ItemLookup",
                        "VendorInvoice_Export_for_Task",
                        "Import_NewEgg_Shipment",
                        "eBay_Export_Parts_Compatibility",
                        "WalmartMarketplace_ConnectToPriceUpdate",
                        "Orders_ImportSerial",
                        "Export_N_Matrix_Images",
                        "Bulk_Upload_SKU_eBayMarketingCampaign",
                        "Wish_DownloadBrand",
                        "Export_ProductLotNumberActivity",
                        "Export_VendorSKU",
                        "Orders_UpdateQBExported",
                        "Amazon_Query_FBA_ShippingStatus",
                        "Orders_UpdateShippingRequireThirdParty",
                        "ProductWarehouseBin_AddAjustment",
                        "WholesaleAgenda_Import",
                        "Rebuild_AverageCost_For_All_Products",
                        "VendorInvoice_Delete",
                        "PartiallyReceivedWFSShipments_ClearInTransitInventory",
                        "Houzz_Update_Lead_Time",
                        "WarehouseInventoryTransfer_ClearInTransitInventory",
                        "Product_Import_BigCommerce_Tier_Pricing",
                        "Predictive_WFS_Restocking_Task_Create_PO",
                        "Disconnect_Price_From_Channel",
                        "Brand_Import",
                        "Export_Shipping_Containers_With_Items_for_Task",
                        "Import_Website_Attributes",
                        "Export_Product_Alias_for_Task",
                        "Import_Product_Alias_for_Task",
                        "Export_Warehouse_Inventory_Transfer_Requests_for_Task",
                        "Export_Listed_On_Channel_for_Task",
                        "Export_Customer_for_Task",
                        "Import_Shopify_MetaField",
                        "Export_Product_LastInventorySent",
                        "WarehouseBin_PrintBarcode",
                        "WalmartMarketplace_CompetitivePricingOptInOrOptOut",
                        "WFS_ShipmentInbound_QueryStatus",
                        "Orders_ApplyRebates",
                        "Dynamic_Code_Execution",
                        "AdHoc_Plugin_Execution",
                        "Products_Enable_For_WFS"
                    ]
                },
                "Status": {
                    "format": "int32",
                    "description": " 0 = Submitted ,  1 = Processing ,  3 = Completed ,  4 = Failed ,  5 = PartialSuccess ,  6 = OnHold ,  7 = Cancelled ,  8 = Cancelled_Service_Restarted ,  9 = Aborted_Too_Much_Time_Consumed ,  10 = Cancelled_While_Running ",
                    "enum": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10],
                    "type": "integer",
                    "x-enumNames": [
                        "Submitted",
                        "Processing",
                        "Completed",
                        "Failed",
                        "PartialSuccess",
                        "OnHold",
                        "Cancelled",
                        "Cancelled_Service_Restarted",
                        "Aborted_Too_Much_Time_Consumed",
                        "Cancelled_While_Running"
                    ]
                },
                "ErrorMessage": {
                    "type": "string"
                },
                "Priority": {
                    "format": "int32",
                    "description": " 0 = BelowNormal ,  1 = Normal ,  2 = High ,  3 = Critical ",
                    "enum": [0, 1, 2, 3],
                    "type": "integer",
                    "x-enumNames": ["BelowNormal", "Normal", "High", "Critical"]
                },
                "SubmittedByEmail": {
                    "type": "string"
                },
                "StartedOn": {
                    "format": "date-time",
                    "type": "string"
                },
                "CompletedOn": {
                    "format": "date-time",
                    "type": "string"
                },
                "TimeElapsed": {
                    "format": "double",
                    "type": "number"
                },
                "ScheduledTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "ScheduledTimeVisible": {
                    "type": "boolean"
                },
                "Process": {
                    "type": "string"
                },
                "ScheduleTaskName": {
                    "type": "string"
                },
                "ScheduleTaskID": {
                    "format": "int32",
                    "type": "integer"
                },
                "IsModified": {
                    "type": "boolean"
                }
            }
        },
        "BVSoftware.BVC.Core.Content.QueuedJobParameter": {
            "type": "object",
            "properties": {
                "JobID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ParameterName": {
                    "type": "string"
                },
                "ParameterValue": {
                    "type": "string"
                }
            }
        },
        "CoreWebAdmin.Delta.DetailsEntity.Models.QueuedJob.QueuedJobPriorityRequest": {
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "Priority": {
                    "format": "int32",
                    "description": " 0 = BelowNormal ,  1 = Normal ,  2 = High ,  3 = Critical ",
                    "enum": [0, 1, 2, 3],
                    "type": "integer",
                    "x-enumNames": ["BelowNormal", "Normal", "High", "Critical"]
                }
            }
        },
        "SellerCloud.Delta.Models.Details.Concrete.QueuedJob.BulkUpdateLogDto": {
            "type": "object",
            "properties": {
                "CompanyId": {
                    "format": "int32",
                    "type": "integer"
                },
                "SubtractUnExportedOrderQty": {
                    "type": "boolean"
                },
                "SubtractUnShippedQty": {
                    "type": "boolean"
                },
                "CreateProductIfNotExists": {
                    "type": "boolean"
                },
                "DoNotUpdateProducts": {
                    "type": "boolean"
                },
                "TotalRecords": {
                    "format": "int32",
                    "type": "integer"
                },
                "TotalSucceeded": {
                    "format": "int32",
                    "type": "integer"
                },
                "TotalFailed": {
                    "format": "int32",
                    "type": "integer"
                },
                "DateUploaded": {
                    "format": "date-time",
                    "type": "string"
                },
                "UploadedById": {
                    "format": "int32",
                    "type": "integer"
                },
                "UploadedByName": {
                    "type": "string"
                },
                "Products": {
                    "$ref": "#/definitions/SellerCloud.Delta.Models.Common.PaginationResultsDto[SellerCloud.Delta.Models.Details.Concrete.QueuedJob.BulkUpdateLogProductDto]"
                }
            }
        },
        "SellerCloud.Delta.Models.Common.PaginationResultsDto[SellerCloud.Delta.Models.Details.Concrete.QueuedJob.BulkUpdateLogProductDto]": {
            "type": "object",
            "properties": {
                "Results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.Details.Concrete.QueuedJob.BulkUpdateLogProductDto"
                    }
                },
                "TotalResults": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.Details.Concrete.QueuedJob.BulkUpdateLogProductDto": {
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ProductID": {
                    "type": "string"
                },
                "IsSucceeded": {
                    "type": "boolean"
                },
                "HasWarning": {
                    "type": "boolean"
                },
                "ErrorMsg": {
                    "type": "string"
                },
                "Details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.Details.Concrete.QueuedJob.BulkUpdateLogProductDetailsDto"
                    }
                }
            }
        },
        "SellerCloud.Delta.Models.Details.Concrete.QueuedJob.BulkUpdateLogProductDetailsDto": {
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int64",
                    "type": "integer"
                },
                "ColumnName": {
                    "type": "string"
                },
                "OriginalValue": {
                    "type": "string"
                },
                "NewValue": {
                    "type": "string"
                },
                "ErrorMsg": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.QueuedJob.QueuedJobsFilter": {
            "type": "object",
            "properties": {
                "JobID": {
                    "format": "int32",
                    "type": "integer"
                },
                "JobType": {
                    "description": " 1 = Product_Bulk_Update ,  2 = Product_Custom_Export ,  3 = Product_Export_For_Channel ,  4 = Product_Revise_On_eBay ,  5 = Order_Export ,  6 = Product_Bulk_Edit ,  7 = Product_Bulk_Edit_EBay ,  8 = Product_Bulk_Edit_BuyDotCom ,  9 = eBayCategoryRefresh ,  10 = ImportProducts_Amazon ,  11 = ImportProducts_eBay ,  12 = ImportProducts_Magento ,  13 = ImportProducts_Yahoo ,  14 = Import_Vendor_Products ,  15 = Import_Product_Shadows ,  16 = eBay_Listings_Download ,  17 = eBay_Listings_Create_Update_Products ,  18 = Import_Product_Kits ,  19 = Get_Product_Info_From_Amazon ,  20 = Orders_Import_Tracking ,  21 = Product_Group_Series_Generate ,  22 = Orders_Import ,  23 = Import_Product_Alias ,  24 = Product_FindBuyDotComSKU ,  25 = Export_Customers ,  26 = Order_Delete ,  27 = Straight_Warehouse_Inventory ,  28 = ImportProducts_OverStock ,  29 = Report_FBA_Inventory ,  30 = Amazon_Reports_Task ,  31 = CWA_Report ,  32 = Create_Country_Specific_Shadow ,  33 = Product_Bulk_Update_Rollback ,  34 = Orders_FindPayment_For_EBayPaid ,  35 = Orders_FindPayment_For_PendingPayments ,  36 = Import_Product_Replacements ,  37 = Import_Product_Accessories ,  38 = Revise_EBay_Listings ,  39 = Report_Amazon_Active_Listings ,  40 = ImportProducts_Sears ,  41 = Create_Products_From_Amazon_Active_Listing ,  42 = ImportProducts_BuyDotCom ,  43 = Export_CM_Feed ,  44 = Warehouse_Inventory_Import ,  45 = Warehouse_Inventory_Calculate ,  46 = Import_Product_Group ,  47 = Report_Amazon_Pending_Orders ,  48 = Export_Product_Sales_Statistics ,  49 = Acknowledge_Old_Amazon_Orders ,  50 = Synchronize_Vendors ,  51 = LMSProcessOrders ,  52 = Toggle_Inventory_To_Warehouse_Mode ,  53 = Toggle_Inventory_To_NonWarehouse_Mode ,  54 = Import_Amazon_Orders ,  55 = BuyDotCom_SKU_List ,  56 = Orders_Import_OverStock ,  57 = Sync_eBay_Active_Listings ,  58 = Export_Ebay_Category_Suggestions ,  59 = Launch_On_eBay ,  60 = Post_On_Ebay ,  61 = eBay_End_Listings ,  62 = Inventory_Calculate ,  63 = Export_Product_Enabled_For_Channel ,  64 = Orders_Import_ShippingCost ,  65 = Pick_List_Generate ,  66 = Update_Shipping_Template_For_Products ,  67 = Purchase_Manifest_Create_PO ,  68 = Product_Export_General ,  69 = Product_Inventory_By_Warehouse_Export ,  70 = Purchase_Manifest_Update_Item_Cost ,  71 = ARCUST_Import_Customers ,  72 = ARCUST_Import_Orders ,  73 = Convert_Orders_To_WholeSale_Fulfillment ,  74 = Order_Refresh_From_Ebay_Paypal ,  75 = Update_Inventory_From_Ebay_Listings ,  76 = Product_Titles_Import ,  77 = Import_BuyDotCom_Listing_Report ,  78 = Merge_Shadow_Inventory_Into_Default_Warehouse ,  79 = eBay_Query_Title ,  80 = Web_Page_Access_Import ,  81 = PickList_Print_Invoices ,  82 = Import_OverStock_Settlement_Report ,  83 = Import_Sears_Settlement_Report ,  84 = Import_NewEgg_Settlement_Report ,  85 = Import_Purchase_Orders ,  86 = Import_Product_Specifics ,  87 = Revise_Listing_Part_On_Ebay ,  88 = Export_Inventory_By_Warehouse ,  89 = Export_Inventory_By_Warehouse_Per_Parent_SKU ,  90 = Import_BestBuy_Settlement_Report ,  91 = Export_Product_Sales_Statistics_Amazon ,  92 = Inventory_Snap_Shot ,  93 = Inventory_Snap_Shot_Restore ,  94 = Launch_On_Magento ,  95 = Receive_Whole_PO ,  96 = Launch_On_Amazon ,  97 = Inventory_Calculate_For_KitParents ,  98 = CM_Feed_Generate_For_Company ,  99 = Customers_Import ,  100 = Order_Send_Emails ,  101 = Update_Shipping_On_Amazon ,  102 = Import_Amazon_Settlement_Report ,  103 = Automation_via_FTP_Import_Orders ,  104 = Automation_via_FTP_Export_Invnetory ,  105 = Automation_via_FTP_Export_Tracking ,  106 = Magento_Execute_Cron ,  107 = Find_BuyDotCom_SKU_For_Task ,  108 = Import_Product_From_Amazon_Template ,  109 = Orders_ReApplySettlement_data ,  110 = Orders_Import_ShippingCost_DHL ,  111 = Orders_Evaluate_Payment_Status ,  112 = Products_Delete ,  113 = Orders_Import_For_Task ,  114 = ImportProducts_Wayfair ,  115 = Orders_Import_ShippingCost_UPS ,  116 = Merge_Shadow_Inventory_Into_Warehouse ,  117 = Import_Product_Info_Via_Plugin ,  118 = Product_Export_for_Task ,  119 = Import_Product_From_ChannelFeedTemplate ,  120 = OrderAction_ProcessRefunds ,  121 = Calcualte_Inventory_For_PO ,  122 = Calcualte_Inventory_For_FBA_Shipment ,  123 = Revise_Prices_On_Channel ,  124 = OrderAction_ProcessCancellation ,  125 = Orders_Replace_SKU_Bulk ,  126 = Print_Product_Label ,  127 = Load_Product_Default_Values ,  128 = Get_ASIN_From_UPC ,  129 = Warehouse_Inventory_Adjustments ,  130 = Export_Amazon_Search_Results ,  131 = Import_Product_Rebates ,  132 = Dismiss_Amazon_Listing_Audit ,  133 = Purchase_Orders_Export ,  134 = Orders_Import_From_3DCart ,  135 = Import_EBay_Orders ,  136 = Products_Import_For_Task ,  137 = Orders_Import_Tracking_For_Task ,  138 = Import_Product_Image_Info ,  139 = Export_Missing_Channel_Info ,  140 = OneSD_ImportInventory ,  141 = OneSD_ImportKits ,  142 = OneSD_ImportProducts ,  143 = OrderAction_ProcessBackOrder ,  144 = ProductImportEBayAuctions ,  145 = OrderAction_ProcessCancellationBySplitting ,  146 = Export_Product_Sell_Through_Report ,  147 = Export_Product_Inventory_age_report ,  148 = Launch_On_Sears ,  149 = DropShip_SendEmails ,  150 = FBA_Shipment_Reserve ,  151 = OrderAction_Create_Replacement_Order ,  152 = OrderAction_Create_Related_Order ,  153 = OrderAction_Cancel_And_Duplicate_Innotrac_Order ,  154 = Magento_Update_Prices ,  155 = Order_Export_Innotrac ,  156 = PO_Send_EMails ,  157 = Orders_Cancel_Innotrac ,  158 = Find_ASIN ,  159 = Notify_Order_Source_For_Shipping ,  160 = OrderAction_Cancel_1SD_Order ,  161 = OrderAction_Cancel_1SD_OrderItem ,  162 = OrderAction_SetInProcess ,  163 = FBA_Shipment_ResetPreview ,  164 = Orders_Set_InProcess ,  165 = Bonanza_Import_Categories ,  166 = Orders_Create_NewEggDotCom_API ,  167 = Launch_On_Bonanza ,  168 = Launch_On_NewEggDotcom ,  169 = Orders_Import_Website_via_Plugin ,  170 = Import_Sears_Attributes ,  171 = Upload_Product_Images_to_Hosting ,  172 = Orders_Cancel_1SD ,  173 = Orders_Bulk_Charge_Orders ,  174 = Upload_Product_Images_to_Magento ,  175 = OrderAction_SetRushOrder ,  176 = Calcuate_AverageCost_For_PO_Item_Receive ,  177 = Generate_Predicted_Purchase_Data ,  178 = Find_FNSKU ,  179 = Export_Product_Groups ,  180 = Find_EBay_ProductID ,  181 = Product_Notes_Import ,  182 = Orders_Change_ShipType ,  183 = WarehouseBin_SetQtyBulk ,  184 = Task_Run_Select_Query ,  185 = Orders_QueryShipmentStatus_Innotrac ,  186 = OrderAction_Process ,  187 = Innotrac_ShipNotification ,  188 = Export_Employees ,  189 = Import_Sears_Settlement_Report_via_API ,  190 = Launch_On_Website ,  191 = Product_UnUsed_UPC_Import ,  192 = Export_Kits ,  193 = Purchase_Manifest_Create_SKU_BasedOn_UPC ,  194 = Merge_Orders ,  195 = Bonanza_Update_Prices ,  196 = Bonanza_Update_Inventory ,  197 = Import_Product_Magento_Attribute ,  198 = Export_ebay_Product_Specific_Template ,  199 = Launch_On_OverStock ,  200 = Get_OverStock_Product_Info ,  201 = DisAssemble_N_Matrix ,  202 = Import_N_Matrix ,  203 = Launch_On_PriceFall ,  204 = PriceFall_Update_Inventory ,  205 = PriceFall_Update_Prices ,  206 = HKG_ImportInventory ,  207 = HKG_ImportKits ,  208 = HKG_ImportProducts ,  209 = Website_Update_Prices ,  210 = Import_Magento_Orders ,  211 = Enable_Disable_Products_For_Channel ,  212 = Launch_On_Channel ,  213 = Update_Inventory_On_Channel ,  214 = Update_Prices_On_Channel ,  215 = eBay_End_Listings_via_ProductID ,  216 = Relist_EBay_Items ,  217 = Export_Listed_On_Channel ,  218 = OneStopPlus_DownloadInventory_Products ,  219 = Export_Relations_On_Magento ,  220 = Orders_Generate_Profit_and_Loss ,  221 = Export_Ebay_Listing_Failure_For_Task ,  222 = Print_Product_Label_For_Orders ,  223 = PO_Delete ,  224 = Product_Create_Shadows_Per_Company ,  225 = Product_Export_Unfillable_For_Task ,  226 = Product_AverageCost_Prime ,  227 = Profit_and_Loss_Calculated_Export ,  228 = Profit_and_Loss_Calculated_Import ,  229 = Transaction_Profit_and_Loss_Calculated_Export ,  230 = Transaction_Profit_and_Loss_Calculated_Import ,  231 = Product_Warehouse_Inventory_Transfer_Request ,  232 = Order_Refresh_From_Magento ,  233 = Orders_Mark_Shipped ,  234 = Predictive_Purchase_Task_Create_PO ,  235 = Update_Inventory_Via_WS ,  236 = Amazon_Get_My_Price ,  237 = Update_Images_On_Amazon ,  238 = Inventory_Upload_Pre_Data ,  239 = Product_SplittedSKU_Import ,  240 = Disassemble_Kits ,  241 = PO_Export_for_Task ,  242 = Product_Convert_Currencies ,  243 = Product_Unshadow ,  244 = Do_Hazmat_Preview_For_Task ,  245 = PickList_Export_to_PDF_KitParent_Only ,  246 = Import_NewEggDotcom_Attributes ,  247 = Import_N_Matrix_Images ,  248 = Orders_DropShip_EnterTracking ,  249 = Import_N_Matrix_From_Amazon ,  250 = Import_BestBuy_Commission_Report ,  251 = Import_WalmartMarketplace_Commission_Report ,  252 = Import_BuyDotCom_Commission_Report ,  253 = Purchase_Order_Open_Reminder ,  254 = Find_ASIN_From_UPC_List ,  255 = Export_NewEggDotCom_Specifics ,  256 = Query_Amazon_Document_Response ,  257 = JET_Category_Download ,  258 = Export_BuyDotCom_Specifics ,  259 = Import_BuyDotCom_Attributes ,  260 = Export_All_Customers ,  261 = Inventory_Calculate_QtySold_History ,  262 = Warehouse_Inventory_Export ,  263 = Calcuate_Inventory_For_All_SKUs ,  264 = Initialize_Bin ,  265 = Transfer_Between_SKUs_Bulk ,  266 = POContainer_Receive ,  267 = UnReceive_PO ,  268 = Product_Revise_Prices_on_All_Channels ,  269 = Export_Sears_Attributes ,  270 = Generate_FBA_Business_Report ,  271 = Export_Product_Images ,  272 = Import_Product_Manual_Reserves ,  273 = Create_Shadows_For_Products ,  274 = Products_Import_Inventory_For_Task ,  275 = Import_Mapped_Orders ,  276 = Import_Mapped_Tracking ,  277 = Import_Mapped_Inventory ,  278 = Import_ProductWarehouse_Bin_Info ,  279 = Import_FBA_Shipment ,  280 = Export_FBA_Shipment ,  281 = Add_Records_For_Unshipped_Bins ,  282 = Replace_Kit_Products ,  283 = Import_Bonanza_Traits ,  284 = Export_RMA ,  285 = Orders_Create_NewEggBiz_API ,  286 = RMA_Export_for_Task ,  287 = Import_RMA ,  288 = Revise_Listing_Part_On_Ebay_via_ItemID ,  289 = Merge_SKU ,  290 = Product_Import_Magento_Tier_Pricing ,  291 = RMA_Import_for_Task ,  292 = AdjustWarehouseBins ,  293 = ReCalculateBackOrders_forOrders ,  294 = Import_Magento_Products ,  295 = Import_NewEggBiz_Attributes ,  296 = Amazon_Attribute_to_Product_Specific ,  297 = Order_Refresh_From_Paypal ,  298 = Orders_ReCalc_Order_Cost ,  299 = Import_FBA_Shipment_From_File ,  300 = Import_Product_Clones ,  301 = Import_JET_Attributes ,  302 = Merge_Customers ,  303 = Import_ZipCode_Data ,  304 = Export_Magento_Attributes ,  305 = Export_JET_Attributes ,  306 = Create_SettlementData_PandL ,  307 = Import_Amazon_Report ,  308 = Get_Amazon_BuyBox_Price ,  309 = Warehouse_Delete ,  310 = Export_Product_Manual_Reserves ,  311 = Archive_Products_On_JET ,  312 = Export_Shopify_Metadata ,  313 = Website_Update_Listing_Part_via_Plugin ,  314 = Import_N_Matrix_Simple ,  315 = Import_Product_Manufacturer ,  316 = Etsy_category_refresh ,  317 = Import_eBay_Settlement_Report ,  318 = Export_Product_Replacement_SKUs ,  319 = Shopify_Download_Listings ,  320 = Reverb_Download_ActiveListings ,  321 = Import_ProductWarehouse_Bin_Adjustments ,  322 = Import_WalmartMarketplace_Attributes ,  323 = Find_Sales_Rank ,  324 = Import_Product_average_Cost_Adjustments ,  325 = Zero_Out_Inventory ,  326 = Export_WalmartMarketplace_Attributes ,  327 = Import_WalmartMarketplace_Attributes_Variation ,  328 = Break_Kits ,  329 = Export_Shopify_Tags ,  330 = Update_ProductTypeDefaults_On_Products ,  331 = FBA_Shipment_Delete ,  332 = Import_Product_Documents ,  333 = Export_N_Matrix ,  334 = Update_GroupOn_Cost_On_Orders ,  335 = LightspeedPOS_Get_ItemIDs ,  336 = LightspeedPOS_Create_ItemCount ,  337 = ChannelInvoiceSettlement ,  338 = MassGenieCategoriesUpdate ,  339 = Orders_SetVoid ,  340 = Retire_On_WalmartMarketplace ,  341 = Update_Walmart_Marketplace_ShippingTemplate_On_Products ,  342 = Upload_Shipping_Exception_On_JET ,  343 = ReverbCategoriesUpdate ,  344 = TangaCategoriesUpdate ,  345 = NewEgg_Shipment_ResetPreview ,  346 = UnShip_Orders ,  347 = HouzzCategoriesUpdate ,  348 = HouzzCategoryAttributesUpdate ,  349 = FBA_Reconciliation_Export_For_Task ,  350 = Calculate_PredictivePurchasing_InStockDays_V2 ,  351 = Import_Amazon_Attributes ,  352 = NewEggDotCom_Shipment_Reserve ,  353 = Calculate_Package_Size ,  354 = Orders_Receive_Magento_Payments ,  355 = Orders_Acknowledge_to_Channel ,  366 = Export_Amazon_Attributes ,  367 = Orders_ReApply_CoOp_Fee ,  368 = PO_Create_from_ShippingContainers ,  369 = Disconnect_Inventory_From_Channel ,  370 = Update_Product_Weight_On_Related_Orders ,  371 = Products_Clone ,  372 = Products_Copy ,  373 = Products_ChangeSKU ,  374 = Product_Update_UPC_For_Channel ,  375 = Import_Vendor_Products_For_Task ,  376 = Product_Export_UPC_For_Channel ,  377 = NewEggDotCom_Update_Product_Volume_Discount ,  378 = Walmart_Update_Lag_Time ,  379 = BuyDotCom_Import_Catagories ,  380 = WalmartMarketplace_Create_Product_From_Listing ,  381 = Import_Purchase_Orders_Items ,  382 = Export_Orders_Dropship ,  383 = Import_NewEggDotcom_Int_Prices ,  384 = Import_Groupon_Chargeback ,  385 = Product_Titles_Export ,  386 = Product_Export_Kit_Assemblies ,  387 = Orders_Taxjar_Submit_Taxes ,  388 = Orders_Taxjar_Post_Taxes ,  389 = Export_Channel_Category_Suggestions ,  390 = WalmartMarketplace_Get_Product_Info ,  391 = Product_Shadow_Export ,  392 = Shipping_Containers_Export ,  393 = Import_Product_ITF14 ,  394 = Import_CustomColumns ,  395 = Remove_Business_Prices_On_Amazon ,  396 = Export_Etsy_Attributes ,  397 = Import_Etsy_Attributes ,  398 = FBA_Shipment_QueryStatus ,  399 = Predictive_Restocking_Task_Create_PO ,  400 = Orders_Query_Shipping_Delivery_Status ,  401 = Orders_Import_ShippingCost_For_Task ,  402 = InventoryArrival_For_Task ,  403 = ShadowPersistencyChanged ,  404 = Product_DeleteBrokenImages ,  405 = Export_Houzz_Attributes ,  406 = Import_Houzz_Attributes ,  407 = Product_Update_ManufacturerSKU_For_Channel ,  408 = Wayfair_RegisterMutation ,  409 = Import_Warehouse_Inventory_ForProfile ,  410 = Save_Variation_Products ,  411 = Sears_UpdateLeadTimeForProduct ,  412 = Orders_Import_ShippingCost_UPSMI ,  413 = Import_Walmart_Marketplace_Settlement ,  414 = Export_VendorCentral_Shipment ,  415 = Prepare_Client_Wide_Data ,  416 = Import_JET_Settlement ,  417 = Prepare_NMatrix_Simple ,  418 = TargetPlus_DownloadApprovedItemTypes_With_Taxonomy ,  419 = Product_SetActive_InActive ,  420 = Import_VendorCentral_Shipment ,  421 = POContainer_UpdateShippingStatus ,  422 = Update_Images_On_Channel ,  433 = PartiallyReceivedShipments_ClearInTransitInventory ,  434 = Import_Product_Fitment ,  435 = Wish_EnrollProductInReturnsProgram ,  436 = Orders_Reapply_FBA_Returns ,  437 = Disconnect_Shipping_Confirmation_From_Order_Source ,  438 = Orders_Import_ShippingCost_FedEx ,  439 = Warehouse_Transfer_Requests_Delete ,  440 = Warehouse_Bin_Movememnt_Export ,  441 = Fix_Walmart_Marketplace_Attributes ,  442 = Export_Product_Accessories ,  443 = Houzz_UpdateProduct ,  444 = Import_AssembleKits ,  445 = Import_WarehouseTransferRequestReceive ,  446 = Import_Order_PnL_Adjustments ,  447 = Export_Product_Warehouse_Images ,  448 = Orders_GroupActions ,  449 = Orders_ImportVendorCentralCheckAvailability ,  450 = Import_Product_Image_Info_ChannelSpecific ,  451 = Lock_ShippingMethod_InBulk ,  452 = Import_Product_WarehouseImage ,  453 = Import_WarehouseTransferRequest ,  454 = CleanOut_FBA_Movements ,  455 = Orders_Import_Partial_Info ,  456 = Export_Order_PnL_Adjustments ,  457 = Export_Order_SettlementDetails ,  458 = Export_SKUUPCAliasReconciliationReport ,  459 = Amazon_AdReport_RequestSave ,  460 = Import_Shipping_Preference_For_Qty ,  461 = Resize_Product_Images ,  462 = Export_WalmartMarketplace_WFS_Attributes ,  463 = Import_WalmartMarketplace_WFS_Attributes ,  464 = WFS_ShipmentInbound_Delete ,  465 = Product_Warehouse_Inventory_Transfer_Request_RemoveIntransit ,  466 = Revise_Listing_Part_On_Magento ,  467 = Export_WFS_Shipment ,  468 = Re_Apply_CreditCard_Fee ,  469 = WFS_Shipment_Reserve ,  470 = Calcualte_Inventory_For_WFS_Shipment ,  471 = Switch_Fulfilled_By ,  472 = Export_Shipping_Preference_For_Qty ,  473 = Import_Inventory_ForProfile ,  474 = eBay_Refresh_Attributes ,  475 = Fix_PO_Qty_Before_Receive ,  476 = WalmartMarketplace_Bulk_Convert_V3_Attributes_To_V4 ,  477 = Commit_Cycle_Count ,  478 = Customers_Import_Documents ,  479 = Wish_RemoveProduct ,  480 = Import_Order_Transparency_Codes ,  481 = FBA_InboundShipmentUpdateDisconnect ,  482 = KitAssemblyWorkOrders_Export_for_Task ,  483 = Import_WFS_Shipment_From_File ,  484 = Associate_PredefinedShippingTemplate_On_WalmartMarketplace ,  485 = Import_WFS_Shipment ,  486 = VendorInvoice_Import_for_Task ,  487 = NewEggDotCom_Export_ItemLookup ,  488 = VendorInvoice_Export_for_Task ,  489 = Import_NewEgg_Shipment ,  490 = eBay_Export_Parts_Compatibility ,  491 = WalmartMarketplace_ConnectToPriceUpdate ,  492 = Orders_ImportSerial ,  493 = Export_N_Matrix_Images ,  494 = Bulk_Upload_SKU_eBayMarketingCampaign ,  495 = Wish_DownloadBrand ,  496 = Export_ProductLotNumberActivity ,  497 = Export_VendorSKU ,  498 = Orders_UpdateQBExported ,  499 = Amazon_Query_FBA_ShippingStatus ,  500 = Orders_UpdateShippingRequireThirdParty ,  501 = ProductWarehouseBin_AddAjustment ,  502 = WholesaleAgenda_Import ,  503 = Rebuild_AverageCost_For_All_Products ,  504 = VendorInvoice_Delete ,  505 = PartiallyReceivedWFSShipments_ClearInTransitInventory ,  506 = Houzz_Update_Lead_Time ,  507 = WarehouseInventoryTransfer_ClearInTransitInventory ,  508 = Product_Import_BigCommerce_Tier_Pricing ,  509 = Predictive_WFS_Restocking_Task_Create_PO ,  510 = Disconnect_Price_From_Channel ,  511 = Brand_Import ,  512 = Export_Shipping_Containers_With_Items_for_Task ,  513 = Import_Website_Attributes ,  514 = Export_Product_Alias_for_Task ,  515 = Import_Product_Alias_for_Task ,  516 = Export_Warehouse_Inventory_Transfer_Requests_for_Task ,  517 = Export_Listed_On_Channel_for_Task ,  518 = Export_Customer_for_Task ,  519 = Import_Shopify_MetaField ,  520 = Export_Product_LastInventorySent ,  521 = WarehouseBin_PrintBarcode ,  522 = WalmartMarketplace_CompetitivePricingOptInOrOptOut ,  523 = WFS_ShipmentInbound_QueryStatus ,  524 = Orders_ApplyRebates ,  525 = Dynamic_Code_Execution ,  526 = AdHoc_Plugin_Execution ,  527 = Products_Enable_For_WFS ",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "description": " 1 = Product_Bulk_Update ,  2 = Product_Custom_Export ,  3 = Product_Export_For_Channel ,  4 = Product_Revise_On_eBay ,  5 = Order_Export ,  6 = Product_Bulk_Edit ,  7 = Product_Bulk_Edit_EBay ,  8 = Product_Bulk_Edit_BuyDotCom ,  9 = eBayCategoryRefresh ,  10 = ImportProducts_Amazon ,  11 = ImportProducts_eBay ,  12 = ImportProducts_Magento ,  13 = ImportProducts_Yahoo ,  14 = Import_Vendor_Products ,  15 = Import_Product_Shadows ,  16 = eBay_Listings_Download ,  17 = eBay_Listings_Create_Update_Products ,  18 = Import_Product_Kits ,  19 = Get_Product_Info_From_Amazon ,  20 = Orders_Import_Tracking ,  21 = Product_Group_Series_Generate ,  22 = Orders_Import ,  23 = Import_Product_Alias ,  24 = Product_FindBuyDotComSKU ,  25 = Export_Customers ,  26 = Order_Delete ,  27 = Straight_Warehouse_Inventory ,  28 = ImportProducts_OverStock ,  29 = Report_FBA_Inventory ,  30 = Amazon_Reports_Task ,  31 = CWA_Report ,  32 = Create_Country_Specific_Shadow ,  33 = Product_Bulk_Update_Rollback ,  34 = Orders_FindPayment_For_EBayPaid ,  35 = Orders_FindPayment_For_PendingPayments ,  36 = Import_Product_Replacements ,  37 = Import_Product_Accessories ,  38 = Revise_EBay_Listings ,  39 = Report_Amazon_Active_Listings ,  40 = ImportProducts_Sears ,  41 = Create_Products_From_Amazon_Active_Listing ,  42 = ImportProducts_BuyDotCom ,  43 = Export_CM_Feed ,  44 = Warehouse_Inventory_Import ,  45 = Warehouse_Inventory_Calculate ,  46 = Import_Product_Group ,  47 = Report_Amazon_Pending_Orders ,  48 = Export_Product_Sales_Statistics ,  49 = Acknowledge_Old_Amazon_Orders ,  50 = Synchronize_Vendors ,  51 = LMSProcessOrders ,  52 = Toggle_Inventory_To_Warehouse_Mode ,  53 = Toggle_Inventory_To_NonWarehouse_Mode ,  54 = Import_Amazon_Orders ,  55 = BuyDotCom_SKU_List ,  56 = Orders_Import_OverStock ,  57 = Sync_eBay_Active_Listings ,  58 = Export_Ebay_Category_Suggestions ,  59 = Launch_On_eBay ,  60 = Post_On_Ebay ,  61 = eBay_End_Listings ,  62 = Inventory_Calculate ,  63 = Export_Product_Enabled_For_Channel ,  64 = Orders_Import_ShippingCost ,  65 = Pick_List_Generate ,  66 = Update_Shipping_Template_For_Products ,  67 = Purchase_Manifest_Create_PO ,  68 = Product_Export_General ,  69 = Product_Inventory_By_Warehouse_Export ,  70 = Purchase_Manifest_Update_Item_Cost ,  71 = ARCUST_Import_Customers ,  72 = ARCUST_Import_Orders ,  73 = Convert_Orders_To_WholeSale_Fulfillment ,  74 = Order_Refresh_From_Ebay_Paypal ,  75 = Update_Inventory_From_Ebay_Listings ,  76 = Product_Titles_Import ,  77 = Import_BuyDotCom_Listing_Report ,  78 = Merge_Shadow_Inventory_Into_Default_Warehouse ,  79 = eBay_Query_Title ,  80 = Web_Page_Access_Import ,  81 = PickList_Print_Invoices ,  82 = Import_OverStock_Settlement_Report ,  83 = Import_Sears_Settlement_Report ,  84 = Import_NewEgg_Settlement_Report ,  85 = Import_Purchase_Orders ,  86 = Import_Product_Specifics ,  87 = Revise_Listing_Part_On_Ebay ,  88 = Export_Inventory_By_Warehouse ,  89 = Export_Inventory_By_Warehouse_Per_Parent_SKU ,  90 = Import_BestBuy_Settlement_Report ,  91 = Export_Product_Sales_Statistics_Amazon ,  92 = Inventory_Snap_Shot ,  93 = Inventory_Snap_Shot_Restore ,  94 = Launch_On_Magento ,  95 = Receive_Whole_PO ,  96 = Launch_On_Amazon ,  97 = Inventory_Calculate_For_KitParents ,  98 = CM_Feed_Generate_For_Company ,  99 = Customers_Import ,  100 = Order_Send_Emails ,  101 = Update_Shipping_On_Amazon ,  102 = Import_Amazon_Settlement_Report ,  103 = Automation_via_FTP_Import_Orders ,  104 = Automation_via_FTP_Export_Invnetory ,  105 = Automation_via_FTP_Export_Tracking ,  106 = Magento_Execute_Cron ,  107 = Find_BuyDotCom_SKU_For_Task ,  108 = Import_Product_From_Amazon_Template ,  109 = Orders_ReApplySettlement_data ,  110 = Orders_Import_ShippingCost_DHL ,  111 = Orders_Evaluate_Payment_Status ,  112 = Products_Delete ,  113 = Orders_Import_For_Task ,  114 = ImportProducts_Wayfair ,  115 = Orders_Import_ShippingCost_UPS ,  116 = Merge_Shadow_Inventory_Into_Warehouse ,  117 = Import_Product_Info_Via_Plugin ,  118 = Product_Export_for_Task ,  119 = Import_Product_From_ChannelFeedTemplate ,  120 = OrderAction_ProcessRefunds ,  121 = Calcualte_Inventory_For_PO ,  122 = Calcualte_Inventory_For_FBA_Shipment ,  123 = Revise_Prices_On_Channel ,  124 = OrderAction_ProcessCancellation ,  125 = Orders_Replace_SKU_Bulk ,  126 = Print_Product_Label ,  127 = Load_Product_Default_Values ,  128 = Get_ASIN_From_UPC ,  129 = Warehouse_Inventory_Adjustments ,  130 = Export_Amazon_Search_Results ,  131 = Import_Product_Rebates ,  132 = Dismiss_Amazon_Listing_Audit ,  133 = Purchase_Orders_Export ,  134 = Orders_Import_From_3DCart ,  135 = Import_EBay_Orders ,  136 = Products_Import_For_Task ,  137 = Orders_Import_Tracking_For_Task ,  138 = Import_Product_Image_Info ,  139 = Export_Missing_Channel_Info ,  140 = OneSD_ImportInventory ,  141 = OneSD_ImportKits ,  142 = OneSD_ImportProducts ,  143 = OrderAction_ProcessBackOrder ,  144 = ProductImportEBayAuctions ,  145 = OrderAction_ProcessCancellationBySplitting ,  146 = Export_Product_Sell_Through_Report ,  147 = Export_Product_Inventory_age_report ,  148 = Launch_On_Sears ,  149 = DropShip_SendEmails ,  150 = FBA_Shipment_Reserve ,  151 = OrderAction_Create_Replacement_Order ,  152 = OrderAction_Create_Related_Order ,  153 = OrderAction_Cancel_And_Duplicate_Innotrac_Order ,  154 = Magento_Update_Prices ,  155 = Order_Export_Innotrac ,  156 = PO_Send_EMails ,  157 = Orders_Cancel_Innotrac ,  158 = Find_ASIN ,  159 = Notify_Order_Source_For_Shipping ,  160 = OrderAction_Cancel_1SD_Order ,  161 = OrderAction_Cancel_1SD_OrderItem ,  162 = OrderAction_SetInProcess ,  163 = FBA_Shipment_ResetPreview ,  164 = Orders_Set_InProcess ,  165 = Bonanza_Import_Categories ,  166 = Orders_Create_NewEggDotCom_API ,  167 = Launch_On_Bonanza ,  168 = Launch_On_NewEggDotcom ,  169 = Orders_Import_Website_via_Plugin ,  170 = Import_Sears_Attributes ,  171 = Upload_Product_Images_to_Hosting ,  172 = Orders_Cancel_1SD ,  173 = Orders_Bulk_Charge_Orders ,  174 = Upload_Product_Images_to_Magento ,  175 = OrderAction_SetRushOrder ,  176 = Calcuate_AverageCost_For_PO_Item_Receive ,  177 = Generate_Predicted_Purchase_Data ,  178 = Find_FNSKU ,  179 = Export_Product_Groups ,  180 = Find_EBay_ProductID ,  181 = Product_Notes_Import ,  182 = Orders_Change_ShipType ,  183 = WarehouseBin_SetQtyBulk ,  184 = Task_Run_Select_Query ,  185 = Orders_QueryShipmentStatus_Innotrac ,  186 = OrderAction_Process ,  187 = Innotrac_ShipNotification ,  188 = Export_Employees ,  189 = Import_Sears_Settlement_Report_via_API ,  190 = Launch_On_Website ,  191 = Product_UnUsed_UPC_Import ,  192 = Export_Kits ,  193 = Purchase_Manifest_Create_SKU_BasedOn_UPC ,  194 = Merge_Orders ,  195 = Bonanza_Update_Prices ,  196 = Bonanza_Update_Inventory ,  197 = Import_Product_Magento_Attribute ,  198 = Export_ebay_Product_Specific_Template ,  199 = Launch_On_OverStock ,  200 = Get_OverStock_Product_Info ,  201 = DisAssemble_N_Matrix ,  202 = Import_N_Matrix ,  203 = Launch_On_PriceFall ,  204 = PriceFall_Update_Inventory ,  205 = PriceFall_Update_Prices ,  206 = HKG_ImportInventory ,  207 = HKG_ImportKits ,  208 = HKG_ImportProducts ,  209 = Website_Update_Prices ,  210 = Import_Magento_Orders ,  211 = Enable_Disable_Products_For_Channel ,  212 = Launch_On_Channel ,  213 = Update_Inventory_On_Channel ,  214 = Update_Prices_On_Channel ,  215 = eBay_End_Listings_via_ProductID ,  216 = Relist_EBay_Items ,  217 = Export_Listed_On_Channel ,  218 = OneStopPlus_DownloadInventory_Products ,  219 = Export_Relations_On_Magento ,  220 = Orders_Generate_Profit_and_Loss ,  221 = Export_Ebay_Listing_Failure_For_Task ,  222 = Print_Product_Label_For_Orders ,  223 = PO_Delete ,  224 = Product_Create_Shadows_Per_Company ,  225 = Product_Export_Unfillable_For_Task ,  226 = Product_AverageCost_Prime ,  227 = Profit_and_Loss_Calculated_Export ,  228 = Profit_and_Loss_Calculated_Import ,  229 = Transaction_Profit_and_Loss_Calculated_Export ,  230 = Transaction_Profit_and_Loss_Calculated_Import ,  231 = Product_Warehouse_Inventory_Transfer_Request ,  232 = Order_Refresh_From_Magento ,  233 = Orders_Mark_Shipped ,  234 = Predictive_Purchase_Task_Create_PO ,  235 = Update_Inventory_Via_WS ,  236 = Amazon_Get_My_Price ,  237 = Update_Images_On_Amazon ,  238 = Inventory_Upload_Pre_Data ,  239 = Product_SplittedSKU_Import ,  240 = Disassemble_Kits ,  241 = PO_Export_for_Task ,  242 = Product_Convert_Currencies ,  243 = Product_Unshadow ,  244 = Do_Hazmat_Preview_For_Task ,  245 = PickList_Export_to_PDF_KitParent_Only ,  246 = Import_NewEggDotcom_Attributes ,  247 = Import_N_Matrix_Images ,  248 = Orders_DropShip_EnterTracking ,  249 = Import_N_Matrix_From_Amazon ,  250 = Import_BestBuy_Commission_Report ,  251 = Import_WalmartMarketplace_Commission_Report ,  252 = Import_BuyDotCom_Commission_Report ,  253 = Purchase_Order_Open_Reminder ,  254 = Find_ASIN_From_UPC_List ,  255 = Export_NewEggDotCom_Specifics ,  256 = Query_Amazon_Document_Response ,  257 = JET_Category_Download ,  258 = Export_BuyDotCom_Specifics ,  259 = Import_BuyDotCom_Attributes ,  260 = Export_All_Customers ,  261 = Inventory_Calculate_QtySold_History ,  262 = Warehouse_Inventory_Export ,  263 = Calcuate_Inventory_For_All_SKUs ,  264 = Initialize_Bin ,  265 = Transfer_Between_SKUs_Bulk ,  266 = POContainer_Receive ,  267 = UnReceive_PO ,  268 = Product_Revise_Prices_on_All_Channels ,  269 = Export_Sears_Attributes ,  270 = Generate_FBA_Business_Report ,  271 = Export_Product_Images ,  272 = Import_Product_Manual_Reserves ,  273 = Create_Shadows_For_Products ,  274 = Products_Import_Inventory_For_Task ,  275 = Import_Mapped_Orders ,  276 = Import_Mapped_Tracking ,  277 = Import_Mapped_Inventory ,  278 = Import_ProductWarehouse_Bin_Info ,  279 = Import_FBA_Shipment ,  280 = Export_FBA_Shipment ,  281 = Add_Records_For_Unshipped_Bins ,  282 = Replace_Kit_Products ,  283 = Import_Bonanza_Traits ,  284 = Export_RMA ,  285 = Orders_Create_NewEggBiz_API ,  286 = RMA_Export_for_Task ,  287 = Import_RMA ,  288 = Revise_Listing_Part_On_Ebay_via_ItemID ,  289 = Merge_SKU ,  290 = Product_Import_Magento_Tier_Pricing ,  291 = RMA_Import_for_Task ,  292 = AdjustWarehouseBins ,  293 = ReCalculateBackOrders_forOrders ,  294 = Import_Magento_Products ,  295 = Import_NewEggBiz_Attributes ,  296 = Amazon_Attribute_to_Product_Specific ,  297 = Order_Refresh_From_Paypal ,  298 = Orders_ReCalc_Order_Cost ,  299 = Import_FBA_Shipment_From_File ,  300 = Import_Product_Clones ,  301 = Import_JET_Attributes ,  302 = Merge_Customers ,  303 = Import_ZipCode_Data ,  304 = Export_Magento_Attributes ,  305 = Export_JET_Attributes ,  306 = Create_SettlementData_PandL ,  307 = Import_Amazon_Report ,  308 = Get_Amazon_BuyBox_Price ,  309 = Warehouse_Delete ,  310 = Export_Product_Manual_Reserves ,  311 = Archive_Products_On_JET ,  312 = Export_Shopify_Metadata ,  313 = Website_Update_Listing_Part_via_Plugin ,  314 = Import_N_Matrix_Simple ,  315 = Import_Product_Manufacturer ,  316 = Etsy_category_refresh ,  317 = Import_eBay_Settlement_Report ,  318 = Export_Product_Replacement_SKUs ,  319 = Shopify_Download_Listings ,  320 = Reverb_Download_ActiveListings ,  321 = Import_ProductWarehouse_Bin_Adjustments ,  322 = Import_WalmartMarketplace_Attributes ,  323 = Find_Sales_Rank ,  324 = Import_Product_average_Cost_Adjustments ,  325 = Zero_Out_Inventory ,  326 = Export_WalmartMarketplace_Attributes ,  327 = Import_WalmartMarketplace_Attributes_Variation ,  328 = Break_Kits ,  329 = Export_Shopify_Tags ,  330 = Update_ProductTypeDefaults_On_Products ,  331 = FBA_Shipment_Delete ,  332 = Import_Product_Documents ,  333 = Export_N_Matrix ,  334 = Update_GroupOn_Cost_On_Orders ,  335 = LightspeedPOS_Get_ItemIDs ,  336 = LightspeedPOS_Create_ItemCount ,  337 = ChannelInvoiceSettlement ,  338 = MassGenieCategoriesUpdate ,  339 = Orders_SetVoid ,  340 = Retire_On_WalmartMarketplace ,  341 = Update_Walmart_Marketplace_ShippingTemplate_On_Products ,  342 = Upload_Shipping_Exception_On_JET ,  343 = ReverbCategoriesUpdate ,  344 = TangaCategoriesUpdate ,  345 = NewEgg_Shipment_ResetPreview ,  346 = UnShip_Orders ,  347 = HouzzCategoriesUpdate ,  348 = HouzzCategoryAttributesUpdate ,  349 = FBA_Reconciliation_Export_For_Task ,  350 = Calculate_PredictivePurchasing_InStockDays_V2 ,  351 = Import_Amazon_Attributes ,  352 = NewEggDotCom_Shipment_Reserve ,  353 = Calculate_Package_Size ,  354 = Orders_Receive_Magento_Payments ,  355 = Orders_Acknowledge_to_Channel ,  366 = Export_Amazon_Attributes ,  367 = Orders_ReApply_CoOp_Fee ,  368 = PO_Create_from_ShippingContainers ,  369 = Disconnect_Inventory_From_Channel ,  370 = Update_Product_Weight_On_Related_Orders ,  371 = Products_Clone ,  372 = Products_Copy ,  373 = Products_ChangeSKU ,  374 = Product_Update_UPC_For_Channel ,  375 = Import_Vendor_Products_For_Task ,  376 = Product_Export_UPC_For_Channel ,  377 = NewEggDotCom_Update_Product_Volume_Discount ,  378 = Walmart_Update_Lag_Time ,  379 = BuyDotCom_Import_Catagories ,  380 = WalmartMarketplace_Create_Product_From_Listing ,  381 = Import_Purchase_Orders_Items ,  382 = Export_Orders_Dropship ,  383 = Import_NewEggDotcom_Int_Prices ,  384 = Import_Groupon_Chargeback ,  385 = Product_Titles_Export ,  386 = Product_Export_Kit_Assemblies ,  387 = Orders_Taxjar_Submit_Taxes ,  388 = Orders_Taxjar_Post_Taxes ,  389 = Export_Channel_Category_Suggestions ,  390 = WalmartMarketplace_Get_Product_Info ,  391 = Product_Shadow_Export ,  392 = Shipping_Containers_Export ,  393 = Import_Product_ITF14 ,  394 = Import_CustomColumns ,  395 = Remove_Business_Prices_On_Amazon ,  396 = Export_Etsy_Attributes ,  397 = Import_Etsy_Attributes ,  398 = FBA_Shipment_QueryStatus ,  399 = Predictive_Restocking_Task_Create_PO ,  400 = Orders_Query_Shipping_Delivery_Status ,  401 = Orders_Import_ShippingCost_For_Task ,  402 = InventoryArrival_For_Task ,  403 = ShadowPersistencyChanged ,  404 = Product_DeleteBrokenImages ,  405 = Export_Houzz_Attributes ,  406 = Import_Houzz_Attributes ,  407 = Product_Update_ManufacturerSKU_For_Channel ,  408 = Wayfair_RegisterMutation ,  409 = Import_Warehouse_Inventory_ForProfile ,  410 = Save_Variation_Products ,  411 = Sears_UpdateLeadTimeForProduct ,  412 = Orders_Import_ShippingCost_UPSMI ,  413 = Import_Walmart_Marketplace_Settlement ,  414 = Export_VendorCentral_Shipment ,  415 = Prepare_Client_Wide_Data ,  416 = Import_JET_Settlement ,  417 = Prepare_NMatrix_Simple ,  418 = TargetPlus_DownloadApprovedItemTypes_With_Taxonomy ,  419 = Product_SetActive_InActive ,  420 = Import_VendorCentral_Shipment ,  421 = POContainer_UpdateShippingStatus ,  422 = Update_Images_On_Channel ,  433 = PartiallyReceivedShipments_ClearInTransitInventory ,  434 = Import_Product_Fitment ,  435 = Wish_EnrollProductInReturnsProgram ,  436 = Orders_Reapply_FBA_Returns ,  437 = Disconnect_Shipping_Confirmation_From_Order_Source ,  438 = Orders_Import_ShippingCost_FedEx ,  439 = Warehouse_Transfer_Requests_Delete ,  440 = Warehouse_Bin_Movememnt_Export ,  441 = Fix_Walmart_Marketplace_Attributes ,  442 = Export_Product_Accessories ,  443 = Houzz_UpdateProduct ,  444 = Import_AssembleKits ,  445 = Import_WarehouseTransferRequestReceive ,  446 = Import_Order_PnL_Adjustments ,  447 = Export_Product_Warehouse_Images ,  448 = Orders_GroupActions ,  449 = Orders_ImportVendorCentralCheckAvailability ,  450 = Import_Product_Image_Info_ChannelSpecific ,  451 = Lock_ShippingMethod_InBulk ,  452 = Import_Product_WarehouseImage ,  453 = Import_WarehouseTransferRequest ,  454 = CleanOut_FBA_Movements ,  455 = Orders_Import_Partial_Info ,  456 = Export_Order_PnL_Adjustments ,  457 = Export_Order_SettlementDetails ,  458 = Export_SKUUPCAliasReconciliationReport ,  459 = Amazon_AdReport_RequestSave ,  460 = Import_Shipping_Preference_For_Qty ,  461 = Resize_Product_Images ,  462 = Export_WalmartMarketplace_WFS_Attributes ,  463 = Import_WalmartMarketplace_WFS_Attributes ,  464 = WFS_ShipmentInbound_Delete ,  465 = Product_Warehouse_Inventory_Transfer_Request_RemoveIntransit ,  466 = Revise_Listing_Part_On_Magento ,  467 = Export_WFS_Shipment ,  468 = Re_Apply_CreditCard_Fee ,  469 = WFS_Shipment_Reserve ,  470 = Calcualte_Inventory_For_WFS_Shipment ,  471 = Switch_Fulfilled_By ,  472 = Export_Shipping_Preference_For_Qty ,  473 = Import_Inventory_ForProfile ,  474 = eBay_Refresh_Attributes ,  475 = Fix_PO_Qty_Before_Receive ,  476 = WalmartMarketplace_Bulk_Convert_V3_Attributes_To_V4 ,  477 = Commit_Cycle_Count ,  478 = Customers_Import_Documents ,  479 = Wish_RemoveProduct ,  480 = Import_Order_Transparency_Codes ,  481 = FBA_InboundShipmentUpdateDisconnect ,  482 = KitAssemblyWorkOrders_Export_for_Task ,  483 = Import_WFS_Shipment_From_File ,  484 = Associate_PredefinedShippingTemplate_On_WalmartMarketplace ,  485 = Import_WFS_Shipment ,  486 = VendorInvoice_Import_for_Task ,  487 = NewEggDotCom_Export_ItemLookup ,  488 = VendorInvoice_Export_for_Task ,  489 = Import_NewEgg_Shipment ,  490 = eBay_Export_Parts_Compatibility ,  491 = WalmartMarketplace_ConnectToPriceUpdate ,  492 = Orders_ImportSerial ,  493 = Export_N_Matrix_Images ,  494 = Bulk_Upload_SKU_eBayMarketingCampaign ,  495 = Wish_DownloadBrand ,  496 = Export_ProductLotNumberActivity ,  497 = Export_VendorSKU ,  498 = Orders_UpdateQBExported ,  499 = Amazon_Query_FBA_ShippingStatus ,  500 = Orders_UpdateShippingRequireThirdParty ,  501 = ProductWarehouseBin_AddAjustment ,  502 = WholesaleAgenda_Import ,  503 = Rebuild_AverageCost_For_All_Products ,  504 = VendorInvoice_Delete ,  505 = PartiallyReceivedWFSShipments_ClearInTransitInventory ,  506 = Houzz_Update_Lead_Time ,  507 = WarehouseInventoryTransfer_ClearInTransitInventory ,  508 = Product_Import_BigCommerce_Tier_Pricing ,  509 = Predictive_WFS_Restocking_Task_Create_PO ,  510 = Disconnect_Price_From_Channel ,  511 = Brand_Import ,  512 = Export_Shipping_Containers_With_Items_for_Task ,  513 = Import_Website_Attributes ,  514 = Export_Product_Alias_for_Task ,  515 = Import_Product_Alias_for_Task ,  516 = Export_Warehouse_Inventory_Transfer_Requests_for_Task ,  517 = Export_Listed_On_Channel_for_Task ,  518 = Export_Customer_for_Task ,  519 = Import_Shopify_MetaField ,  520 = Export_Product_LastInventorySent ,  521 = WarehouseBin_PrintBarcode ,  522 = WalmartMarketplace_CompetitivePricingOptInOrOptOut ,  523 = WFS_ShipmentInbound_QueryStatus ,  524 = Orders_ApplyRebates ,  525 = Dynamic_Code_Execution ,  526 = AdHoc_Plugin_Execution ,  527 = Products_Enable_For_WFS ",
                        "enum": [
                            1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
                            21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
                            39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56,
                            57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
                            75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92,
                            93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108,
                            109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
                            123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
                            137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
                            151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
                            165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
                            179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192,
                            193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
                            207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
                            221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234,
                            235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
                            249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262,
                            263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276,
                            277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290,
                            291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304,
                            305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318,
                            319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332,
                            333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346,
                            347, 348, 349, 350, 351, 352, 353, 354, 355, 366, 367, 368, 369, 370,
                            371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384,
                            385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398,
                            399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
                            413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 433, 434, 435, 436,
                            437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
                            451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464,
                            465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
                            479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
                            493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506,
                            507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
                            521, 522, 523, 524, 525, 526, 527
                        ],
                        "type": "integer"
                    },
                    "x-enumNames": [
                        "Product_Bulk_Update",
                        "Product_Custom_Export",
                        "Product_Export_For_Channel",
                        "Product_Revise_On_eBay",
                        "Order_Export",
                        "Product_Bulk_Edit",
                        "Product_Bulk_Edit_EBay",
                        "Product_Bulk_Edit_BuyDotCom",
                        "eBayCategoryRefresh",
                        "ImportProducts_Amazon",
                        "ImportProducts_eBay",
                        "ImportProducts_Magento",
                        "ImportProducts_Yahoo",
                        "Import_Vendor_Products",
                        "Import_Product_Shadows",
                        "eBay_Listings_Download",
                        "eBay_Listings_Create_Update_Products",
                        "Import_Product_Kits",
                        "Get_Product_Info_From_Amazon",
                        "Orders_Import_Tracking",
                        "Product_Group_Series_Generate",
                        "Orders_Import",
                        "Import_Product_Alias",
                        "Product_FindBuyDotComSKU",
                        "Export_Customers",
                        "Order_Delete",
                        "Straight_Warehouse_Inventory",
                        "ImportProducts_OverStock",
                        "Report_FBA_Inventory",
                        "Amazon_Reports_Task",
                        "CWA_Report",
                        "Create_Country_Specific_Shadow",
                        "Product_Bulk_Update_Rollback",
                        "Orders_FindPayment_For_EBayPaid",
                        "Orders_FindPayment_For_PendingPayments",
                        "Import_Product_Replacements",
                        "Import_Product_Accessories",
                        "Revise_EBay_Listings",
                        "Report_Amazon_Active_Listings",
                        "ImportProducts_Sears",
                        "Create_Products_From_Amazon_Active_Listing",
                        "ImportProducts_BuyDotCom",
                        "Export_CM_Feed",
                        "Warehouse_Inventory_Import",
                        "Warehouse_Inventory_Calculate",
                        "Import_Product_Group",
                        "Report_Amazon_Pending_Orders",
                        "Export_Product_Sales_Statistics",
                        "Acknowledge_Old_Amazon_Orders",
                        "Synchronize_Vendors",
                        "LMSProcessOrders",
                        "Toggle_Inventory_To_Warehouse_Mode",
                        "Toggle_Inventory_To_NonWarehouse_Mode",
                        "Import_Amazon_Orders",
                        "BuyDotCom_SKU_List",
                        "Orders_Import_OverStock",
                        "Sync_eBay_Active_Listings",
                        "Export_Ebay_Category_Suggestions",
                        "Launch_On_eBay",
                        "Post_On_Ebay",
                        "eBay_End_Listings",
                        "Inventory_Calculate",
                        "Export_Product_Enabled_For_Channel",
                        "Orders_Import_ShippingCost",
                        "Pick_List_Generate",
                        "Update_Shipping_Template_For_Products",
                        "Purchase_Manifest_Create_PO",
                        "Product_Export_General",
                        "Product_Inventory_By_Warehouse_Export",
                        "Purchase_Manifest_Update_Item_Cost",
                        "ARCUST_Import_Customers",
                        "ARCUST_Import_Orders",
                        "Convert_Orders_To_WholeSale_Fulfillment",
                        "Order_Refresh_From_Ebay_Paypal",
                        "Update_Inventory_From_Ebay_Listings",
                        "Product_Titles_Import",
                        "Import_BuyDotCom_Listing_Report",
                        "Merge_Shadow_Inventory_Into_Default_Warehouse",
                        "eBay_Query_Title",
                        "Web_Page_Access_Import",
                        "PickList_Print_Invoices",
                        "Import_OverStock_Settlement_Report",
                        "Import_Sears_Settlement_Report",
                        "Import_NewEgg_Settlement_Report",
                        "Import_Purchase_Orders",
                        "Import_Product_Specifics",
                        "Revise_Listing_Part_On_Ebay",
                        "Export_Inventory_By_Warehouse",
                        "Export_Inventory_By_Warehouse_Per_Parent_SKU",
                        "Import_BestBuy_Settlement_Report",
                        "Export_Product_Sales_Statistics_Amazon",
                        "Inventory_Snap_Shot",
                        "Inventory_Snap_Shot_Restore",
                        "Launch_On_Magento",
                        "Receive_Whole_PO",
                        "Launch_On_Amazon",
                        "Inventory_Calculate_For_KitParents",
                        "CM_Feed_Generate_For_Company",
                        "Customers_Import",
                        "Order_Send_Emails",
                        "Update_Shipping_On_Amazon",
                        "Import_Amazon_Settlement_Report",
                        "Automation_via_FTP_Import_Orders",
                        "Automation_via_FTP_Export_Invnetory",
                        "Automation_via_FTP_Export_Tracking",
                        "Magento_Execute_Cron",
                        "Find_BuyDotCom_SKU_For_Task",
                        "Import_Product_From_Amazon_Template",
                        "Orders_ReApplySettlement_data",
                        "Orders_Import_ShippingCost_DHL",
                        "Orders_Evaluate_Payment_Status",
                        "Products_Delete",
                        "Orders_Import_For_Task",
                        "ImportProducts_Wayfair",
                        "Orders_Import_ShippingCost_UPS",
                        "Merge_Shadow_Inventory_Into_Warehouse",
                        "Import_Product_Info_Via_Plugin",
                        "Product_Export_for_Task",
                        "Import_Product_From_ChannelFeedTemplate",
                        "OrderAction_ProcessRefunds",
                        "Calcualte_Inventory_For_PO",
                        "Calcualte_Inventory_For_FBA_Shipment",
                        "Revise_Prices_On_Channel",
                        "OrderAction_ProcessCancellation",
                        "Orders_Replace_SKU_Bulk",
                        "Print_Product_Label",
                        "Load_Product_Default_Values",
                        "Get_ASIN_From_UPC",
                        "Warehouse_Inventory_Adjustments",
                        "Export_Amazon_Search_Results",
                        "Import_Product_Rebates",
                        "Dismiss_Amazon_Listing_Audit",
                        "Purchase_Orders_Export",
                        "Orders_Import_From_3DCart",
                        "Import_EBay_Orders",
                        "Products_Import_For_Task",
                        "Orders_Import_Tracking_For_Task",
                        "Import_Product_Image_Info",
                        "Export_Missing_Channel_Info",
                        "OneSD_ImportInventory",
                        "OneSD_ImportKits",
                        "OneSD_ImportProducts",
                        "OrderAction_ProcessBackOrder",
                        "ProductImportEBayAuctions",
                        "OrderAction_ProcessCancellationBySplitting",
                        "Export_Product_Sell_Through_Report",
                        "Export_Product_Inventory_age_report",
                        "Launch_On_Sears",
                        "DropShip_SendEmails",
                        "FBA_Shipment_Reserve",
                        "OrderAction_Create_Replacement_Order",
                        "OrderAction_Create_Related_Order",
                        "OrderAction_Cancel_And_Duplicate_Innotrac_Order",
                        "Magento_Update_Prices",
                        "Order_Export_Innotrac",
                        "PO_Send_EMails",
                        "Orders_Cancel_Innotrac",
                        "Find_ASIN",
                        "Notify_Order_Source_For_Shipping",
                        "OrderAction_Cancel_1SD_Order",
                        "OrderAction_Cancel_1SD_OrderItem",
                        "OrderAction_SetInProcess",
                        "FBA_Shipment_ResetPreview",
                        "Orders_Set_InProcess",
                        "Bonanza_Import_Categories",
                        "Orders_Create_NewEggDotCom_API",
                        "Launch_On_Bonanza",
                        "Launch_On_NewEggDotcom",
                        "Orders_Import_Website_via_Plugin",
                        "Import_Sears_Attributes",
                        "Upload_Product_Images_to_Hosting",
                        "Orders_Cancel_1SD",
                        "Orders_Bulk_Charge_Orders",
                        "Upload_Product_Images_to_Magento",
                        "OrderAction_SetRushOrder",
                        "Calcuate_AverageCost_For_PO_Item_Receive",
                        "Generate_Predicted_Purchase_Data",
                        "Find_FNSKU",
                        "Export_Product_Groups",
                        "Find_EBay_ProductID",
                        "Product_Notes_Import",
                        "Orders_Change_ShipType",
                        "WarehouseBin_SetQtyBulk",
                        "Task_Run_Select_Query",
                        "Orders_QueryShipmentStatus_Innotrac",
                        "OrderAction_Process",
                        "Innotrac_ShipNotification",
                        "Export_Employees",
                        "Import_Sears_Settlement_Report_via_API",
                        "Launch_On_Website",
                        "Product_UnUsed_UPC_Import",
                        "Export_Kits",
                        "Purchase_Manifest_Create_SKU_BasedOn_UPC",
                        "Merge_Orders",
                        "Bonanza_Update_Prices",
                        "Bonanza_Update_Inventory",
                        "Import_Product_Magento_Attribute",
                        "Export_ebay_Product_Specific_Template",
                        "Launch_On_OverStock",
                        "Get_OverStock_Product_Info",
                        "DisAssemble_N_Matrix",
                        "Import_N_Matrix",
                        "Launch_On_PriceFall",
                        "PriceFall_Update_Inventory",
                        "PriceFall_Update_Prices",
                        "HKG_ImportInventory",
                        "HKG_ImportKits",
                        "HKG_ImportProducts",
                        "Website_Update_Prices",
                        "Import_Magento_Orders",
                        "Enable_Disable_Products_For_Channel",
                        "Launch_On_Channel",
                        "Update_Inventory_On_Channel",
                        "Update_Prices_On_Channel",
                        "eBay_End_Listings_via_ProductID",
                        "Relist_EBay_Items",
                        "Export_Listed_On_Channel",
                        "OneStopPlus_DownloadInventory_Products",
                        "Export_Relations_On_Magento",
                        "Orders_Generate_Profit_and_Loss",
                        "Export_Ebay_Listing_Failure_For_Task",
                        "Print_Product_Label_For_Orders",
                        "PO_Delete",
                        "Product_Create_Shadows_Per_Company",
                        "Product_Export_Unfillable_For_Task",
                        "Product_AverageCost_Prime",
                        "Profit_and_Loss_Calculated_Export",
                        "Profit_and_Loss_Calculated_Import",
                        "Transaction_Profit_and_Loss_Calculated_Export",
                        "Transaction_Profit_and_Loss_Calculated_Import",
                        "Product_Warehouse_Inventory_Transfer_Request",
                        "Order_Refresh_From_Magento",
                        "Orders_Mark_Shipped",
                        "Predictive_Purchase_Task_Create_PO",
                        "Update_Inventory_Via_WS",
                        "Amazon_Get_My_Price",
                        "Update_Images_On_Amazon",
                        "Inventory_Upload_Pre_Data",
                        "Product_SplittedSKU_Import",
                        "Disassemble_Kits",
                        "PO_Export_for_Task",
                        "Product_Convert_Currencies",
                        "Product_Unshadow",
                        "Do_Hazmat_Preview_For_Task",
                        "PickList_Export_to_PDF_KitParent_Only",
                        "Import_NewEggDotcom_Attributes",
                        "Import_N_Matrix_Images",
                        "Orders_DropShip_EnterTracking",
                        "Import_N_Matrix_From_Amazon",
                        "Import_BestBuy_Commission_Report",
                        "Import_WalmartMarketplace_Commission_Report",
                        "Import_BuyDotCom_Commission_Report",
                        "Purchase_Order_Open_Reminder",
                        "Find_ASIN_From_UPC_List",
                        "Export_NewEggDotCom_Specifics",
                        "Query_Amazon_Document_Response",
                        "JET_Category_Download",
                        "Export_BuyDotCom_Specifics",
                        "Import_BuyDotCom_Attributes",
                        "Export_All_Customers",
                        "Inventory_Calculate_QtySold_History",
                        "Warehouse_Inventory_Export",
                        "Calcuate_Inventory_For_All_SKUs",
                        "Initialize_Bin",
                        "Transfer_Between_SKUs_Bulk",
                        "POContainer_Receive",
                        "UnReceive_PO",
                        "Product_Revise_Prices_on_All_Channels",
                        "Export_Sears_Attributes",
                        "Generate_FBA_Business_Report",
                        "Export_Product_Images",
                        "Import_Product_Manual_Reserves",
                        "Create_Shadows_For_Products",
                        "Products_Import_Inventory_For_Task",
                        "Import_Mapped_Orders",
                        "Import_Mapped_Tracking",
                        "Import_Mapped_Inventory",
                        "Import_ProductWarehouse_Bin_Info",
                        "Import_FBA_Shipment",
                        "Export_FBA_Shipment",
                        "Add_Records_For_Unshipped_Bins",
                        "Replace_Kit_Products",
                        "Import_Bonanza_Traits",
                        "Export_RMA",
                        "Orders_Create_NewEggBiz_API",
                        "RMA_Export_for_Task",
                        "Import_RMA",
                        "Revise_Listing_Part_On_Ebay_via_ItemID",
                        "Merge_SKU",
                        "Product_Import_Magento_Tier_Pricing",
                        "RMA_Import_for_Task",
                        "AdjustWarehouseBins",
                        "ReCalculateBackOrders_forOrders",
                        "Import_Magento_Products",
                        "Import_NewEggBiz_Attributes",
                        "Amazon_Attribute_to_Product_Specific",
                        "Order_Refresh_From_Paypal",
                        "Orders_ReCalc_Order_Cost",
                        "Import_FBA_Shipment_From_File",
                        "Import_Product_Clones",
                        "Import_JET_Attributes",
                        "Merge_Customers",
                        "Import_ZipCode_Data",
                        "Export_Magento_Attributes",
                        "Export_JET_Attributes",
                        "Create_SettlementData_PandL",
                        "Import_Amazon_Report",
                        "Get_Amazon_BuyBox_Price",
                        "Warehouse_Delete",
                        "Export_Product_Manual_Reserves",
                        "Archive_Products_On_JET",
                        "Export_Shopify_Metadata",
                        "Website_Update_Listing_Part_via_Plugin",
                        "Import_N_Matrix_Simple",
                        "Import_Product_Manufacturer",
                        "Etsy_category_refresh",
                        "Import_eBay_Settlement_Report",
                        "Export_Product_Replacement_SKUs",
                        "Shopify_Download_Listings",
                        "Reverb_Download_ActiveListings",
                        "Import_ProductWarehouse_Bin_Adjustments",
                        "Import_WalmartMarketplace_Attributes",
                        "Find_Sales_Rank",
                        "Import_Product_average_Cost_Adjustments",
                        "Zero_Out_Inventory",
                        "Export_WalmartMarketplace_Attributes",
                        "Import_WalmartMarketplace_Attributes_Variation",
                        "Break_Kits",
                        "Export_Shopify_Tags",
                        "Update_ProductTypeDefaults_On_Products",
                        "FBA_Shipment_Delete",
                        "Import_Product_Documents",
                        "Export_N_Matrix",
                        "Update_GroupOn_Cost_On_Orders",
                        "LightspeedPOS_Get_ItemIDs",
                        "LightspeedPOS_Create_ItemCount",
                        "ChannelInvoiceSettlement",
                        "MassGenieCategoriesUpdate",
                        "Orders_SetVoid",
                        "Retire_On_WalmartMarketplace",
                        "Update_Walmart_Marketplace_ShippingTemplate_On_Products",
                        "Upload_Shipping_Exception_On_JET",
                        "ReverbCategoriesUpdate",
                        "TangaCategoriesUpdate",
                        "NewEgg_Shipment_ResetPreview",
                        "UnShip_Orders",
                        "HouzzCategoriesUpdate",
                        "HouzzCategoryAttributesUpdate",
                        "FBA_Reconciliation_Export_For_Task",
                        "Calculate_PredictivePurchasing_InStockDays_V2",
                        "Import_Amazon_Attributes",
                        "NewEggDotCom_Shipment_Reserve",
                        "Calculate_Package_Size",
                        "Orders_Receive_Magento_Payments",
                        "Orders_Acknowledge_to_Channel",
                        "Export_Amazon_Attributes",
                        "Orders_ReApply_CoOp_Fee",
                        "PO_Create_from_ShippingContainers",
                        "Disconnect_Inventory_From_Channel",
                        "Update_Product_Weight_On_Related_Orders",
                        "Products_Clone",
                        "Products_Copy",
                        "Products_ChangeSKU",
                        "Product_Update_UPC_For_Channel",
                        "Import_Vendor_Products_For_Task",
                        "Product_Export_UPC_For_Channel",
                        "NewEggDotCom_Update_Product_Volume_Discount",
                        "Walmart_Update_Lag_Time",
                        "BuyDotCom_Import_Catagories",
                        "WalmartMarketplace_Create_Product_From_Listing",
                        "Import_Purchase_Orders_Items",
                        "Export_Orders_Dropship",
                        "Import_NewEggDotcom_Int_Prices",
                        "Import_Groupon_Chargeback",
                        "Product_Titles_Export",
                        "Product_Export_Kit_Assemblies",
                        "Orders_Taxjar_Submit_Taxes",
                        "Orders_Taxjar_Post_Taxes",
                        "Export_Channel_Category_Suggestions",
                        "WalmartMarketplace_Get_Product_Info",
                        "Product_Shadow_Export",
                        "Shipping_Containers_Export",
                        "Import_Product_ITF14",
                        "Import_CustomColumns",
                        "Remove_Business_Prices_On_Amazon",
                        "Export_Etsy_Attributes",
                        "Import_Etsy_Attributes",
                        "FBA_Shipment_QueryStatus",
                        "Predictive_Restocking_Task_Create_PO",
                        "Orders_Query_Shipping_Delivery_Status",
                        "Orders_Import_ShippingCost_For_Task",
                        "InventoryArrival_For_Task",
                        "ShadowPersistencyChanged",
                        "Product_DeleteBrokenImages",
                        "Export_Houzz_Attributes",
                        "Import_Houzz_Attributes",
                        "Product_Update_ManufacturerSKU_For_Channel",
                        "Wayfair_RegisterMutation",
                        "Import_Warehouse_Inventory_ForProfile",
                        "Save_Variation_Products",
                        "Sears_UpdateLeadTimeForProduct",
                        "Orders_Import_ShippingCost_UPSMI",
                        "Import_Walmart_Marketplace_Settlement",
                        "Export_VendorCentral_Shipment",
                        "Prepare_Client_Wide_Data",
                        "Import_JET_Settlement",
                        "Prepare_NMatrix_Simple",
                        "TargetPlus_DownloadApprovedItemTypes_With_Taxonomy",
                        "Product_SetActive_InActive",
                        "Import_VendorCentral_Shipment",
                        "POContainer_UpdateShippingStatus",
                        "Update_Images_On_Channel",
                        "PartiallyReceivedShipments_ClearInTransitInventory",
                        "Import_Product_Fitment",
                        "Wish_EnrollProductInReturnsProgram",
                        "Orders_Reapply_FBA_Returns",
                        "Disconnect_Shipping_Confirmation_From_Order_Source",
                        "Orders_Import_ShippingCost_FedEx",
                        "Warehouse_Transfer_Requests_Delete",
                        "Warehouse_Bin_Movememnt_Export",
                        "Fix_Walmart_Marketplace_Attributes",
                        "Export_Product_Accessories",
                        "Houzz_UpdateProduct",
                        "Import_AssembleKits",
                        "Import_WarehouseTransferRequestReceive",
                        "Import_Order_PnL_Adjustments",
                        "Export_Product_Warehouse_Images",
                        "Orders_GroupActions",
                        "Orders_ImportVendorCentralCheckAvailability",
                        "Import_Product_Image_Info_ChannelSpecific",
                        "Lock_ShippingMethod_InBulk",
                        "Import_Product_WarehouseImage",
                        "Import_WarehouseTransferRequest",
                        "CleanOut_FBA_Movements",
                        "Orders_Import_Partial_Info",
                        "Export_Order_PnL_Adjustments",
                        "Export_Order_SettlementDetails",
                        "Export_SKUUPCAliasReconciliationReport",
                        "Amazon_AdReport_RequestSave",
                        "Import_Shipping_Preference_For_Qty",
                        "Resize_Product_Images",
                        "Export_WalmartMarketplace_WFS_Attributes",
                        "Import_WalmartMarketplace_WFS_Attributes",
                        "WFS_ShipmentInbound_Delete",
                        "Product_Warehouse_Inventory_Transfer_Request_RemoveIntransit",
                        "Revise_Listing_Part_On_Magento",
                        "Export_WFS_Shipment",
                        "Re_Apply_CreditCard_Fee",
                        "WFS_Shipment_Reserve",
                        "Calcualte_Inventory_For_WFS_Shipment",
                        "Switch_Fulfilled_By",
                        "Export_Shipping_Preference_For_Qty",
                        "Import_Inventory_ForProfile",
                        "eBay_Refresh_Attributes",
                        "Fix_PO_Qty_Before_Receive",
                        "WalmartMarketplace_Bulk_Convert_V3_Attributes_To_V4",
                        "Commit_Cycle_Count",
                        "Customers_Import_Documents",
                        "Wish_RemoveProduct",
                        "Import_Order_Transparency_Codes",
                        "FBA_InboundShipmentUpdateDisconnect",
                        "KitAssemblyWorkOrders_Export_for_Task",
                        "Import_WFS_Shipment_From_File",
                        "Associate_PredefinedShippingTemplate_On_WalmartMarketplace",
                        "Import_WFS_Shipment",
                        "VendorInvoice_Import_for_Task",
                        "NewEggDotCom_Export_ItemLookup",
                        "VendorInvoice_Export_for_Task",
                        "Import_NewEgg_Shipment",
                        "eBay_Export_Parts_Compatibility",
                        "WalmartMarketplace_ConnectToPriceUpdate",
                        "Orders_ImportSerial",
                        "Export_N_Matrix_Images",
                        "Bulk_Upload_SKU_eBayMarketingCampaign",
                        "Wish_DownloadBrand",
                        "Export_ProductLotNumberActivity",
                        "Export_VendorSKU",
                        "Orders_UpdateQBExported",
                        "Amazon_Query_FBA_ShippingStatus",
                        "Orders_UpdateShippingRequireThirdParty",
                        "ProductWarehouseBin_AddAjustment",
                        "WholesaleAgenda_Import",
                        "Rebuild_AverageCost_For_All_Products",
                        "VendorInvoice_Delete",
                        "PartiallyReceivedWFSShipments_ClearInTransitInventory",
                        "Houzz_Update_Lead_Time",
                        "WarehouseInventoryTransfer_ClearInTransitInventory",
                        "Product_Import_BigCommerce_Tier_Pricing",
                        "Predictive_WFS_Restocking_Task_Create_PO",
                        "Disconnect_Price_From_Channel",
                        "Brand_Import",
                        "Export_Shipping_Containers_With_Items_for_Task",
                        "Import_Website_Attributes",
                        "Export_Product_Alias_for_Task",
                        "Import_Product_Alias_for_Task",
                        "Export_Warehouse_Inventory_Transfer_Requests_for_Task",
                        "Export_Listed_On_Channel_for_Task",
                        "Export_Customer_for_Task",
                        "Import_Shopify_MetaField",
                        "Export_Product_LastInventorySent",
                        "WarehouseBin_PrintBarcode",
                        "WalmartMarketplace_CompetitivePricingOptInOrOptOut",
                        "WFS_ShipmentInbound_QueryStatus",
                        "Orders_ApplyRebates",
                        "Dynamic_Code_Execution",
                        "AdHoc_Plugin_Execution",
                        "Products_Enable_For_WFS"
                    ]
                },
                "SubmittedBy": {
                    "format": "int32",
                    "type": "integer"
                },
                "JobStatuses": {
                    "description": " 0 = Submitted ,  1 = Processing ,  3 = Completed ,  4 = Failed ,  5 = PartialSuccess ,  6 = OnHold ,  7 = Cancelled ,  8 = Cancelled_Service_Restarted ,  9 = Aborted_Too_Much_Time_Consumed ,  10 = Cancelled_While_Running ",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "description": " 0 = Submitted ,  1 = Processing ,  3 = Completed ,  4 = Failed ,  5 = PartialSuccess ,  6 = OnHold ,  7 = Cancelled ,  8 = Cancelled_Service_Restarted ,  9 = Aborted_Too_Much_Time_Consumed ,  10 = Cancelled_While_Running ",
                        "enum": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10],
                        "type": "integer"
                    },
                    "x-enumNames": [
                        "Submitted",
                        "Processing",
                        "Completed",
                        "Failed",
                        "PartialSuccess",
                        "OnHold",
                        "Cancelled",
                        "Cancelled_Service_Restarted",
                        "Aborted_Too_Much_Time_Consumed",
                        "Cancelled_While_Running"
                    ]
                },
                "CompanyIDList": {
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "SubmittedFrom": {
                    "format": "date-time",
                    "type": "string"
                },
                "SubmittedTo": {
                    "format": "date-time",
                    "type": "string"
                },
                "QueuedJobPriorities": {
                    "description": " 0 = BelowNormal ,  1 = Normal ,  2 = High ,  3 = Critical ",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "description": " 0 = BelowNormal ,  1 = Normal ,  2 = High ,  3 = Critical ",
                        "enum": [0, 1, 2, 3],
                        "type": "integer"
                    },
                    "x-enumNames": ["BelowNormal", "Normal", "High", "Critical"]
                },
                "PageNumber": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Base.GetAllResponse[SellerCloud.Delta.Models.ManageEntity.Concrete.QueuedJobDto]": {
            "type": "object",
            "properties": {
                "Items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.ManageEntity.Concrete.QueuedJobDto"
                    }
                },
                "TotalResults": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ManageEntity.Concrete.QueuedJobDto": {
            "type": "object",
            "properties": {
                "SubmittedOn": {
                    "format": "date-time",
                    "type": "string"
                },
                "QueuedJobPriority": {
                    "format": "int32",
                    "type": "integer"
                },
                "CompanyName": {
                    "type": "string"
                },
                "QueuedJobType": {
                    "format": "int32",
                    "type": "integer"
                },
                "QueuedJobStatus": {
                    "format": "int32",
                    "type": "integer"
                },
                "StartedOn": {
                    "format": "date-time",
                    "type": "string"
                },
                "CompletedOn": {
                    "format": "date-time",
                    "type": "string"
                },
                "TimeElapsed": {
                    "format": "double",
                    "type": "number"
                },
                "ErrorMessage": {
                    "type": "string"
                },
                "UserID": {
                    "format": "int32",
                    "type": "integer"
                },
                "SubmittedBy": {
                    "type": "string"
                },
                "InputFile": {
                    "type": "string"
                },
                "OutputFile": {
                    "type": "string"
                },
                "CompanyID": {
                    "type": "string"
                },
                "RelatedTaskID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ID": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Base.GetAllResponse[SellerCloud.Delta.Models.ClientAPI.Base.GetAllResponse[SellerCloud.Delta.Models.ManageEntity.Concrete.RmaDto]]": {
            "type": "object",
            "properties": {
                "Items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Base.GetAllResponse[SellerCloud.Delta.Models.ManageEntity.Concrete.RmaDto]"
                    }
                },
                "TotalResults": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Base.GetAllResponse[SellerCloud.Delta.Models.ManageEntity.Concrete.RmaDto]": {
            "type": "object",
            "properties": {
                "Items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.ManageEntity.Concrete.RmaDto"
                    }
                },
                "TotalResults": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ManageEntity.Concrete.RmaDto": {
            "type": "object",
            "properties": {
                "CustomerID": {
                    "format": "int32",
                    "type": "integer"
                },
                "FirstName": {
                    "type": "string"
                },
                "LastName": {
                    "type": "string"
                },
                "CustomerFirstName": {
                    "type": "string"
                },
                "CustomerLastName": {
                    "type": "string"
                },
                "UserID": {
                    "format": "int32",
                    "type": "integer"
                },
                "CreatedOn": {
                    "format": "date-time",
                    "type": "string"
                },
                "ClosedOn": {
                    "format": "date-time",
                    "type": "string"
                },
                "ReceivedOn": {
                    "format": "date-time",
                    "type": "string"
                },
                "CreatedBy": {
                    "type": "string"
                },
                "RMAStatusCode": {
                    "format": "int32",
                    "type": "integer"
                },
                "OrderSource": {
                    "format": "int32",
                    "type": "integer"
                },
                "OrderSourceRMAID": {
                    "type": "string"
                },
                "Reason": {
                    "format": "int32",
                    "type": "integer"
                },
                "ReceivedStatus": {
                    "format": "int32",
                    "type": "integer"
                },
                "TotalRefunded": {
                    "format": "double",
                    "type": "number"
                },
                "Company": {
                    "type": "string"
                },
                "CompanyID": {
                    "format": "int32",
                    "type": "integer"
                },
                "Exported": {
                    "format": "int32",
                    "type": "integer"
                },
                "CustomerUserName": {
                    "type": "string"
                },
                "TrackingNumber": {
                    "type": "string"
                },
                "RefundStatus": {
                    "format": "int32",
                    "description": " 10 = NoPayment ,  20 = Authorized ,  30 = Charged ,  40 = Uncleared ,  50 = PartiallyRefund ,  60 = FullRefund ,  70 = PartialPayment ,  80 = eBayPaid ,  99 = PaymentError ",
                    "enum": [10, 20, 30, 40, 50, 60, 70, 80, 99],
                    "type": "integer",
                    "x-enumNames": [
                        "NoPayment",
                        "Authorized",
                        "Charged",
                        "Uncleared",
                        "PartiallyRefund",
                        "FullRefund",
                        "PartialPayment",
                        "eBayPaid",
                        "PaymentError"
                    ]
                },
                "ReturnLabelCharges": {
                    "format": "double",
                    "type": "number"
                },
                "Items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.Manage.Concrete.RmaItemDto"
                    }
                },
                "ReturnNotes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.Notes.RMANoteDto"
                    }
                },
                "ID": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.Manage.Concrete.RmaItemDto": {
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "RMAID": {
                    "format": "int32",
                    "type": "integer"
                },
                "OrderID": {
                    "format": "int32",
                    "type": "integer"
                },
                "SKU": {
                    "type": "string"
                },
                "RMANoteContains": {
                    "type": "string"
                },
                "SerialNumber": {
                    "type": "string"
                },
                "Reason": {
                    "format": "int32",
                    "type": "integer"
                },
                "ReasonName": {
                    "type": "string"
                },
                "Resolution": {
                    "format": "int32",
                    "type": "integer"
                },
                "ReceivedStatus": {
                    "type": "string"
                },
                "RefundStatus": {
                    "format": "int32",
                    "type": "integer"
                },
                "RefundStatusName": {
                    "type": "string"
                },
                "OrderSubType": {
                    "format": "int32",
                    "type": "integer"
                },
                "OrderSubtypeName": {
                    "type": "string"
                },
                "OrderSourceOrderID": {
                    "type": "string"
                },
                "OrderSource": {
                    "format": "int32",
                    "type": "integer"
                },
                "EnabledOnChannels": {
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "Company": {
                    "type": "string"
                },
                "CompanyID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ReturnedOn": {
                    "format": "date-time",
                    "type": "string"
                },
                "QtyReturned": {
                    "format": "int32",
                    "type": "integer"
                },
                "QtyReceived": {
                    "format": "int32",
                    "type": "integer"
                },
                "ReturnedToWarehouseID": {
                    "format": "int32",
                    "type": "integer"
                },
                "WarehouseBinID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ProblemDescription": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.Notes.RMANoteDto": {
            "type": "object",
            "properties": {
                "EntityID": {
                    "format": "int32",
                    "type": "integer"
                },
                "Category": {
                    "format": "int32",
                    "description": " 0 = Return_Notes ,  1 = Merchant_Notes ",
                    "enum": [0, 1],
                    "type": "integer",
                    "x-enumNames": ["Return_Notes", "Merchant_Notes"]
                },
                "NoteID": {
                    "format": "int32",
                    "type": "integer"
                },
                "Note": {
                    "type": "string"
                },
                "AuditDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "CreatedBy": {
                    "format": "int32",
                    "type": "integer"
                },
                "CreatedByName": {
                    "type": "string"
                },
                "CreatedByEmail": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Rma.ReceiveReturnRequest": {
            "type": "object",
            "properties": {
                "Items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Rma.ReceiveReturnItem"
                    }
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Rma.ReceiveReturnItem": {
            "required": ["RmaItemID", "QtyToReceive", "WarehouseID"],
            "type": "object",
            "properties": {
                "RmaItemID": {
                    "format": "int32",
                    "type": "integer"
                },
                "QtyToReceive": {
                    "format": "int32",
                    "type": "integer"
                },
                "WarehouseID": {
                    "format": "int32",
                    "type": "integer"
                },
                "WarehouseBinID": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Rma.SetResolutionRequest": {
            "required": ["ResolutionType", "Comment", "Items"],
            "type": "object",
            "properties": {
                "ResolutionType": {
                    "format": "int32",
                    "description": " 0 = Not_Decided ,  1 = Refund ,  2 = Replace ,  3 = Reject ,  4 = Exchange ,  5 = Repair ,  6 = No_Action_Needed ",
                    "enum": [0, 1, 2, 3, 4, 5, 6],
                    "type": "integer",
                    "x-enumNames": [
                        "Not_Decided",
                        "Refund",
                        "Replace",
                        "Reject",
                        "Exchange",
                        "Repair",
                        "No_Action_Needed"
                    ]
                },
                "Comment": {
                    "type": "string"
                },
                "Items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Rma.SetResolutionItem"
                    }
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Rma.SetResolutionItem": {
            "required": ["RmaItemID"],
            "type": "object",
            "properties": {
                "RmaItemID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ReplacementSKU": {
                    "type": "string"
                },
                "RefundAmount": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Rma.RmaReason": {
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "Name": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Rma.CreateShippingLabelRequest": {
            "required": ["Weight", "Dimensions"],
            "type": "object",
            "properties": {
                "Weight": {
                    "$ref": "#/definitions/CoreWebAdmin.Delta.DetailsEntity.Models.Common.ShippingWeight"
                },
                "Dimensions": {
                    "$ref": "#/definitions/CoreWebAdmin.Delta.DetailsEntity.Models.Common.Dimensions[System.Decimal]"
                },
                "ShippingCarrier": {
                    "type": "string"
                },
                "ShippingService": {
                    "format": "int32",
                    "type": "integer"
                },
                "PackageType": {
                    "type": "string"
                },
                "InsuranceProvider": {
                    "type": "string"
                },
                "InsuranceAmount": {
                    "format": "double",
                    "type": "number"
                },
                "DeliveryConfirmation": {
                    "format": "int32",
                    "description": " 0 = None ,  1 = Signature_Required ,  2 = Adult_Signature_Required ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["None", "Signature_Required", "Adult_Signature_Required"]
                },
                "ShipFromAddress": {
                    "$ref": "#/definitions/CoreWebAdmin.Delta.DetailsEntity.Models.Common.AddressAdvancedDto"
                },
                "ShipToAddress": {
                    "$ref": "#/definitions/CoreWebAdmin.Delta.DetailsEntity.Models.Common.AddressAdvancedDto"
                }
            }
        },
        "CoreWebAdmin.Delta.DetailsEntity.Models.Common.AddressAdvancedDto": {
            "type": "object",
            "properties": {
                "Business": {
                    "type": "string"
                },
                "ContactName": {
                    "type": "string"
                },
                "Country": {
                    "type": "string"
                },
                "City": {
                    "type": "string"
                },
                "State": {
                    "type": "string"
                },
                "Region": {
                    "type": "string"
                },
                "ZipCode": {
                    "type": "string"
                },
                "Address": {
                    "type": "string"
                },
                "Phone": {
                    "type": "string"
                },
                "Fax": {
                    "type": "string"
                },
                "IsModified": {
                    "type": "boolean"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Rma.CreateShippingLabelResponse": {
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Rma.RMAShippingLabelResponseDto": {
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "TrackingNumber": {
                    "type": "string"
                },
                "LabelStatus": {
                    "format": "int32",
                    "description": " 0 = Ok ,  1 = Void ",
                    "enum": [0, 1],
                    "type": "integer",
                    "x-enumNames": ["Ok", "Void"]
                },
                "TotalWeight": {
                    "format": "double",
                    "type": "number"
                },
                "TotalCharges": {
                    "format": "double",
                    "type": "number"
                },
                "GeneratedBy": {
                    "format": "int32",
                    "type": "integer"
                },
                "UserName": {
                    "type": "string"
                },
                "GeneratedOn": {
                    "format": "date-time",
                    "type": "string"
                },
                "ShippingCarrier": {
                    "type": "string"
                },
                "ShippingService": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Rma.CreateRmaNoteRequest": {
            "required": ["Category", "Message"],
            "type": "object",
            "properties": {
                "Category": {
                    "format": "int32",
                    "description": " 0 = Return_Notes ,  1 = Merchant_Notes ",
                    "enum": [0, 1],
                    "type": "integer",
                    "x-enumNames": ["Return_Notes", "Merchant_Notes"]
                },
                "Message": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Rma.Items.RmaItem": {
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ProductID": {
                    "type": "string"
                },
                "ProductName": {
                    "type": "string"
                },
                "OriginalOrderID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ShippedByID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ShippedByName": {
                    "type": "string"
                },
                "QtyOrdered": {
                    "format": "int32",
                    "type": "integer"
                },
                "QtyReturned": {
                    "format": "int32",
                    "type": "integer"
                },
                "QtyReceived": {
                    "format": "int32",
                    "type": "integer"
                },
                "ReturnReason": {
                    "format": "int32",
                    "type": "integer"
                },
                "ReturnResolution": {
                    "type": "string"
                },
                "ReturnResolutionID": {
                    "format": "int32",
                    "type": "integer"
                },
                "RefundAmount": {
                    "format": "double",
                    "type": "number"
                },
                "ProblemDescription": {
                    "type": "string"
                },
                "ApprovalStatus": {
                    "format": "int32",
                    "description": " 0 = UnDecided ,  1 = Approved ,  2 = Rejected ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["UnDecided", "Approved", "Rejected"]
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Rma.Items.RmaItemAdd": {
            "type": "object",
            "properties": {
                "OrderID": {
                    "format": "int32",
                    "type": "integer"
                },
                "OrderItemID": {
                    "format": "int32",
                    "type": "integer"
                },
                "KitItemProductID": {
                    "type": "string"
                },
                "QtyReturned": {
                    "format": "int32",
                    "type": "integer"
                },
                "ReturnReason": {
                    "format": "int32",
                    "type": "integer"
                },
                "ProblemDescription": {
                    "type": "string"
                },
                "ApprovalStatus": {
                    "format": "int32",
                    "description": " 0 = UnDecided ,  1 = Approved ,  2 = Rejected ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["UnDecided", "Approved", "Rejected"]
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Rma.Items.RmaItemUpdate": {
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "QtyReturned": {
                    "format": "int32",
                    "type": "integer"
                },
                "ReturnReason": {
                    "format": "int32",
                    "type": "integer"
                },
                "ProblemDescription": {
                    "type": "string"
                },
                "ApprovalStatus": {
                    "format": "int32",
                    "description": " 0 = UnDecided ,  1 = Approved ,  2 = Rejected ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["UnDecided", "Approved", "Rejected"]
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Rma.RmaFilters": {
            "type": "object",
            "properties": {
                "RMAIDs": {
                    "description": "List of RMA IDs",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "OrderIDs": {
                    "description": "List of Order IDs related to RMAs",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "CompanyIDList": {
                    "description": "List of Company IDs to which the RMAs belong",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "ProductID": {
                    "description": "List of ProductIDs in the RMAs",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "RmaStatuses": {
                    "description": "RMA Statuses 0 = Open ,  1 = On_Hold ,  2 = Processing ,  3 = Closed ",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "description": " 0 = Open ,  1 = On_Hold ,  2 = Processing ,  3 = Closed ",
                        "enum": [0, 1, 2, 3],
                        "type": "integer"
                    },
                    "x-enumNames": ["Open", "On_Hold", "Processing", "Closed"]
                },
                "OrderSources": {
                    "description": "Channels 0 = Local_Store ,  1 = eBayOrder ,  2 = eBaySingleItem ,  3 = Yahoo ,  4 = Amazon ,  5 = PriceGrabber ,  6 = Website ,  7 = Buy ,  12 = NewEggMall ,  15 = Magento ,  16 = QuickBooks ,  17 = RMS ,  18 = Cart32 ,  19 = Sears ,  20 = FBA ,  21 = Wholesale ,  22 = Overstock ,  23 = NewEggdotcom ,  24 = Etsy ,  25 = Bonanza ,  26 = PriceFalls ,  27 = Wayfair ,  28 = UnbeatableSale ,  29 = VendorCentral ,  30 = Hayneedle ,  31 = SmartBargains ,  32 = uBid ,  33 = ATGStores ,  34 = StacksAndStacks ,  35 = Sharkstores ,  36 = BestBuy ,  37 = Kohls ,  38 = Staples ,  39 = OneStopPlus ,  40 = Meijer ,  41 = Sonsi ,  42 = Walmart ,  43 = HSN ,  44 = NewEgg_Business ,  45 = KMart ,  46 = Wish ,  47 = SPRichards ,  48 = FingerHut ,  49 = Groupon ,  50 = Walmart_Marketplace ,  51 = ShopHQ ,  52 = PriceMinister ,  53 = GS ,  54 = DrugStore ,  55 = MercadoLibre ,  56 = JET ,  57 = ElevenMain ,  58 = SearsVendor ,  59 = Choxi ,  60 = TradeMe ,  61 = Tanga ,  62 = Target ,  63 = GrouponMarketplace ,  64 = Reverb ,  65 = BedBathAndBeyond ,  66 = Dropship_Central ,  67 = DSW ,  68 = Houzz ,  69 = Gilt ,  70 = BestBuyDS ,  71 = TopHatter ,  72 = HomeDepot ,  73 = MassGenie ,  74 = Cdiscount ,  75 = GrouponGateway ,  76 = SBN ,  77 = GoogleExpress ,  78 = Target_Plus ,  79 = WFS ",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "description": " 0 = Local_Store ,  1 = eBayOrder ,  2 = eBaySingleItem ,  3 = Yahoo ,  4 = Amazon ,  5 = PriceGrabber ,  6 = Website ,  7 = Buy ,  12 = NewEggMall ,  15 = Magento ,  16 = QuickBooks ,  17 = RMS ,  18 = Cart32 ,  19 = Sears ,  20 = FBA ,  21 = Wholesale ,  22 = Overstock ,  23 = NewEggdotcom ,  24 = Etsy ,  25 = Bonanza ,  26 = PriceFalls ,  27 = Wayfair ,  28 = UnbeatableSale ,  29 = VendorCentral ,  30 = Hayneedle ,  31 = SmartBargains ,  32 = uBid ,  33 = ATGStores ,  34 = StacksAndStacks ,  35 = Sharkstores ,  36 = BestBuy ,  37 = Kohls ,  38 = Staples ,  39 = OneStopPlus ,  40 = Meijer ,  41 = Sonsi ,  42 = Walmart ,  43 = HSN ,  44 = NewEgg_Business ,  45 = KMart ,  46 = Wish ,  47 = SPRichards ,  48 = FingerHut ,  49 = Groupon ,  50 = Walmart_Marketplace ,  51 = ShopHQ ,  52 = PriceMinister ,  53 = GS ,  54 = DrugStore ,  55 = MercadoLibre ,  56 = JET ,  57 = ElevenMain ,  58 = SearsVendor ,  59 = Choxi ,  60 = TradeMe ,  61 = Tanga ,  62 = Target ,  63 = GrouponMarketplace ,  64 = Reverb ,  65 = BedBathAndBeyond ,  66 = Dropship_Central ,  67 = DSW ,  68 = Houzz ,  69 = Gilt ,  70 = BestBuyDS ,  71 = TopHatter ,  72 = HomeDepot ,  73 = MassGenie ,  74 = Cdiscount ,  75 = GrouponGateway ,  76 = SBN ,  77 = GoogleExpress ,  78 = Target_Plus ,  79 = WFS ",
                        "enum": [
                            0, 1, 2, 3, 4, 5, 6, 7, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,
                            26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
                            44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
                            62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79
                        ],
                        "type": "integer"
                    },
                    "x-enumNames": [
                        "Local_Store",
                        "eBayOrder",
                        "eBaySingleItem",
                        "Yahoo",
                        "Amazon",
                        "PriceGrabber",
                        "Website",
                        "Buy",
                        "NewEggMall",
                        "Magento",
                        "QuickBooks",
                        "RMS",
                        "Cart32",
                        "Sears",
                        "FBA",
                        "Wholesale",
                        "Overstock",
                        "NewEggdotcom",
                        "Etsy",
                        "Bonanza",
                        "PriceFalls",
                        "Wayfair",
                        "UnbeatableSale",
                        "VendorCentral",
                        "Hayneedle",
                        "SmartBargains",
                        "uBid",
                        "ATGStores",
                        "StacksAndStacks",
                        "Sharkstores",
                        "BestBuy",
                        "Kohls",
                        "Staples",
                        "OneStopPlus",
                        "Meijer",
                        "Sonsi",
                        "Walmart",
                        "HSN",
                        "NewEgg_Business",
                        "KMart",
                        "Wish",
                        "SPRichards",
                        "FingerHut",
                        "Groupon",
                        "Walmart_Marketplace",
                        "ShopHQ",
                        "PriceMinister",
                        "GS",
                        "DrugStore",
                        "MercadoLibre",
                        "JET",
                        "ElevenMain",
                        "SearsVendor",
                        "Choxi",
                        "TradeMe",
                        "Tanga",
                        "Target",
                        "GrouponMarketplace",
                        "Reverb",
                        "BedBathAndBeyond",
                        "Dropship_Central",
                        "DSW",
                        "Houzz",
                        "Gilt",
                        "BestBuyDS",
                        "TopHatter",
                        "HomeDepot",
                        "MassGenie",
                        "Cdiscount",
                        "GrouponGateway",
                        "SBN",
                        "GoogleExpress",
                        "Target_Plus",
                        "WFS"
                    ]
                },
                "OrderSourceRMAID": {
                    "description": "Order Source (Channel) RMA ID",
                    "type": "string"
                },
                "OrderSourceOrderIDs": {
                    "description": "List of Order Source (Channel) Order IDs",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "DateFrom": {
                    "format": "date-time",
                    "description": "RMA Date Create From",
                    "type": "string"
                },
                "DateTo": {
                    "format": "date-time",
                    "description": "RMA Date Create To",
                    "type": "string"
                },
                "ClosedOnFrom": {
                    "format": "date-time",
                    "description": "Closed on from date",
                    "type": "string"
                },
                "ClosedOnTo": {
                    "format": "date-time",
                    "description": "Closed on to date",
                    "type": "string"
                },
                "ReturnedOnFrom": {
                    "format": "date-time",
                    "description": "Received on from date",
                    "type": "string"
                },
                "ReturnedOnTo": {
                    "format": "date-time",
                    "description": "Received on to date",
                    "type": "string"
                },
                "LastUpdatedOnFrom": {
                    "format": "date-time",
                    "description": "Last Updated On From date",
                    "type": "string"
                },
                "LastUpdatedOnTo": {
                    "format": "date-time",
                    "description": "Last Updated On To date",
                    "type": "string"
                },
                "PageNumber": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Rma.CreateRmaRequest": {
            "required": ["OrderID", "OrderItems"],
            "type": "object",
            "properties": {
                "OrderID": {
                    "format": "int32",
                    "type": "integer"
                },
                "OrderItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Rma.CreateRmaOrderItem"
                    }
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Rma.CreateRmaOrderItem": {
            "required": ["OrderItemID"],
            "type": "object",
            "properties": {
                "OrderItemID": {
                    "format": "int32",
                    "type": "integer"
                },
                "QtyToReturn": {
                    "format": "int32",
                    "type": "integer"
                },
                "ReasonID": {
                    "format": "int32",
                    "type": "integer"
                },
                "Description": {
                    "type": "string"
                },
                "BundleItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Rma.CreateRmaBundleItem"
                    }
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Rma.CreateRmaBundleItem": {
            "required": ["ProductID", "QtyToReturn", "ReasonID"],
            "type": "object",
            "properties": {
                "ProductID": {
                    "type": "string"
                },
                "QtyToReturn": {
                    "format": "int32",
                    "type": "integer"
                },
                "ReasonID": {
                    "format": "int32",
                    "type": "integer"
                },
                "Description": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Rma.CreateRmaResponse": {
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Rma.RmaEntity": {
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "CustomerID": {
                    "type": "string"
                },
                "CustomerName": {
                    "type": "string"
                },
                "StatusCode": {
                    "format": "int32",
                    "description": " 0 = Open ,  1 = On_Hold ,  2 = Processing ,  3 = Closed ",
                    "enum": [0, 1, 2, 3],
                    "type": "integer",
                    "x-enumNames": ["Open", "On_Hold", "Processing", "Closed"]
                },
                "CompanyID": {
                    "format": "int32",
                    "type": "integer"
                },
                "CompanyName": {
                    "type": "string"
                },
                "OrderNumberOriginal": {
                    "format": "int32",
                    "type": "integer"
                },
                "OriginalOrderTotal": {
                    "format": "double",
                    "type": "number"
                },
                "ReplacementOrderId": {
                    "format": "int32",
                    "type": "integer"
                },
                "ShipViaSourceRMAID": {
                    "type": "string"
                },
                "ReturnLabelCharges": {
                    "format": "double",
                    "type": "number"
                },
                "TrackingNumber": {
                    "type": "string"
                },
                "IsExported": {
                    "type": "boolean"
                },
                "IsDropShipRMA": {
                    "type": "boolean"
                },
                "VendorRmaNumber": {
                    "type": "string"
                },
                "CreditMemo": {
                    "format": "int32",
                    "type": "integer"
                },
                "Changes": {
                    "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Rma.RmaEntityChanges"
                },
                "Items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Rma.RmaEntityItem"
                    }
                },
                "MultipleReplacementOrderId": {
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Rma.RmaEntityChanges": {
            "type": "object",
            "properties": {
                "CreatedByID": {
                    "format": "int32",
                    "type": "integer"
                },
                "CreatedByName": {
                    "type": "string"
                },
                "CreatedOn": {
                    "format": "date-time",
                    "type": "string"
                },
                "LastUpdatedByID": {
                    "format": "int32",
                    "type": "integer"
                },
                "LastUpdatedByName": {
                    "type": "string"
                },
                "LastUpdatedOn": {
                    "format": "date-time",
                    "type": "string"
                },
                "ReceivedByID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ReceivedByName": {
                    "type": "string"
                },
                "ReceivedOn": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Rma.RmaEntityItem": {
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ProductID": {
                    "type": "string"
                },
                "DisplayName": {
                    "type": "string"
                },
                "QtyOrdered": {
                    "format": "int32",
                    "type": "integer"
                },
                "QtyToReturn": {
                    "format": "int32",
                    "type": "integer"
                },
                "QtyReceived": {
                    "format": "int32",
                    "type": "integer"
                },
                "ReturnResolution": {
                    "type": "string"
                },
                "eBayItemID": {
                    "type": "string"
                },
                "eBayItemUrl": {
                    "type": "string"
                },
                "OriginalOrderID": {
                    "format": "int32",
                    "type": "integer"
                },
                "OriginalOrderItemID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ShippedByID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ShippedByName": {
                    "type": "string"
                },
                "ProblemDescription": {
                    "type": "string"
                },
                "ReturnReason": {
                    "format": "int32",
                    "type": "integer"
                },
                "RefundAmount": {
                    "format": "double",
                    "type": "number"
                },
                "BinName": {
                    "type": "string"
                },
                "ApprovalStatus": {
                    "format": "int32",
                    "description": " 0 = UnDecided ,  1 = Approved ,  2 = Rejected ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["UnDecided", "Approved", "Rejected"]
                },
                "ReturnedToWarehouseID": {
                    "format": "int32",
                    "type": "integer"
                },
                "BinID": {
                    "format": "int32",
                    "type": "integer"
                },
                "OriginalOrderItemKitItemProductID": {
                    "type": "string"
                },
                "ReceiveStatus": {
                    "format": "int32",
                    "description": " 0 = NotReceived ,  1 = PartiallyReceived ,  2 = Received ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["NotReceived", "PartiallyReceived", "Received"]
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Rma.UpdateRmaRuquest": {
            "type": "object",
            "properties": {
                "Status": {
                    "format": "int32",
                    "description": " 0 = Open ,  1 = On_Hold ,  2 = Processing ,  3 = Closed ",
                    "enum": [0, 1, 2, 3],
                    "type": "integer",
                    "x-enumNames": ["Open", "On_Hold", "Processing", "Closed"]
                },
                "TrackingNumber": {
                    "type": "string"
                },
                "IsExported": {
                    "type": "boolean"
                }
            }
        },
        "SellerCloud.Delta.Models.Common.PaginationResultsDto[SellerCloud.Delta.Models.Details.Concrete.ScheduledTask.ExecutionHistoryItem]": {
            "type": "object",
            "properties": {
                "Results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.Details.Concrete.ScheduledTask.ExecutionHistoryItem"
                    }
                },
                "TotalResults": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.Details.Concrete.ScheduledTask.ExecutionHistoryItem": {
            "type": "object",
            "properties": {
                "ExecutedOn": {
                    "format": "date-time",
                    "type": "string"
                },
                "JobID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ExecutedBy": {
                    "type": "string"
                },
                "Status": {
                    "type": "string"
                },
                "StartedOn": {
                    "format": "date-time",
                    "type": "string"
                },
                "CompletedOn": {
                    "format": "date-time",
                    "type": "string"
                },
                "Error": {
                    "type": "string"
                },
                "Duration": {
                    "type": "string"
                },
                "UserID": {
                    "type": "string"
                },
                "LogFileName": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Vendor.VendorProductsFilters": {
            "type": "object",
            "properties": {
                "ProductSKU": {
                    "description": "Product SKU",
                    "type": "string"
                },
                "VendorSKU": {
                    "description": "Vendor SKU",
                    "type": "string"
                },
                "PageNumber": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Base.GetAllResponse[SellerCloud.Delta.Models.ClientAPI.Vendor.VendorProductDto]": {
            "type": "object",
            "properties": {
                "Items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Vendor.VendorProductDto"
                    }
                },
                "TotalResults": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Vendor.VendorProductDto": {
            "type": "object",
            "properties": {
                "ProductSKU": {
                    "type": "string"
                },
                "VendorID": {
                    "format": "int32",
                    "type": "integer"
                },
                "Price": {
                    "format": "double",
                    "type": "number"
                },
                "VendorSKU": {
                    "type": "string"
                },
                "IsAvailable": {
                    "type": "boolean"
                },
                "DateModified": {
                    "format": "date-time",
                    "type": "string"
                },
                "Notes": {
                    "type": "string"
                },
                "PricePerCase": {
                    "format": "double",
                    "type": "number"
                },
                "ProductName": {
                    "type": "string"
                },
                "QtyPerCase": {
                    "format": "int32",
                    "type": "integer"
                },
                "Qty": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Vendor.UpdateVendorProductRequest": {
            "type": "object",
            "properties": {
                "Price": {
                    "format": "double",
                    "type": "number"
                },
                "PricePerCase": {
                    "format": "double",
                    "type": "number"
                },
                "QtyPerCase": {
                    "format": "int32",
                    "type": "integer"
                },
                "IsAvailable": {
                    "type": "boolean"
                },
                "Qty": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Vendor.UpdateVendorProductRequestV2": {
            "required": ["ProductID"],
            "type": "object",
            "properties": {
                "ProductID": {
                    "type": "string"
                },
                "VendorSKU": {
                    "type": "string"
                },
                "Notes": {
                    "type": "string"
                },
                "Price": {
                    "format": "double",
                    "type": "number"
                },
                "PricePerCase": {
                    "format": "double",
                    "type": "number"
                },
                "QtyPerCase": {
                    "format": "int32",
                    "type": "integer"
                },
                "IsAvailable": {
                    "type": "boolean"
                },
                "Qty": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Vendor.AddVendorProductRequest": {
            "type": "object",
            "properties": {
                "VendorProducts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Vendor.AddVendorProductDto"
                    }
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Vendor.AddVendorProductDto": {
            "type": "object",
            "properties": {
                "ProductSKU": {
                    "type": "string"
                },
                "Price": {
                    "format": "double",
                    "type": "number"
                },
                "VendorSKU": {
                    "type": "string"
                },
                "IsAvailable": {
                    "type": "boolean"
                },
                "Notes": {
                    "type": "string"
                },
                "PricePerCase": {
                    "format": "double",
                    "type": "number"
                },
                "QtyPerCase": {
                    "format": "int32",
                    "type": "integer"
                },
                "Qty": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Vendor.VendorDto": {
            "type": "object",
            "properties": {
                "Alias": {
                    "type": "string"
                },
                "AccountNumber": {
                    "type": "string"
                },
                "EmailCC": {
                    "type": "string"
                },
                "Website": {
                    "type": "string"
                },
                "IsActive": {
                    "type": "boolean"
                },
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "Name": {
                    "type": "string"
                },
                "Email": {
                    "type": "string"
                },
                "IsDefault": {
                    "type": "boolean"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Vendor.VendorFilters": {
            "type": "object",
            "properties": {
                "VendorIDs": {
                    "description": "List of vendor IDs",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "Names": {
                    "description": "List of vendor names",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Email": {
                    "description": "Vendor email",
                    "type": "string"
                },
                "ActiveStatus": {
                    "format": "int32",
                    "description": "Active status",
                    "type": "integer"
                },
                "PageNumber": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Base.GetAllResponse[SellerCloud.Delta.Models.ClientAPI.Vendor.BaseVendorDto]": {
            "type": "object",
            "properties": {
                "Items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SellerCloud.Delta.Models.ClientAPI.Vendor.BaseVendorDto"
                    }
                },
                "TotalResults": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Vendor.BaseVendorDto": {
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "Name": {
                    "type": "string"
                },
                "Email": {
                    "type": "string"
                },
                "IsDefault": {
                    "type": "boolean"
                }
            }
        },
        "CoreWebAdmin.Delta.DetailsEntity.Models.Warehouse.WarehouseDto": {
            "type": "object",
            "properties": {
                "General": {
                    "$ref": "#/definitions/SellerCloud.Delta.Models.Details.Concrete.Warehouse.WarehouseGeneralDto"
                },
                "WarehouseAddress": {
                    "$ref": "#/definitions/SellerCloud.Delta.Models.Details.Concrete.Common.AddressAdvancedDtoWithSeparateAdrrLines"
                },
                "IsModified": {
                    "type": "boolean"
                }
            }
        },
        "SellerCloud.Delta.Models.Details.Concrete.Warehouse.WarehouseGeneralDto": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string"
                },
                "WarehouseType": {
                    "format": "int32",
                    "description": " 0 = Normal ,  1 = FBA ,  2 = Un_Tested ,  3 = Interim ,  4 = DropShip ,  5 = NewEgg ,  6 = Cdiscount ,  7 = WFS ",
                    "enum": [0, 1, 2, 3, 4, 5, 6, 7],
                    "type": "integer",
                    "x-enumNames": [
                        "Normal",
                        "FBA",
                        "Un_Tested",
                        "Interim",
                        "DropShip",
                        "NewEgg",
                        "Cdiscount",
                        "WFS"
                    ]
                },
                "ShowQuickBooksName": {
                    "type": "boolean"
                },
                "QBWarehouseName": {
                    "type": "string"
                },
                "IsSellAble": {
                    "type": "boolean"
                },
                "IsDefault": {
                    "type": "boolean"
                },
                "AllowUseQtyForFBAShipments": {
                    "type": "boolean"
                },
                "EnforceBins": {
                    "type": "boolean"
                },
                "ShowEnforceBins": {
                    "type": "boolean"
                },
                "DropShipCentralWarehouseCodeVisible": {
                    "type": "boolean"
                },
                "DropShipCentralWarehouseCode": {
                    "type": "string"
                },
                "ExcludeFromInventoryReports": {
                    "type": "boolean"
                },
                "IgnoreInventoryWhenCalculatingAverageCostVisible": {
                    "type": "boolean"
                },
                "IgnoreInventoryWhenCalculatingAverageCost": {
                    "type": "boolean"
                },
                "ManageBinsVisible": {
                    "type": "boolean"
                },
                "IsModified": {
                    "type": "boolean"
                }
            }
        },
        "SellerCloud.Delta.Models.Details.Concrete.Common.AddressAdvancedDtoWithSeparateAdrrLines": {
            "type": "object",
            "properties": {
                "Address": {
                    "type": "string"
                },
                "FirstName": {
                    "type": "string"
                },
                "LastName": {
                    "type": "string"
                },
                "MiddleName": {
                    "type": "string"
                },
                "ZipCode": {
                    "type": "string"
                },
                "City": {
                    "type": "string"
                },
                "Country": {
                    "type": "string"
                },
                "ContactName": {
                    "type": "string"
                },
                "Business": {
                    "type": "string"
                },
                "Address2": {
                    "type": "string"
                },
                "Fax": {
                    "type": "string"
                },
                "IsModified": {
                    "type": "boolean"
                },
                "Region": {
                    "type": "string"
                },
                "State": {
                    "type": "string"
                },
                "Phone": {
                    "type": "string"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Warehouse.WarehouseFilters": {
            "type": "object",
            "properties": {
                "WarehouseIds": {
                    "description": "Warehouse Ids",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "WarehouseType": {
                    "format": "int32",
                    "description": "Warehouse type 0 = Normal ,  1 = FBA ,  2 = Un_Tested ,  3 = Interim ,  4 = DropShip ,  5 = NewEgg ,  6 = Cdiscount ,  7 = WFS ",
                    "enum": [0, 1, 2, 3, 4, 5, 6, 7],
                    "type": "integer",
                    "x-enumNames": [
                        "Normal",
                        "FBA",
                        "Un_Tested",
                        "Interim",
                        "DropShip",
                        "NewEgg",
                        "Cdiscount",
                        "WFS"
                    ]
                },
                "Name": {
                    "description": "Name of warehouse",
                    "type": "string"
                },
                "IsDefault": {
                    "format": "int32",
                    "description": "Is a default warehouse 0 = All ,  1 = Yes ,  2 = No ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["All", "Yes", "No"]
                },
                "IsSellable": {
                    "format": "int32",
                    "description": "Is sellable warehouse 0 = All ,  1 = Yes ,  2 = No ",
                    "enum": [0, 1, 2],
                    "type": "integer",
                    "x-enumNames": ["All", "Yes", "No"]
                },
                "PageNumber": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SellerCloud.Delta.Models.ClientAPI.Base.GetAllResponse[CoreWebAdmin.Delta.Manage.Concrete.ManageWarehouseDto]": {
            "type": "object",
            "properties": {
                "Items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CoreWebAdmin.Delta.Manage.Concrete.ManageWarehouseDto"
                    }
                },
                "TotalResults": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "CoreWebAdmin.Delta.Manage.Concrete.ManageWarehouseDto": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string"
                },
                "IsDefault": {
                    "type": "boolean"
                },
                "WarehouseType": {
                    "format": "int32",
                    "description": " 0 = Normal ,  1 = FBA ,  2 = Un_Tested ,  3 = Interim ,  4 = DropShip ,  5 = NewEgg ,  6 = Cdiscount ,  7 = WFS ",
                    "enum": [0, 1, 2, 3, 4, 5, 6, 7],
                    "type": "integer",
                    "x-enumNames": [
                        "Normal",
                        "FBA",
                        "Un_Tested",
                        "Interim",
                        "DropShip",
                        "NewEgg",
                        "Cdiscount",
                        "WFS"
                    ]
                },
                "IsSellAble": {
                    "type": "boolean"
                },
                "QBWarehouseName": {
                    "type": "string"
                },
                "CreatedBy": {
                    "format": "int32",
                    "type": "integer"
                },
                "CreatedOn": {
                    "format": "date-time",
                    "type": "string"
                },
                "CreatedByUsername": {
                    "type": "string"
                },
                "CreatedByFirstName": {
                    "type": "string"
                },
                "CreatedByLastName": {
                    "type": "string"
                },
                "EnforceBins": {
                    "type": "boolean"
                },
                "WarehouseAddress": {
                    "$ref": "#/definitions/SellerCloud.Delta.Models.Details.Concrete.Common.AddressAdvancedDtoWithSeparateAdrrLines"
                },
                "ID": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "Token": {
            "type": "apiKey",
            "description": "Filling bearer token here",
            "name": "Authorization",
            "in": "header"
        }
    }
}
